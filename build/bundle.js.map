{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/FacetList.svelte","../../src/Hits.svelte","../../node_modules/algoliasearch/dist/algoliasearch.umd.js","../../node_modules/algoliasearch-helper/src/functions/merge.js","../../node_modules/algoliasearch-helper/src/functions/defaultsPure.js","../../node_modules/algoliasearch-helper/src/functions/intersection.js","../../node_modules/algoliasearch-helper/src/functions/find.js","../../node_modules/algoliasearch-helper/src/functions/valToNumber.js","../../node_modules/algoliasearch-helper/src/functions/omit.js","../../node_modules/algoliasearch-helper/src/functions/objectHasKeys.js","../../node_modules/algoliasearch-helper/src/SearchParameters/RefinementList.js","../../node_modules/algoliasearch-helper/src/SearchParameters/index.js","../../node_modules/algoliasearch-helper/src/utils/isValidUserToken.js","../../node_modules/algoliasearch-helper/src/functions/orderBy.js","../../node_modules/algoliasearch-helper/src/functions/compact.js","../../node_modules/algoliasearch-helper/src/functions/findIndex.js","../../node_modules/algoliasearch-helper/src/functions/formatSort.js","../../node_modules/algoliasearch-helper/src/functions/escapeFacetValue.js","../../node_modules/algoliasearch-helper/src/SearchResults/generate-hierarchical-tree.js","../../node_modules/algoliasearch-helper/src/SearchResults/index.js","../../node_modules/@algolia/events/events.js","../../node_modules/algoliasearch-helper/src/functions/inherits.js","../../node_modules/algoliasearch-helper/src/DerivedHelper/index.js","../../node_modules/algoliasearch-helper/src/requestBuilder.js","../../node_modules/algoliasearch-helper/src/version.js","../../node_modules/algoliasearch-helper/src/algoliasearch.helper.js","../../node_modules/algoliasearch-helper/index.js","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape_attribute_value(value.toString())}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.47.0' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nfunction validate_dynamic_element(tag) {\n    if (tag && typeof tag !== 'string') {\n        throw new Error('<svelte:element> expects \"this\" attribute to be a string.');\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_dynamic_element, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script>\n\texport let facets\n\texport let results\n\texport let helper\n\n\tlet rawList = {}\n\n\tfunction activateFacet (facetsName, selectedFacet) {\n\t\tif (facetsName === 'stars_count') {\n\t\t\trawList[selectedFacet].forEach(item => helper.toggleRefinement(facetsName, item))\n\t\t} else {\n\t\t\thelper.toggleRefinement(facetsName, selectedFacet)\n\t\t}\n\t\thelper.search()\n\t}\n\n\tfunction getFacetValues (results, facetsName) {\n\t\tconst rawFacetValues = results.getFacetValues(facetsName)\n\t\tconst facetValues = facetsName === 'stars_count' ? getStarFaceValues(rawFacetValues) : rawFacetValues\n\t\treturn facetValues\n\t}\n\n\tfunction getStarFaceValues (values) {\n\t\tconst arr = [0, 1, 2, 3, 4, 5]\n\t\treturn arr.map(item => {\n\t\t\tconst re = new RegExp(`^${item}.*`)\n\t\t\tconst matching = values.filter(entry => re.test(entry.name))\n\t\t\tconst reduced = matching.reduce((obj, item) => {\n\t\t\t\tobj.count += item.count; obj.isRefined = obj.isRefined || item.isRefined; return obj\n\t\t\t}, { name: `${item}`, count: 0, isRefined: false})\n\t\t\trawList[item] = matching.map(item => item.name)\n\t\t\treturn reduced\n\t\t}).filter(item => item.count)\n\t}\n\n\tfunction getStarClasses (starIndex, score) {\n\t\tconst isWhole = (starIndex <= Math.floor(score))\n\t\tconst isHalf = (starIndex > Math.floor(score)) && (starIndex <= Math.ceil(score)) && (score - Math.floor(score) > 0.3)\n\n\t\treturn `${isWhole ? 'full' : ''} ${isHalf ? 'half' : ''}`\n\t}\n</script>\n\n<div>\n\t<div class=\"facet-list-name\">{facets.label}</div>\n\t<div class=\"facet-list-wrapper\">\n\t\t<ul class=\"facet-list\" id=\"{facets.name}\">\n\t\t\t{#if results}\n\t\t\t\t{#each getFacetValues(results, facets.name) as rawFacetValues}\n\t\t\t\t\t<li class=\"facet{rawFacetValues.isRefined ? ' checked' : ''}\" id={rawFacetValues.name} on:click=\"{() => activateFacet(facets.name, rawFacetValues.name)}\">\n\t\t\t\t\t\t{#if facets.name === 'stars_count'}\n\t\t\t\t\t\t\t<div class='stars-wrapper'>\n\t\t\t\t\t\t\t\t<div class='hit-stars'>\n\t\t\t\t\t\t\t\t\t{#each {length: 5} as item, i}\n\t\t\t\t\t\t\t\t\t\t<div class='star-{i+1} {getStarClasses(i+1, rawFacetValues.name)}'></div>\n\t\t\t\t\t\t\t\t\t{/each}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<span>{rawFacetValues.count}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{:else}\n\t\t\t\t\t\t\t{rawFacetValues.name} <span>{rawFacetValues.count}</span>\n\t\t\t\t\t\t{/if}\n\t\t\t\t\t</li>\n\t\t\t\t{/each}\n\t\t\t{/if}\n\t\t</ul>\n\t</div>\n</div>\n\n<style>\n.facet-list {\n\tlist-style: none;\n\t\tmax-height: 200px;\n\t\toverflow-x: auto;\n\t\tpadding: 0;\n\t\tmargin-top: 0;\n\t\tmargin-bottom: 0;\n}\n\n.facet-list-wrapper {\n\tpadding: 1em 0em;\n\tmargin-bottom: 2em;\n\tborder-bottom: 1px solid #efefef;\n}\n\n.facet-list li {\n\tpadding: 7px 7px;\n\tcursor: pointer;\n\tfont-size: 16px;\n}\n\n.facet:hover {\n\tbackground: #f7f7f7;\n\ttransition: 0.3s;\n}\n\n.facet span {\n\t\tfloat: right;\n\t\tcolor: #999;\n\t\tfont-size: 14px;\n\t\tfont-weight: 300;\n}\n\n.facet.checked {\n\tbackground: #2b61c4;\n\tborder-radius: 5px;\n\tcolor: white;\n\tmargin: 4px 0;\n}\n\n.facet.checked span {\n\tcolor: white;\n}\n\n.facet-list li input {\n\tmargin-right: 6px;\n}\n\n.stars-wrapper span {\n    margin-left: auto;\n    float: unset;\n}\n\n.stars-wrapper {\n    display: flex;\n}\n\n.stars-wrapper .hit-stars {\n\tmargin: 0;\n}\n\n.facet-list-name {\n    font-weight: 500;\n    font-size: 18px;\n}\n\n.hit-stars {\n\tdisplay: flex;\n\tmargin: 0 7px;\n}\n\n.hit-stars div {\n\tbackground-image: url('../star.svg');\n\tbackground-repeat: no-repeat;\n\twidth: 16px;\n\theight: 16px;\n\tbackground-position: center;\n\tbackground-size: contain;\n\tmargin: 0 1px;\n}\n\n.hit-stars div.full {\n\tbackground-image: url('../star-fill.svg');\n}\n\n.hit-stars div.half {\n\tbackground-image: url('../star-half.svg');\n}\n\n.facet.checked .hit-stars div {\n\tbackground-image: url('../star-invert.svg');\n\tbackground-repeat: no-repeat;\n\twidth: 16px;\n\theight: 16px;\n\tbackground-position: center;\n\tbackground-size: contain;\n\tmargin: 0 1px;\n}\n\n.facet.checked .hit-stars div.full {\n\tbackground-image: url('../star-fill-invert.svg');\n}\n\n.facet.checked .hit-stars div.half {\n\tbackground-image: url('../star-half-invert.svg');\n}\n</style>\n","<script>\n\texport let hit\n\n\tfunction getStarClasses (starIndex, score) {\n\t\tconst isWhole = (starIndex <= Math.floor(score))\n\t\tconst isHalf = (starIndex > Math.floor(score)) && (starIndex <= Math.ceil(score)) && (score - Math.floor(score) > 0.3)\n\n\t\treturn `${isWhole ? 'full' : ''} ${isHalf ? 'half' : ''}`\n\t}\n</script>\n\n<li class='hit'>\n\t<a class='hit-a' href='{hit.reserve_url.value}'>\n\t\t<img src='https://resizer.otstatic.com/v2/profiles/legacy/{hit.reserve_url.value.replace(/^.*\\?rid=/, '')}.jpg'/>\n\t\t<div class='hit-container'>\n\t\t\t<div class='hit-name'>{@html hit.name.value}</div>\n\t\t\t<div class='hit-reviews'>\n\t\t\t\t<span>{hit.stars_count.value}</span>\n\t\t\t\t<div class='hit-stars'>\n\t\t\t\t\t{#each {length: 5} as item, i}\n\t\t\t\t\t\t<div class='star-{i+1} {getStarClasses(i+1, hit.stars_count.value)}'></div>\n\t\t\t\t\t{/each}\n\t\t\t\t</div>\n\t\t\t\t({hit.reviews_count.value} reviews)\n\t\t\t</div>\n\t\t\t<div class='hit-info'><span>{@html hit.food_type.value}</span><span class='middle'>{@html hit.neighborhood.value}</span><span>{@html hit.price_range.value}</span></div>\n\t\t\t<div class='hit-cuisine'>{@html hit.dining_style.value}</div>\n\t\t</div>\n\t<a/>\n</li>\n\n<style>\n\tli {\n\t\tpadding: 8px 0;\n\t}\n\n\t.hit-reviews {\n    display: flex;\n\t\talign-items: center;\n\t}\n\n\t.hit-stars {\n\t\tdisplay: flex;\n\t\tmargin: 0 7px;\n\t}\n\n\t.hit-stars div {\n\t\tbackground-image: url('../star.svg');\n\t\tbackground-repeat: no-repeat;\n\t\twidth: 16px;\n    height: 16px;\n    background-position: center;\n    background-size: contain;\n\t\tmargin: 0 1px;\n\t}\n\n\t.hit-stars div.full {\n\t\tbackground-image: url('../star-fill.svg');\n\t}\n\n\t.hit-stars div.half {\n\t\tbackground-image: url('../star-half.svg');\n\t}\n\n\t.hit img {\n\t  width: 100%;\n\t  border-radius: 5px;\n\t}\n\n\t.hit-container {\n\t    padding-left: 24px;\n\t    color: #777;\n\t}\n\n\t.hit-container .hit-name {\n\t    font-size: 18px;\n\t    font-weight: 500;\n\t    margin-bottom: 10px;\n\t    color: #000;\n\t}\n\n\t.hit-a {\n\t  display: grid;\n\t    grid-template-columns: 1fr 2.5fr;\n\t    align-items: center;\n\t    text-decoration: none;\n\t    border-radius: 5px;\n\t}\n\n\t.hit-a:hover {\n\t  background: #f7f7f7;\n\t  transition: 0.3s;\n\t}\n\n\t.hit-info {\n\t    margin: 5px 0;\n\t}\n\n\t.hit-info .middle {\n\t  margin: 0 10px;\n\t    padding: 0 10px;\n\t    border-left: 1px solid #ccc;\n\t    border-right: 1px solid #ccc;\n\t}\n\n\t.hit-name em {\n\t  font-weight: 800;\n\t  font-style: normal;\n\t}\n</style>\n","/*! algoliasearch.umd.js | 4.13.0 | © Algolia, inc. | https://github.com/algolia/algoliasearch-client-javascript */\n!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):(t=t||self).algoliasearch=e()}(this,(function(){\"use strict\";function t(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function e(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function r(r){for(var n=1;n<arguments.length;n++){var a=null!=arguments[n]?arguments[n]:{};n%2?e(Object(a),!0).forEach((function(e){t(r,e,a[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(r,Object.getOwnPropertyDescriptors(a)):e(Object(a)).forEach((function(t){Object.defineProperty(r,t,Object.getOwnPropertyDescriptor(a,t))}))}return r}function n(t,e){if(null==t)return{};var r,n,a=function(t,e){if(null==t)return{};var r,n,a={},o=Object.keys(t);for(n=0;n<o.length;n++)r=o[n],e.indexOf(r)>=0||(a[r]=t[r]);return a}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(n=0;n<o.length;n++)r=o[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(a[r]=t[r])}return a}function a(t,e){return function(t){if(Array.isArray(t))return t}(t)||function(t,e){if(!(Symbol.iterator in Object(t)||\"[object Arguments]\"===Object.prototype.toString.call(t)))return;var r=[],n=!0,a=!1,o=void 0;try{for(var i,u=t[Symbol.iterator]();!(n=(i=u.next()).done)&&(r.push(i.value),!e||r.length!==e);n=!0);}catch(t){a=!0,o=t}finally{try{n||null==u.return||u.return()}finally{if(a)throw o}}return r}(t,e)||function(){throw new TypeError(\"Invalid attempt to destructure non-iterable instance\")}()}function o(t){return function(t){if(Array.isArray(t)){for(var e=0,r=new Array(t.length);e<t.length;e++)r[e]=t[e];return r}}(t)||function(t){if(Symbol.iterator in Object(t)||\"[object Arguments]\"===Object.prototype.toString.call(t))return Array.from(t)}(t)||function(){throw new TypeError(\"Invalid attempt to spread non-iterable instance\")}()}function i(t){var e,r=\"algoliasearch-client-js-\".concat(t.key),n=function(){return void 0===e&&(e=t.localStorage||window.localStorage),e},o=function(){return JSON.parse(n().getItem(r)||\"{}\")};return{get:function(t,e){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{miss:function(){return Promise.resolve()}};return Promise.resolve().then((function(){var r=JSON.stringify(t),n=o()[r];return Promise.all([n||e(),void 0!==n])})).then((function(t){var e=a(t,2),n=e[0],o=e[1];return Promise.all([n,o||r.miss(n)])})).then((function(t){return a(t,1)[0]}))},set:function(t,e){return Promise.resolve().then((function(){var a=o();return a[JSON.stringify(t)]=e,n().setItem(r,JSON.stringify(a)),e}))},delete:function(t){return Promise.resolve().then((function(){var e=o();delete e[JSON.stringify(t)],n().setItem(r,JSON.stringify(e))}))},clear:function(){return Promise.resolve().then((function(){n().removeItem(r)}))}}}function u(t){var e=o(t.caches),r=e.shift();return void 0===r?{get:function(t,e){var r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{miss:function(){return Promise.resolve()}},n=e();return n.then((function(t){return Promise.all([t,r.miss(t)])})).then((function(t){return a(t,1)[0]}))},set:function(t,e){return Promise.resolve(e)},delete:function(t){return Promise.resolve()},clear:function(){return Promise.resolve()}}:{get:function(t,n){var a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{miss:function(){return Promise.resolve()}};return r.get(t,n,a).catch((function(){return u({caches:e}).get(t,n,a)}))},set:function(t,n){return r.set(t,n).catch((function(){return u({caches:e}).set(t,n)}))},delete:function(t){return r.delete(t).catch((function(){return u({caches:e}).delete(t)}))},clear:function(){return r.clear().catch((function(){return u({caches:e}).clear()}))}}}function s(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{serializable:!0},e={};return{get:function(r,n){var a=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{miss:function(){return Promise.resolve()}},o=JSON.stringify(r);if(o in e)return Promise.resolve(t.serializable?JSON.parse(e[o]):e[o]);var i=n(),u=a&&a.miss||function(){return Promise.resolve()};return i.then((function(t){return u(t)})).then((function(){return i}))},set:function(r,n){return e[JSON.stringify(r)]=t.serializable?JSON.stringify(n):n,Promise.resolve(n)},delete:function(t){return delete e[JSON.stringify(t)],Promise.resolve()},clear:function(){return e={},Promise.resolve()}}}function c(t,e,r){var n={\"x-algolia-api-key\":r,\"x-algolia-application-id\":e};return{headers:function(){return t===m.WithinHeaders?n:{}},queryParameters:function(){return t===m.WithinQueryParameters?n:{}}}}function f(t){var e=0;return t((function r(){return e++,new Promise((function(n){setTimeout((function(){n(t(r))}),Math.min(100*e,1e3))}))}))}function d(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:function(t,e){return Promise.resolve()};return Object.assign(t,{wait:function(r){return d(t.then((function(t){return Promise.all([e(t,r),t])})).then((function(t){return t[1]})))}})}function l(t){for(var e=t.length-1;e>0;e--){var r=Math.floor(Math.random()*(e+1)),n=t[e];t[e]=t[r],t[r]=n}return t}function p(t,e){return e?(Object.keys(e).forEach((function(r){t[r]=e[r](t)})),t):t}function h(t){for(var e=arguments.length,r=new Array(e>1?e-1:0),n=1;n<e;n++)r[n-1]=arguments[n];var a=0;return t.replace(/%s/g,(function(){return encodeURIComponent(r[a++])}))}var m={WithinQueryParameters:0,WithinHeaders:1};function y(t,e){var r=t||{},n=r.data||{};return Object.keys(r).forEach((function(t){-1===[\"timeout\",\"headers\",\"queryParameters\",\"data\",\"cacheable\"].indexOf(t)&&(n[t]=r[t])})),{data:Object.entries(n).length>0?n:void 0,timeout:r.timeout||e,headers:r.headers||{},queryParameters:r.queryParameters||{},cacheable:r.cacheable}}var g={Read:1,Write:2,Any:3},v=1,b=2,P=3;function w(t){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:v;return r(r({},t),{},{status:e,lastUpdate:Date.now()})}function O(t){return\"string\"==typeof t?{protocol:\"https\",url:t,accept:g.Any}:{protocol:t.protocol||\"https\",url:t.url,accept:t.accept||g.Any}}var I=\"DELETE\",x=\"GET\",j=\"POST\",D=\"PUT\";function q(t,e){return Promise.all(e.map((function(e){return t.get(e,(function(){return Promise.resolve(w(e))}))}))).then((function(t){var r=t.filter((function(t){return function(t){return t.status===v||Date.now()-t.lastUpdate>12e4}(t)})),n=t.filter((function(t){return function(t){return t.status===P&&Date.now()-t.lastUpdate<=12e4}(t)})),a=[].concat(o(r),o(n));return{getTimeout:function(t,e){return(0===n.length&&0===t?1:n.length+3+t)*e},statelessHosts:a.length>0?a.map((function(t){return O(t)})):e}}))}function S(t,e,n,a){var i=[],u=function(t,e){if(t.method===x||void 0===t.data&&void 0===e.data)return;var n=Array.isArray(t.data)?t.data:r(r({},t.data),e.data);return JSON.stringify(n)}(n,a),s=function(t,e){var n=r(r({},t.headers),e.headers),a={};return Object.keys(n).forEach((function(t){var e=n[t];a[t.toLowerCase()]=e})),a}(t,a),c=n.method,f=n.method!==x?{}:r(r({},n.data),a.data),d=r(r(r({\"x-algolia-agent\":t.userAgent.value},t.queryParameters),f),a.queryParameters),l=0,p=function e(r,o){var f=r.pop();if(void 0===f)throw{name:\"RetryError\",message:\"Unreachable hosts - your application id may be incorrect. If the error persists, contact support@algolia.com.\",transporterStackTrace:R(i)};var p={data:u,headers:s,method:c,url:N(f,n.path,d),connectTimeout:o(l,t.timeouts.connect),responseTimeout:o(l,a.timeout)},h=function(t){var e={request:p,response:t,host:f,triesLeft:r.length};return i.push(e),e},m={onSuccess:function(t){return function(t){try{return JSON.parse(t.content)}catch(e){throw function(t,e){return{name:\"DeserializationError\",message:t,response:e}}(e.message,t)}}(t)},onRetry:function(n){var a=h(n);return n.isTimedOut&&l++,Promise.all([t.logger.info(\"Retryable failure\",A(a)),t.hostsCache.set(f,w(f,n.isTimedOut?P:b))]).then((function(){return e(r,o)}))},onFail:function(t){throw h(t),function(t,e){var r=t.content,n=t.status,a=r;try{a=JSON.parse(r).message}catch(t){}return function(t,e,r){return{name:\"ApiError\",message:t,status:e,transporterStackTrace:r}}(a,n,e)}(t,R(i))}};return t.requester.send(p).then((function(t){return function(t,e){return function(t){var e=t.status;return t.isTimedOut||function(t){var e=t.isTimedOut,r=t.status;return!e&&0==~~r}(t)||2!=~~(e/100)&&4!=~~(e/100)}(t)?e.onRetry(t):2==~~(t.status/100)?e.onSuccess(t):e.onFail(t)}(t,m)}))};return q(t.hostsCache,e).then((function(t){return p(o(t.statelessHosts).reverse(),t.getTimeout)}))}function k(t){var e=t.hostsCache,r=t.logger,n=t.requester,o=t.requestsCache,i=t.responsesCache,u=t.timeouts,s=t.userAgent,c=t.hosts,f=t.queryParameters,d={hostsCache:e,logger:r,requester:n,requestsCache:o,responsesCache:i,timeouts:u,userAgent:s,headers:t.headers,queryParameters:f,hosts:c.map((function(t){return O(t)})),read:function(t,e){var r=y(e,d.timeouts.read),n=function(){return S(d,d.hosts.filter((function(t){return 0!=(t.accept&g.Read)})),t,r)};if(!0!==(void 0!==r.cacheable?r.cacheable:t.cacheable))return n();var o={request:t,mappedRequestOptions:r,transporter:{queryParameters:d.queryParameters,headers:d.headers}};return d.responsesCache.get(o,(function(){return d.requestsCache.get(o,(function(){return d.requestsCache.set(o,n()).then((function(t){return Promise.all([d.requestsCache.delete(o),t])}),(function(t){return Promise.all([d.requestsCache.delete(o),Promise.reject(t)])})).then((function(t){var e=a(t,2);e[0];return e[1]}))}))}),{miss:function(t){return d.responsesCache.set(o,t)}})},write:function(t,e){return S(d,d.hosts.filter((function(t){return 0!=(t.accept&g.Write)})),t,y(e,d.timeouts.write))}};return d}function T(t){var e={value:\"Algolia for JavaScript (\".concat(t,\")\"),add:function(t){var r=\"; \".concat(t.segment).concat(void 0!==t.version?\" (\".concat(t.version,\")\"):\"\");return-1===e.value.indexOf(r)&&(e.value=\"\".concat(e.value).concat(r)),e}};return e}function N(t,e,r){var n=E(r),a=\"\".concat(t.protocol,\"://\").concat(t.url,\"/\").concat(\"/\"===e.charAt(0)?e.substr(1):e);return n.length&&(a+=\"?\".concat(n)),a}function E(t){return Object.keys(t).map((function(e){return h(\"%s=%s\",e,(r=t[e],\"[object Object]\"===Object.prototype.toString.call(r)||\"[object Array]\"===Object.prototype.toString.call(r)?JSON.stringify(t[e]):t[e]));var r})).join(\"&\")}function R(t){return t.map((function(t){return A(t)}))}function A(t){var e=t.request.headers[\"x-algolia-api-key\"]?{\"x-algolia-api-key\":\"*****\"}:{};return r(r({},t),{},{request:r(r({},t.request),{},{headers:r(r({},t.request.headers),e)})})}var C=function(t){return function(e,r){return t.transporter.write({method:j,path:\"2/abtests\",data:e},r)}},U=function(t){return function(e,r){return t.transporter.write({method:I,path:h(\"2/abtests/%s\",e)},r)}},z=function(t){return function(e,r){return t.transporter.read({method:x,path:h(\"2/abtests/%s\",e)},r)}},J=function(t){return function(e){return t.transporter.read({method:x,path:\"2/abtests\"},e)}},F=function(t){return function(e,r){return t.transporter.write({method:j,path:h(\"2/abtests/%s/stop\",e)},r)}},H=function(t){return function(e){return t.transporter.read({method:x,path:\"1/strategies/personalization\"},e)}},M=function(t){return function(e,r){return t.transporter.write({method:j,path:\"1/strategies/personalization\",data:e},r)}};function K(t){return function e(r){return t.request(r).then((function(n){if(void 0!==t.batch&&t.batch(n.hits),!t.shouldStop(n))return n.cursor?e({cursor:n.cursor}):e({page:(r.page||0)+1})}))}({})}var W=function(t){return function(e,a){var o=a||{},i=o.queryParameters,u=n(o,[\"queryParameters\"]),s=r({acl:e},void 0!==i?{queryParameters:i}:{});return d(t.transporter.write({method:j,path:\"1/keys\",data:s},u),(function(e,r){return f((function(n){return tt(t)(e.key,r).catch((function(t){if(404!==t.status)throw t;return n()}))}))}))}},B=function(t){return function(e,r,n){var a=y(n);return a.queryParameters[\"X-Algolia-User-ID\"]=e,t.transporter.write({method:j,path:\"1/clusters/mapping\",data:{cluster:r}},a)}},Q=function(t){return function(e,r,n){return t.transporter.write({method:j,path:\"1/clusters/mapping/batch\",data:{users:e,cluster:r}},n)}},G=function(t){return function(e,r){return d(t.transporter.write({method:j,path:h(\"/1/dictionaries/%s/batch\",e),data:{clearExistingDictionaryEntries:!0,requests:{action:\"addEntry\",body:[]}}},r),(function(e,r){return jt(t)(e.taskID,r)}))}},L=function(t){return function(e,r,n){return d(t.transporter.write({method:j,path:h(\"1/indexes/%s/operation\",e),data:{operation:\"copy\",destination:r}},n),(function(r,n){return ut(t)(e,{methods:{waitTask:de}}).waitTask(r.taskID,n)}))}},V=function(t){return function(e,n,a){return L(t)(e,n,r(r({},a),{},{scope:[pe.Rules]}))}},_=function(t){return function(e,n,a){return L(t)(e,n,r(r({},a),{},{scope:[pe.Settings]}))}},X=function(t){return function(e,n,a){return L(t)(e,n,r(r({},a),{},{scope:[pe.Synonyms]}))}},Y=function(t){return function(e,r){return e.method===x?t.transporter.read(e,r):t.transporter.write(e,r)}},Z=function(t){return function(e,r){return d(t.transporter.write({method:I,path:h(\"1/keys/%s\",e)},r),(function(r,n){return f((function(r){return tt(t)(e,n).then(r).catch((function(t){if(404!==t.status)throw t}))}))}))}},$=function(t){return function(e,r,n){var a=r.map((function(t){return{action:\"deleteEntry\",body:{objectID:t}}}));return d(t.transporter.write({method:j,path:h(\"/1/dictionaries/%s/batch\",e),data:{clearExistingDictionaryEntries:!1,requests:a}},n),(function(e,r){return jt(t)(e.taskID,r)}))}},tt=function(t){return function(e,r){return t.transporter.read({method:x,path:h(\"1/keys/%s\",e)},r)}},et=function(t){return function(e,r){return t.transporter.read({method:x,path:h(\"1/task/%s\",e.toString())},r)}},rt=function(t){return function(e){return t.transporter.read({method:x,path:\"/1/dictionaries/*/settings\"},e)}},nt=function(t){return function(e){return t.transporter.read({method:x,path:\"1/logs\"},e)}},at=function(t){return function(e){return t.transporter.read({method:x,path:\"1/clusters/mapping/top\"},e)}},ot=function(t){return function(e,r){return t.transporter.read({method:x,path:h(\"1/clusters/mapping/%s\",e)},r)}},it=function(t){return function(e){var r=e||{},a=r.retrieveMappings,o=n(r,[\"retrieveMappings\"]);return!0===a&&(o.getClusters=!0),t.transporter.read({method:x,path:\"1/clusters/mapping/pending\"},o)}},ut=function(t){return function(e){var r=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{},n={transporter:t.transporter,appId:t.appId,indexName:e};return p(n,r.methods)}},st=function(t){return function(e){return t.transporter.read({method:x,path:\"1/keys\"},e)}},ct=function(t){return function(e){return t.transporter.read({method:x,path:\"1/clusters\"},e)}},ft=function(t){return function(e){return t.transporter.read({method:x,path:\"1/indexes\"},e)}},dt=function(t){return function(e){return t.transporter.read({method:x,path:\"1/clusters/mapping\"},e)}},lt=function(t){return function(e,r,n){return d(t.transporter.write({method:j,path:h(\"1/indexes/%s/operation\",e),data:{operation:\"move\",destination:r}},n),(function(r,n){return ut(t)(e,{methods:{waitTask:de}}).waitTask(r.taskID,n)}))}},pt=function(t){return function(e,r){return d(t.transporter.write({method:j,path:\"1/indexes/*/batch\",data:{requests:e}},r),(function(e,r){return Promise.all(Object.keys(e.taskID).map((function(n){return ut(t)(n,{methods:{waitTask:de}}).waitTask(e.taskID[n],r)})))}))}},ht=function(t){return function(e,r){return t.transporter.read({method:j,path:\"1/indexes/*/objects\",data:{requests:e}},r)}},mt=function(t){return function(e,n){var a=e.map((function(t){return r(r({},t),{},{params:E(t.params||{})})}));return t.transporter.read({method:j,path:\"1/indexes/*/queries\",data:{requests:a},cacheable:!0},n)}},yt=function(t){return function(e,a){return Promise.all(e.map((function(e){var o=e.params,i=o.facetName,u=o.facetQuery,s=n(o,[\"facetName\",\"facetQuery\"]);return ut(t)(e.indexName,{methods:{searchForFacetValues:ue}}).searchForFacetValues(i,u,r(r({},a),s))})))}},gt=function(t){return function(e,r){var n=y(r);return n.queryParameters[\"X-Algolia-User-ID\"]=e,t.transporter.write({method:I,path:\"1/clusters/mapping\"},n)}},vt=function(t){return function(e,r,n){var a=r.map((function(t){return{action:\"addEntry\",body:t}}));return d(t.transporter.write({method:j,path:h(\"/1/dictionaries/%s/batch\",e),data:{clearExistingDictionaryEntries:!0,requests:a}},n),(function(e,r){return jt(t)(e.taskID,r)}))}},bt=function(t){return function(e,r){return d(t.transporter.write({method:j,path:h(\"1/keys/%s/restore\",e)},r),(function(r,n){return f((function(r){return tt(t)(e,n).catch((function(t){if(404!==t.status)throw t;return r()}))}))}))}},Pt=function(t){return function(e,r,n){var a=r.map((function(t){return{action:\"addEntry\",body:t}}));return d(t.transporter.write({method:j,path:h(\"/1/dictionaries/%s/batch\",e),data:{clearExistingDictionaryEntries:!1,requests:a}},n),(function(e,r){return jt(t)(e.taskID,r)}))}},wt=function(t){return function(e,r,n){return t.transporter.read({method:j,path:h(\"/1/dictionaries/%s/search\",e),data:{query:r},cacheable:!0},n)}},Ot=function(t){return function(e,r){return t.transporter.read({method:j,path:\"1/clusters/mapping/search\",data:{query:e}},r)}},It=function(t){return function(e,r){return d(t.transporter.write({method:D,path:\"/1/dictionaries/*/settings\",data:e},r),(function(e,r){return jt(t)(e.taskID,r)}))}},xt=function(t){return function(e,r){var a=Object.assign({},r),o=r||{},i=o.queryParameters,u=n(o,[\"queryParameters\"]),s=i?{queryParameters:i}:{},c=[\"acl\",\"indexes\",\"referers\",\"restrictSources\",\"queryParameters\",\"description\",\"maxQueriesPerIPPerHour\",\"maxHitsPerQuery\"];return d(t.transporter.write({method:D,path:h(\"1/keys/%s\",e),data:s},u),(function(r,n){return f((function(r){return tt(t)(e,n).then((function(t){return function(t){return Object.keys(a).filter((function(t){return-1!==c.indexOf(t)})).every((function(e){return t[e]===a[e]}))}(t)?Promise.resolve():r()}))}))}))}},jt=function(t){return function(e,r){return f((function(n){return et(t)(e,r).then((function(t){return\"published\"!==t.status?n():void 0}))}))}},Dt=function(t){return function(e,r){return d(t.transporter.write({method:j,path:h(\"1/indexes/%s/batch\",t.indexName),data:{requests:e}},r),(function(e,r){return de(t)(e.taskID,r)}))}},qt=function(t){return function(e){return K(r(r({shouldStop:function(t){return void 0===t.cursor}},e),{},{request:function(r){return t.transporter.read({method:j,path:h(\"1/indexes/%s/browse\",t.indexName),data:r},e)}}))}},St=function(t){return function(e){var n=r({hitsPerPage:1e3},e);return K(r(r({shouldStop:function(t){return t.hits.length<n.hitsPerPage}},n),{},{request:function(e){return se(t)(\"\",r(r({},n),e)).then((function(t){return r(r({},t),{},{hits:t.hits.map((function(t){return delete t._highlightResult,t}))})}))}}))}},kt=function(t){return function(e){var n=r({hitsPerPage:1e3},e);return K(r(r({shouldStop:function(t){return t.hits.length<n.hitsPerPage}},n),{},{request:function(e){return ce(t)(\"\",r(r({},n),e)).then((function(t){return r(r({},t),{},{hits:t.hits.map((function(t){return delete t._highlightResult,t}))})}))}}))}},Tt=function(t){return function(e,r,a){var o=a||{},i=o.batchSize,u=n(o,[\"batchSize\"]),s={taskIDs:[],objectIDs:[]};return d(function n(){var a,o=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,c=[];for(a=o;a<e.length&&(c.push(e[a]),c.length!==(i||1e3));a++);return 0===c.length?Promise.resolve(s):Dt(t)(c.map((function(t){return{action:r,body:t}})),u).then((function(t){return s.objectIDs=s.objectIDs.concat(t.objectIDs),s.taskIDs.push(t.taskID),a++,n(a)}))}(),(function(e,r){return Promise.all(e.taskIDs.map((function(e){return de(t)(e,r)})))}))}},Nt=function(t){return function(e){return d(t.transporter.write({method:j,path:h(\"1/indexes/%s/clear\",t.indexName)},e),(function(e,r){return de(t)(e.taskID,r)}))}},Et=function(t){return function(e){var r=e||{},a=r.forwardToReplicas,o=y(n(r,[\"forwardToReplicas\"]));return a&&(o.queryParameters.forwardToReplicas=1),d(t.transporter.write({method:j,path:h(\"1/indexes/%s/rules/clear\",t.indexName)},o),(function(e,r){return de(t)(e.taskID,r)}))}},Rt=function(t){return function(e){var r=e||{},a=r.forwardToReplicas,o=y(n(r,[\"forwardToReplicas\"]));return a&&(o.queryParameters.forwardToReplicas=1),d(t.transporter.write({method:j,path:h(\"1/indexes/%s/synonyms/clear\",t.indexName)},o),(function(e,r){return de(t)(e.taskID,r)}))}},At=function(t){return function(e,r){return d(t.transporter.write({method:j,path:h(\"1/indexes/%s/deleteByQuery\",t.indexName),data:e},r),(function(e,r){return de(t)(e.taskID,r)}))}},Ct=function(t){return function(e){return d(t.transporter.write({method:I,path:h(\"1/indexes/%s\",t.indexName)},e),(function(e,r){return de(t)(e.taskID,r)}))}},Ut=function(t){return function(e,r){return d(zt(t)([e],r).then((function(t){return{taskID:t.taskIDs[0]}})),(function(e,r){return de(t)(e.taskID,r)}))}},zt=function(t){return function(e,r){var n=e.map((function(t){return{objectID:t}}));return Tt(t)(n,le.DeleteObject,r)}},Jt=function(t){return function(e,r){var a=r||{},o=a.forwardToReplicas,i=y(n(a,[\"forwardToReplicas\"]));return o&&(i.queryParameters.forwardToReplicas=1),d(t.transporter.write({method:I,path:h(\"1/indexes/%s/rules/%s\",t.indexName,e)},i),(function(e,r){return de(t)(e.taskID,r)}))}},Ft=function(t){return function(e,r){var a=r||{},o=a.forwardToReplicas,i=y(n(a,[\"forwardToReplicas\"]));return o&&(i.queryParameters.forwardToReplicas=1),d(t.transporter.write({method:I,path:h(\"1/indexes/%s/synonyms/%s\",t.indexName,e)},i),(function(e,r){return de(t)(e.taskID,r)}))}},Ht=function(t){return function(e){return Lt(t)(e).then((function(){return!0})).catch((function(t){if(404!==t.status)throw t;return!1}))}},Mt=function(t){return function(e,r,n){return t.transporter.read({method:j,path:h(\"1/answers/%s/prediction\",t.indexName),data:{query:e,queryLanguages:r},cacheable:!0},n)}},Kt=function(t){return function(e,o){var i=o||{},u=i.query,s=i.paginate,c=n(i,[\"query\",\"paginate\"]),f=0;return function n(){return ie(t)(u||\"\",r(r({},c),{},{page:f})).then((function(t){for(var r=0,o=Object.entries(t.hits);r<o.length;r++){var i=a(o[r],2),u=i[0],c=i[1];if(e(c))return{object:c,position:parseInt(u,10),page:f}}if(f++,!1===s||f>=t.nbPages)throw{name:\"ObjectNotFoundError\",message:\"Object not found.\"};return n()}))}()}},Wt=function(t){return function(e,r){return t.transporter.read({method:x,path:h(\"1/indexes/%s/%s\",t.indexName,e)},r)}},Bt=function(){return function(t,e){for(var r=0,n=Object.entries(t.hits);r<n.length;r++){var o=a(n[r],2),i=o[0];if(o[1].objectID===e)return parseInt(i,10)}return-1}},Qt=function(t){return function(e,a){var o=a||{},i=o.attributesToRetrieve,u=n(o,[\"attributesToRetrieve\"]),s=e.map((function(e){return r({indexName:t.indexName,objectID:e},i?{attributesToRetrieve:i}:{})}));return t.transporter.read({method:j,path:\"1/indexes/*/objects\",data:{requests:s}},u)}},Gt=function(t){return function(e,r){return t.transporter.read({method:x,path:h(\"1/indexes/%s/rules/%s\",t.indexName,e)},r)}},Lt=function(t){return function(e){return t.transporter.read({method:x,path:h(\"1/indexes/%s/settings\",t.indexName),data:{getVersion:2}},e)}},Vt=function(t){return function(e,r){return t.transporter.read({method:x,path:h(\"1/indexes/%s/synonyms/%s\",t.indexName,e)},r)}},_t=function(t){return function(e,r){return d(Xt(t)([e],r).then((function(t){return{objectID:t.objectIDs[0],taskID:t.taskIDs[0]}})),(function(e,r){return de(t)(e.taskID,r)}))}},Xt=function(t){return function(e,r){var a=r||{},o=a.createIfNotExists,i=n(a,[\"createIfNotExists\"]),u=o?le.PartialUpdateObject:le.PartialUpdateObjectNoCreate;return Tt(t)(e,u,i)}},Yt=function(t){return function(e,i){var u=i||{},s=u.safe,c=u.autoGenerateObjectIDIfNotExist,f=u.batchSize,l=n(u,[\"safe\",\"autoGenerateObjectIDIfNotExist\",\"batchSize\"]),p=function(e,r,n,a){return d(t.transporter.write({method:j,path:h(\"1/indexes/%s/operation\",e),data:{operation:n,destination:r}},a),(function(e,r){return de(t)(e.taskID,r)}))},m=Math.random().toString(36).substring(7),y=\"\".concat(t.indexName,\"_tmp_\").concat(m),g=ee({appId:t.appId,transporter:t.transporter,indexName:y}),v=[],b=p(t.indexName,y,\"copy\",r(r({},l),{},{scope:[\"settings\",\"synonyms\",\"rules\"]}));return v.push(b),d((s?b.wait(l):b).then((function(){var t=g(e,r(r({},l),{},{autoGenerateObjectIDIfNotExist:c,batchSize:f}));return v.push(t),s?t.wait(l):t})).then((function(){var e=p(y,t.indexName,\"move\",l);return v.push(e),s?e.wait(l):e})).then((function(){return Promise.all(v)})).then((function(t){var e=a(t,3),r=e[0],n=e[1],i=e[2];return{objectIDs:n.objectIDs,taskIDs:[r.taskID].concat(o(n.taskIDs),[i.taskID])}})),(function(t,e){return Promise.all(v.map((function(t){return t.wait(e)})))}))}},Zt=function(t){return function(e,n){return ne(t)(e,r(r({},n),{},{clearExistingRules:!0}))}},$t=function(t){return function(e,n){return oe(t)(e,r(r({},n),{},{clearExistingSynonyms:!0}))}},te=function(t){return function(e,r){return d(ee(t)([e],r).then((function(t){return{objectID:t.objectIDs[0],taskID:t.taskIDs[0]}})),(function(e,r){return de(t)(e.taskID,r)}))}},ee=function(t){return function(e,r){var a=r||{},o=a.autoGenerateObjectIDIfNotExist,i=n(a,[\"autoGenerateObjectIDIfNotExist\"]),u=o?le.AddObject:le.UpdateObject;if(u===le.UpdateObject){var s=!0,c=!1,f=void 0;try{for(var l,p=e[Symbol.iterator]();!(s=(l=p.next()).done);s=!0){if(void 0===l.value.objectID)return d(Promise.reject({name:\"MissingObjectIDError\",message:\"All objects must have an unique objectID (like a primary key) to be valid. Algolia is also able to generate objectIDs automatically but *it's not recommended*. To do it, use the `{'autoGenerateObjectIDIfNotExist': true}` option.\"}))}}catch(t){c=!0,f=t}finally{try{s||null==p.return||p.return()}finally{if(c)throw f}}}return Tt(t)(e,u,i)}},re=function(t){return function(e,r){return ne(t)([e],r)}},ne=function(t){return function(e,r){var a=r||{},o=a.forwardToReplicas,i=a.clearExistingRules,u=y(n(a,[\"forwardToReplicas\",\"clearExistingRules\"]));return o&&(u.queryParameters.forwardToReplicas=1),i&&(u.queryParameters.clearExistingRules=1),d(t.transporter.write({method:j,path:h(\"1/indexes/%s/rules/batch\",t.indexName),data:e},u),(function(e,r){return de(t)(e.taskID,r)}))}},ae=function(t){return function(e,r){return oe(t)([e],r)}},oe=function(t){return function(e,r){var a=r||{},o=a.forwardToReplicas,i=a.clearExistingSynonyms,u=a.replaceExistingSynonyms,s=y(n(a,[\"forwardToReplicas\",\"clearExistingSynonyms\",\"replaceExistingSynonyms\"]));return o&&(s.queryParameters.forwardToReplicas=1),(u||i)&&(s.queryParameters.replaceExistingSynonyms=1),d(t.transporter.write({method:j,path:h(\"1/indexes/%s/synonyms/batch\",t.indexName),data:e},s),(function(e,r){return de(t)(e.taskID,r)}))}},ie=function(t){return function(e,r){return t.transporter.read({method:j,path:h(\"1/indexes/%s/query\",t.indexName),data:{query:e},cacheable:!0},r)}},ue=function(t){return function(e,r,n){return t.transporter.read({method:j,path:h(\"1/indexes/%s/facets/%s/query\",t.indexName,e),data:{facetQuery:r},cacheable:!0},n)}},se=function(t){return function(e,r){return t.transporter.read({method:j,path:h(\"1/indexes/%s/rules/search\",t.indexName),data:{query:e}},r)}},ce=function(t){return function(e,r){return t.transporter.read({method:j,path:h(\"1/indexes/%s/synonyms/search\",t.indexName),data:{query:e}},r)}},fe=function(t){return function(e,r){var a=r||{},o=a.forwardToReplicas,i=y(n(a,[\"forwardToReplicas\"]));return o&&(i.queryParameters.forwardToReplicas=1),d(t.transporter.write({method:D,path:h(\"1/indexes/%s/settings\",t.indexName),data:e},i),(function(e,r){return de(t)(e.taskID,r)}))}},de=function(t){return function(e,r){return f((function(n){return function(t){return function(e,r){return t.transporter.read({method:x,path:h(\"1/indexes/%s/task/%s\",t.indexName,e.toString())},r)}}(t)(e,r).then((function(t){return\"published\"!==t.status?n():void 0}))}))}},le={AddObject:\"addObject\",UpdateObject:\"updateObject\",PartialUpdateObject:\"partialUpdateObject\",PartialUpdateObjectNoCreate:\"partialUpdateObjectNoCreate\",DeleteObject:\"deleteObject\",DeleteIndex:\"delete\",ClearIndex:\"clear\"},pe={Settings:\"settings\",Synonyms:\"synonyms\",Rules:\"rules\"},he=1,me=2,ye=3;function ge(t,e,n){var a,o={appId:t,apiKey:e,timeouts:{connect:1,read:2,write:30},requester:{send:function(t){return new Promise((function(e){var r=new XMLHttpRequest;r.open(t.method,t.url,!0),Object.keys(t.headers).forEach((function(e){return r.setRequestHeader(e,t.headers[e])}));var n,a=function(t,n){return setTimeout((function(){r.abort(),e({status:0,content:n,isTimedOut:!0})}),1e3*t)},o=a(t.connectTimeout,\"Connection timeout\");r.onreadystatechange=function(){r.readyState>r.OPENED&&void 0===n&&(clearTimeout(o),n=a(t.responseTimeout,\"Socket timeout\"))},r.onerror=function(){0===r.status&&(clearTimeout(o),clearTimeout(n),e({content:r.responseText||\"Network request failed\",status:r.status,isTimedOut:!1}))},r.onload=function(){clearTimeout(o),clearTimeout(n),e({content:r.responseText,status:r.status,isTimedOut:!1})},r.send(t.data)}))}},logger:(a=ye,{debug:function(t,e){return he>=a&&console.debug(t,e),Promise.resolve()},info:function(t,e){return me>=a&&console.info(t,e),Promise.resolve()},error:function(t,e){return console.error(t,e),Promise.resolve()}}),responsesCache:s(),requestsCache:s({serializable:!1}),hostsCache:u({caches:[i({key:\"\".concat(\"4.13.0\",\"-\").concat(t)}),s()]}),userAgent:T(\"4.13.0\").add({segment:\"Browser\"})},f=r(r({},o),n),d=function(){return function(t){return function(t){var e=t.region||\"us\",n=c(m.WithinHeaders,t.appId,t.apiKey),a=k(r(r({hosts:[{url:\"personalization.\".concat(e,\".algolia.com\")}]},t),{},{headers:r(r(r({},n.headers()),{\"content-type\":\"application/json\"}),t.headers),queryParameters:r(r({},n.queryParameters()),t.queryParameters)}));return p({appId:t.appId,transporter:a},t.methods)}(r(r(r({},o),t),{},{methods:{getPersonalizationStrategy:H,setPersonalizationStrategy:M}}))}};return function(t){var e=t.appId,n=c(void 0!==t.authMode?t.authMode:m.WithinHeaders,e,t.apiKey),a=k(r(r({hosts:[{url:\"\".concat(e,\"-dsn.algolia.net\"),accept:g.Read},{url:\"\".concat(e,\".algolia.net\"),accept:g.Write}].concat(l([{url:\"\".concat(e,\"-1.algolianet.com\")},{url:\"\".concat(e,\"-2.algolianet.com\")},{url:\"\".concat(e,\"-3.algolianet.com\")}]))},t),{},{headers:r(r(r({},n.headers()),{\"content-type\":\"application/x-www-form-urlencoded\"}),t.headers),queryParameters:r(r({},n.queryParameters()),t.queryParameters)}));return p({transporter:a,appId:e,addAlgoliaAgent:function(t,e){a.userAgent.add({segment:t,version:e})},clearCache:function(){return Promise.all([a.requestsCache.clear(),a.responsesCache.clear()]).then((function(){}))}},t.methods)}(r(r({},f),{},{methods:{search:mt,searchForFacetValues:yt,multipleBatch:pt,multipleGetObjects:ht,multipleQueries:mt,copyIndex:L,copySettings:_,copySynonyms:X,copyRules:V,moveIndex:lt,listIndices:ft,getLogs:nt,listClusters:ct,multipleSearchForFacetValues:yt,getApiKey:tt,addApiKey:W,listApiKeys:st,updateApiKey:xt,deleteApiKey:Z,restoreApiKey:bt,assignUserID:B,assignUserIDs:Q,getUserID:ot,searchUserIDs:Ot,listUserIDs:dt,getTopUserIDs:at,removeUserID:gt,hasPendingMappings:it,clearDictionaryEntries:G,deleteDictionaryEntries:$,getDictionarySettings:rt,getAppTask:et,replaceDictionaryEntries:vt,saveDictionaryEntries:Pt,searchDictionaryEntries:wt,setDictionarySettings:It,waitAppTask:jt,customRequest:Y,initIndex:function(t){return function(e){return ut(t)(e,{methods:{batch:Dt,delete:Ct,findAnswers:Mt,getObject:Wt,getObjects:Qt,saveObject:te,saveObjects:ee,search:ie,searchForFacetValues:ue,waitTask:de,setSettings:fe,getSettings:Lt,partialUpdateObject:_t,partialUpdateObjects:Xt,deleteObject:Ut,deleteObjects:zt,deleteBy:At,clearObjects:Nt,browseObjects:qt,getObjectPosition:Bt,findObject:Kt,exists:Ht,saveSynonym:ae,saveSynonyms:oe,getSynonym:Vt,searchSynonyms:ce,browseSynonyms:kt,deleteSynonym:Ft,clearSynonyms:Rt,replaceAllObjects:Yt,replaceAllSynonyms:$t,searchRules:se,getRule:Gt,deleteRule:Jt,saveRule:re,saveRules:ne,replaceAllRules:Zt,browseRules:St,clearRules:Et}})}},initAnalytics:function(){return function(t){return function(t){var e=t.region||\"us\",n=c(m.WithinHeaders,t.appId,t.apiKey),a=k(r(r({hosts:[{url:\"analytics.\".concat(e,\".algolia.com\")}]},t),{},{headers:r(r(r({},n.headers()),{\"content-type\":\"application/json\"}),t.headers),queryParameters:r(r({},n.queryParameters()),t.queryParameters)}));return p({appId:t.appId,transporter:a},t.methods)}(r(r(r({},o),t),{},{methods:{addABTest:C,getABTest:z,getABTests:J,stopABTest:F,deleteABTest:U}}))}},initPersonalization:d,initRecommendation:function(){return function(t){return f.logger.info(\"The `initRecommendation` method is deprecated. Use `initPersonalization` instead.\"),d()(t)}}}}))}return ge.version=\"4.13.0\",ge}));\n","'use strict';\n\nfunction clone(value) {\n  if (typeof value === 'object' && value !== null) {\n    return _merge(Array.isArray(value) ? [] : {}, value);\n  }\n  return value;\n}\n\nfunction isObjectOrArrayOrFunction(value) {\n  return (\n    typeof value === 'function' ||\n    Array.isArray(value) ||\n    Object.prototype.toString.call(value) === '[object Object]'\n  );\n}\n\nfunction _merge(target, source) {\n  if (target === source) {\n    return target;\n  }\n\n  for (var key in source) {\n    if (\n      !Object.prototype.hasOwnProperty.call(source, key) ||\n      key === '__proto__'\n    ) {\n      continue;\n    }\n\n    var sourceVal = source[key];\n    var targetVal = target[key];\n\n    if (typeof targetVal !== 'undefined' && typeof sourceVal === 'undefined') {\n      continue;\n    }\n\n    if (\n      isObjectOrArrayOrFunction(targetVal) &&\n      isObjectOrArrayOrFunction(sourceVal)\n    ) {\n      target[key] = _merge(targetVal, sourceVal);\n    } else {\n      target[key] = clone(sourceVal);\n    }\n  }\n  return target;\n}\n\n/**\n * This method is like Object.assign, but recursively merges own and inherited\n * enumerable keyed properties of source objects into the destination object.\n *\n * NOTE: this behaves like lodash/merge, but:\n * - does mutate functions if they are a source\n * - treats non-plain objects as plain\n * - does not work for circular objects\n * - treats sparse arrays as sparse\n * - does not convert Array-like objects (Arguments, NodeLists, etc.) to arrays\n *\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n */\n\nfunction merge(target) {\n  if (!isObjectOrArrayOrFunction(target)) {\n    target = {};\n  }\n\n  for (var i = 1, l = arguments.length; i < l; i++) {\n    var source = arguments[i];\n\n    if (isObjectOrArrayOrFunction(source)) {\n      _merge(target, source);\n    }\n  }\n  return target;\n}\n\nmodule.exports = merge;\n","'use strict';\n\n// NOTE: this behaves like lodash/defaults, but doesn't mutate the target\n// it also preserve keys order\nmodule.exports = function defaultsPure() {\n  var sources = Array.prototype.slice.call(arguments);\n\n  return sources.reduceRight(function(acc, source) {\n    Object.keys(Object(source)).forEach(function(key) {\n      if (source[key] === undefined) {\n        return;\n      }\n      if (acc[key] !== undefined) {\n        // remove if already added, so that we can add it in correct order\n        delete acc[key];\n      }\n      acc[key] = source[key];\n    });\n    return acc;\n  }, {});\n};\n","'use strict';\n\nfunction intersection(arr1, arr2) {\n  return arr1.filter(function(value, index) {\n    return (\n      arr2.indexOf(value) > -1 &&\n      arr1.indexOf(value) === index /* skips duplicates */\n    );\n  });\n}\n\nmodule.exports = intersection;\n","'use strict';\n\n// @MAJOR can be replaced by native Array#find when we change support\nmodule.exports = function find(array, comparator) {\n  if (!Array.isArray(array)) {\n    return undefined;\n  }\n\n  for (var i = 0; i < array.length; i++) {\n    if (comparator(array[i])) {\n      return array[i];\n    }\n  }\n};\n","'use strict';\n\nfunction valToNumber(v) {\n  if (typeof v === 'number') {\n    return v;\n  } else if (typeof v === 'string') {\n    return parseFloat(v);\n  } else if (Array.isArray(v)) {\n    return v.map(valToNumber);\n  }\n\n  throw new Error('The value should be a number, a parsable string or an array of those.');\n}\n\nmodule.exports = valToNumber;\n","'use strict';\n\n// https://github.com/babel/babel/blob/3aaafae053fa75febb3aa45d45b6f00646e30ba4/packages/babel-helpers/src/helpers.js#L604-L620\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source === null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key;\n  var i;\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose;\n","'use strict';\n\nfunction objectHasKeys(obj) {\n  return obj && Object.keys(obj).length > 0;\n}\n\nmodule.exports = objectHasKeys;\n","'use strict';\n\n/**\n * Functions to manipulate refinement lists\n *\n * The RefinementList is not formally defined through a prototype but is based\n * on a specific structure.\n *\n * @module SearchParameters.refinementList\n *\n * @typedef {string[]} SearchParameters.refinementList.Refinements\n * @typedef {Object.<string, SearchParameters.refinementList.Refinements>} SearchParameters.refinementList.RefinementList\n */\n\nvar defaultsPure = require('../functions/defaultsPure');\nvar omit = require('../functions/omit');\nvar objectHasKeys = require('../functions/objectHasKeys');\n\nvar lib = {\n  /**\n   * Adds a refinement to a RefinementList\n   * @param {RefinementList} refinementList the initial list\n   * @param {string} attribute the attribute to refine\n   * @param {string} value the value of the refinement, if the value is not a string it will be converted\n   * @return {RefinementList} a new and updated refinement list\n   */\n  addRefinement: function addRefinement(refinementList, attribute, value) {\n    if (lib.isRefined(refinementList, attribute, value)) {\n      return refinementList;\n    }\n\n    var valueAsString = '' + value;\n\n    var facetRefinement = !refinementList[attribute] ?\n      [valueAsString] :\n      refinementList[attribute].concat(valueAsString);\n\n    var mod = {};\n\n    mod[attribute] = facetRefinement;\n\n    return defaultsPure({}, mod, refinementList);\n  },\n  /**\n   * Removes refinement(s) for an attribute:\n   *  - if the value is specified removes the refinement for the value on the attribute\n   *  - if no value is specified removes all the refinements for this attribute\n   * @param {RefinementList} refinementList the initial list\n   * @param {string} attribute the attribute to refine\n   * @param {string} [value] the value of the refinement\n   * @return {RefinementList} a new and updated refinement lst\n   */\n  removeRefinement: function removeRefinement(refinementList, attribute, value) {\n    if (value === undefined) {\n      // we use the \"filter\" form of clearRefinement, since it leaves empty values as-is\n      // the form with a string will remove the attribute completely\n      return lib.clearRefinement(refinementList, function(v, f) {\n        return attribute === f;\n      });\n    }\n\n    var valueAsString = '' + value;\n\n    return lib.clearRefinement(refinementList, function(v, f) {\n      return attribute === f && valueAsString === v;\n    });\n  },\n  /**\n   * Toggles the refinement value for an attribute.\n   * @param {RefinementList} refinementList the initial list\n   * @param {string} attribute the attribute to refine\n   * @param {string} value the value of the refinement\n   * @return {RefinementList} a new and updated list\n   */\n  toggleRefinement: function toggleRefinement(refinementList, attribute, value) {\n    if (value === undefined) throw new Error('toggleRefinement should be used with a value');\n\n    if (lib.isRefined(refinementList, attribute, value)) {\n      return lib.removeRefinement(refinementList, attribute, value);\n    }\n\n    return lib.addRefinement(refinementList, attribute, value);\n  },\n  /**\n   * Clear all or parts of a RefinementList. Depending on the arguments, three\n   * kinds of behavior can happen:\n   *  - if no attribute is provided: clears the whole list\n   *  - if an attribute is provided as a string: clears the list for the specific attribute\n   *  - if an attribute is provided as a function: discards the elements for which the function returns true\n   * @param {RefinementList} refinementList the initial list\n   * @param {string} [attribute] the attribute or function to discard\n   * @param {string} [refinementType] optional parameter to give more context to the attribute function\n   * @return {RefinementList} a new and updated refinement list\n   */\n  clearRefinement: function clearRefinement(refinementList, attribute, refinementType) {\n    if (attribute === undefined) {\n      if (!objectHasKeys(refinementList)) {\n        return refinementList;\n      }\n      return {};\n    } else if (typeof attribute === 'string') {\n      return omit(refinementList, [attribute]);\n    } else if (typeof attribute === 'function') {\n      var hasChanged = false;\n\n      var newRefinementList = Object.keys(refinementList).reduce(function(memo, key) {\n        var values = refinementList[key] || [];\n        var facetList = values.filter(function(value) {\n          return !attribute(value, key, refinementType);\n        });\n\n        if (facetList.length !== values.length) {\n          hasChanged = true;\n        }\n        memo[key] = facetList;\n\n        return memo;\n      }, {});\n\n      if (hasChanged) return newRefinementList;\n      return refinementList;\n    }\n  },\n  /**\n   * Test if the refinement value is used for the attribute. If no refinement value\n   * is provided, test if the refinementList contains any refinement for the\n   * given attribute.\n   * @param {RefinementList} refinementList the list of refinement\n   * @param {string} attribute name of the attribute\n   * @param {string} [refinementValue] value of the filter/refinement\n   * @return {boolean}\n   */\n  isRefined: function isRefined(refinementList, attribute, refinementValue) {\n    var containsRefinements = !!refinementList[attribute] &&\n      refinementList[attribute].length > 0;\n\n    if (refinementValue === undefined || !containsRefinements) {\n      return containsRefinements;\n    }\n\n    var refinementValueAsString = '' + refinementValue;\n\n    return refinementList[attribute].indexOf(refinementValueAsString) !== -1;\n  }\n};\n\nmodule.exports = lib;\n","'use strict';\n\nvar merge = require('../functions/merge');\nvar defaultsPure = require('../functions/defaultsPure');\nvar intersection = require('../functions/intersection');\nvar find = require('../functions/find');\nvar valToNumber = require('../functions/valToNumber');\nvar omit = require('../functions/omit');\nvar objectHasKeys = require('../functions/objectHasKeys');\nvar isValidUserToken = require('../utils/isValidUserToken');\n\nvar RefinementList = require('./RefinementList');\n\n/**\n * isEqual, but only for numeric refinement values, possible values:\n * - 5\n * - [5]\n * - [[5]]\n * - [[5,5],[4]]\n */\nfunction isEqualNumericRefinement(a, b) {\n  if (Array.isArray(a) && Array.isArray(b)) {\n    return (\n      a.length === b.length &&\n      a.every(function(el, i) {\n        return isEqualNumericRefinement(b[i], el);\n      })\n    );\n  }\n  return a === b;\n}\n\n/**\n * like _.find but using deep equality to be able to use it\n * to find arrays.\n * @private\n * @param {any[]} array array to search into (elements are base or array of base)\n * @param {any} searchedValue the value we're looking for (base or array of base)\n * @return {any} the searched value or undefined\n */\nfunction findArray(array, searchedValue) {\n  return find(array, function(currentValue) {\n    return isEqualNumericRefinement(currentValue, searchedValue);\n  });\n}\n\n/**\n * The facet list is the structure used to store the list of values used to\n * filter a single attribute.\n * @typedef {string[]} SearchParameters.FacetList\n */\n\n/**\n * Structure to store numeric filters with the operator as the key. The supported operators\n * are `=`, `>`, `<`, `>=`, `<=` and `!=`.\n * @typedef {Object.<string, Array.<number|number[]>>} SearchParameters.OperatorList\n */\n\n/**\n * SearchParameters is the data structure that contains all the information\n * usable for making a search to Algolia API. It doesn't do the search itself,\n * nor does it contains logic about the parameters.\n * It is an immutable object, therefore it has been created in a way that each\n * changes does not change the object itself but returns a copy with the\n * modification.\n * This object should probably not be instantiated outside of the helper. It will\n * be provided when needed. This object is documented for reference as you'll\n * get it from events generated by the {@link AlgoliaSearchHelper}.\n * If need be, instantiate the Helper from the factory function {@link SearchParameters.make}\n * @constructor\n * @classdesc contains all the parameters of a search\n * @param {object|SearchParameters} newParameters existing parameters or partial object\n * for the properties of a new SearchParameters\n * @see SearchParameters.make\n * @example <caption>SearchParameters of the first query in\n *   <a href=\"http://demos.algolia.com/instant-search-demo/\">the instant search demo</a></caption>\n{\n   \"query\": \"\",\n   \"disjunctiveFacets\": [\n      \"customerReviewCount\",\n      \"category\",\n      \"salePrice_range\",\n      \"manufacturer\"\n  ],\n   \"maxValuesPerFacet\": 30,\n   \"page\": 0,\n   \"hitsPerPage\": 10,\n   \"facets\": [\n      \"type\",\n      \"shipping\"\n  ]\n}\n */\nfunction SearchParameters(newParameters) {\n  var params = newParameters ? SearchParameters._parseNumbers(newParameters) : {};\n\n  if (params.userToken !== undefined && !isValidUserToken(params.userToken)) {\n    console.warn('[algoliasearch-helper] The `userToken` parameter is invalid. This can lead to wrong analytics.\\n  - Format: [a-zA-Z0-9_-]{1,64}');\n  }\n  /**\n   * This attribute contains the list of all the conjunctive facets\n   * used. This list will be added to requested facets in the\n   * [facets attribute](https://www.algolia.com/doc/rest-api/search#param-facets) sent to algolia.\n   * @member {string[]}\n   */\n  this.facets = params.facets || [];\n  /**\n   * This attribute contains the list of all the disjunctive facets\n   * used. This list will be added to requested facets in the\n   * [facets attribute](https://www.algolia.com/doc/rest-api/search#param-facets) sent to algolia.\n   * @member {string[]}\n   */\n  this.disjunctiveFacets = params.disjunctiveFacets || [];\n  /**\n   * This attribute contains the list of all the hierarchical facets\n   * used. This list will be added to requested facets in the\n   * [facets attribute](https://www.algolia.com/doc/rest-api/search#param-facets) sent to algolia.\n   * Hierarchical facets are a sub type of disjunctive facets that\n   * let you filter faceted attributes hierarchically.\n   * @member {string[]|object[]}\n   */\n  this.hierarchicalFacets = params.hierarchicalFacets || [];\n\n  // Refinements\n  /**\n   * This attribute contains all the filters that need to be\n   * applied on the conjunctive facets. Each facet must be properly\n   * defined in the `facets` attribute.\n   *\n   * The key is the name of the facet, and the `FacetList` contains all\n   * filters selected for the associated facet name.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `facetFilters` attribute.\n   * @member {Object.<string, SearchParameters.FacetList>}\n   */\n  this.facetsRefinements = params.facetsRefinements || {};\n  /**\n   * This attribute contains all the filters that need to be\n   * excluded from the conjunctive facets. Each facet must be properly\n   * defined in the `facets` attribute.\n   *\n   * The key is the name of the facet, and the `FacetList` contains all\n   * filters excluded for the associated facet name.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `facetFilters` attribute.\n   * @member {Object.<string, SearchParameters.FacetList>}\n   */\n  this.facetsExcludes = params.facetsExcludes || {};\n  /**\n   * This attribute contains all the filters that need to be\n   * applied on the disjunctive facets. Each facet must be properly\n   * defined in the `disjunctiveFacets` attribute.\n   *\n   * The key is the name of the facet, and the `FacetList` contains all\n   * filters selected for the associated facet name.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `facetFilters` attribute.\n   * @member {Object.<string, SearchParameters.FacetList>}\n   */\n  this.disjunctiveFacetsRefinements = params.disjunctiveFacetsRefinements || {};\n  /**\n   * This attribute contains all the filters that need to be\n   * applied on the numeric attributes.\n   *\n   * The key is the name of the attribute, and the value is the\n   * filters to apply to this attribute.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `numericFilters` attribute.\n   * @member {Object.<string, SearchParameters.OperatorList>}\n   */\n  this.numericRefinements = params.numericRefinements || {};\n  /**\n   * This attribute contains all the tags used to refine the query.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `tagFilters` attribute.\n   * @member {string[]}\n   */\n  this.tagRefinements = params.tagRefinements || [];\n  /**\n   * This attribute contains all the filters that need to be\n   * applied on the hierarchical facets. Each facet must be properly\n   * defined in the `hierarchicalFacets` attribute.\n   *\n   * The key is the name of the facet, and the `FacetList` contains all\n   * filters selected for the associated facet name. The FacetList values\n   * are structured as a string that contain the values for each level\n   * separated by the configured separator.\n   *\n   * When querying algolia, the values stored in this attribute will\n   * be translated into the `facetFilters` attribute.\n   * @member {Object.<string, SearchParameters.FacetList>}\n   */\n  this.hierarchicalFacetsRefinements = params.hierarchicalFacetsRefinements || {};\n\n  var self = this;\n  Object.keys(params).forEach(function(paramName) {\n    var isKeyKnown = SearchParameters.PARAMETERS.indexOf(paramName) !== -1;\n    var isValueDefined = params[paramName] !== undefined;\n\n    if (!isKeyKnown && isValueDefined) {\n      self[paramName] = params[paramName];\n    }\n  });\n}\n\n/**\n * List all the properties in SearchParameters and therefore all the known Algolia properties\n * This doesn't contain any beta/hidden features.\n * @private\n */\nSearchParameters.PARAMETERS = Object.keys(new SearchParameters());\n\n/**\n * @private\n * @param {object} partialState full or part of a state\n * @return {object} a new object with the number keys as number\n */\nSearchParameters._parseNumbers = function(partialState) {\n  // Do not reparse numbers in SearchParameters, they ought to be parsed already\n  if (partialState instanceof SearchParameters) return partialState;\n\n  var numbers = {};\n\n  var numberKeys = [\n    'aroundPrecision',\n    'aroundRadius',\n    'getRankingInfo',\n    'minWordSizefor2Typos',\n    'minWordSizefor1Typo',\n    'page',\n    'maxValuesPerFacet',\n    'distinct',\n    'minimumAroundRadius',\n    'hitsPerPage',\n    'minProximity'\n  ];\n\n  numberKeys.forEach(function(k) {\n    var value = partialState[k];\n    if (typeof value === 'string') {\n      var parsedValue = parseFloat(value);\n      // global isNaN is ok to use here, value is only number or NaN\n      numbers[k] = isNaN(parsedValue) ? value : parsedValue;\n    }\n  });\n\n  // there's two formats of insideBoundingBox, we need to parse\n  // the one which is an array of float geo rectangles\n  if (Array.isArray(partialState.insideBoundingBox)) {\n    numbers.insideBoundingBox = partialState.insideBoundingBox.map(function(geoRect) {\n      if (Array.isArray(geoRect)) {\n        return geoRect.map(function(value) {\n          return parseFloat(value);\n        });\n      }\n      return geoRect;\n    });\n  }\n\n  if (partialState.numericRefinements) {\n    var numericRefinements = {};\n    Object.keys(partialState.numericRefinements).forEach(function(attribute) {\n      var operators = partialState.numericRefinements[attribute] || {};\n      numericRefinements[attribute] = {};\n      Object.keys(operators).forEach(function(operator) {\n        var values = operators[operator];\n        var parsedValues = values.map(function(v) {\n          if (Array.isArray(v)) {\n            return v.map(function(vPrime) {\n              if (typeof vPrime === 'string') {\n                return parseFloat(vPrime);\n              }\n              return vPrime;\n            });\n          } else if (typeof v === 'string') {\n            return parseFloat(v);\n          }\n          return v;\n        });\n        numericRefinements[attribute][operator] = parsedValues;\n      });\n    });\n    numbers.numericRefinements = numericRefinements;\n  }\n\n  return merge({}, partialState, numbers);\n};\n\n/**\n * Factory for SearchParameters\n * @param {object|SearchParameters} newParameters existing parameters or partial\n * object for the properties of a new SearchParameters\n * @return {SearchParameters} frozen instance of SearchParameters\n */\nSearchParameters.make = function makeSearchParameters(newParameters) {\n  var instance = new SearchParameters(newParameters);\n\n  var hierarchicalFacets = newParameters.hierarchicalFacets || [];\n  hierarchicalFacets.forEach(function(facet) {\n    if (facet.rootPath) {\n      var currentRefinement = instance.getHierarchicalRefinement(facet.name);\n\n      if (currentRefinement.length > 0 && currentRefinement[0].indexOf(facet.rootPath) !== 0) {\n        instance = instance.clearRefinements(facet.name);\n      }\n\n      // get it again in case it has been cleared\n      currentRefinement = instance.getHierarchicalRefinement(facet.name);\n      if (currentRefinement.length === 0) {\n        instance = instance.toggleHierarchicalFacetRefinement(facet.name, facet.rootPath);\n      }\n    }\n  });\n\n  return instance;\n};\n\n/**\n * Validates the new parameters based on the previous state\n * @param {SearchParameters} currentState the current state\n * @param {object|SearchParameters} parameters the new parameters to set\n * @return {Error|null} Error if the modification is invalid, null otherwise\n */\nSearchParameters.validate = function(currentState, parameters) {\n  var params = parameters || {};\n\n  if (currentState.tagFilters && params.tagRefinements && params.tagRefinements.length > 0) {\n    return new Error(\n      '[Tags] Cannot switch from the managed tag API to the advanced API. It is probably ' +\n      'an error, if it is really what you want, you should first clear the tags with clearTags method.');\n  }\n\n  if (currentState.tagRefinements.length > 0 && params.tagFilters) {\n    return new Error(\n      '[Tags] Cannot switch from the advanced tag API to the managed API. It is probably ' +\n      'an error, if it is not, you should first clear the tags with clearTags method.');\n  }\n\n  if (\n    currentState.numericFilters &&\n    params.numericRefinements &&\n    objectHasKeys(params.numericRefinements)\n  ) {\n    return new Error(\n      \"[Numeric filters] Can't switch from the advanced to the managed API. It\" +\n        ' is probably an error, if this is really what you want, you have to first' +\n        ' clear the numeric filters.'\n    );\n  }\n\n  if (objectHasKeys(currentState.numericRefinements) && params.numericFilters) {\n    return new Error(\n      \"[Numeric filters] Can't switch from the managed API to the advanced. It\" +\n      ' is probably an error, if this is really what you want, you have to first' +\n      ' clear the numeric filters.');\n  }\n\n  return null;\n};\n\nSearchParameters.prototype = {\n  constructor: SearchParameters,\n\n  /**\n   * Remove all refinements (disjunctive + conjunctive + excludes + numeric filters)\n   * @method\n   * @param {undefined|string|SearchParameters.clearCallback} [attribute] optional string or function\n   * - If not given, means to clear all the filters.\n   * - If `string`, means to clear all refinements for the `attribute` named filter.\n   * - If `function`, means to clear all the refinements that return truthy values.\n   * @return {SearchParameters}\n   */\n  clearRefinements: function clearRefinements(attribute) {\n    var patch = {\n      numericRefinements: this._clearNumericRefinements(attribute),\n      facetsRefinements: RefinementList.clearRefinement(\n        this.facetsRefinements,\n        attribute,\n        'conjunctiveFacet'\n      ),\n      facetsExcludes: RefinementList.clearRefinement(\n        this.facetsExcludes,\n        attribute,\n        'exclude'\n      ),\n      disjunctiveFacetsRefinements: RefinementList.clearRefinement(\n        this.disjunctiveFacetsRefinements,\n        attribute,\n        'disjunctiveFacet'\n      ),\n      hierarchicalFacetsRefinements: RefinementList.clearRefinement(\n        this.hierarchicalFacetsRefinements,\n        attribute,\n        'hierarchicalFacet'\n      )\n    };\n    if (\n      patch.numericRefinements === this.numericRefinements &&\n      patch.facetsRefinements === this.facetsRefinements &&\n      patch.facetsExcludes === this.facetsExcludes &&\n      patch.disjunctiveFacetsRefinements === this.disjunctiveFacetsRefinements &&\n      patch.hierarchicalFacetsRefinements === this.hierarchicalFacetsRefinements\n    ) {\n      return this;\n    }\n    return this.setQueryParameters(patch);\n  },\n  /**\n   * Remove all the refined tags from the SearchParameters\n   * @method\n   * @return {SearchParameters}\n   */\n  clearTags: function clearTags() {\n    if (this.tagFilters === undefined && this.tagRefinements.length === 0) return this;\n\n    return this.setQueryParameters({\n      tagFilters: undefined,\n      tagRefinements: []\n    });\n  },\n  /**\n   * Set the index.\n   * @method\n   * @param {string} index the index name\n   * @return {SearchParameters}\n   */\n  setIndex: function setIndex(index) {\n    if (index === this.index) return this;\n\n    return this.setQueryParameters({\n      index: index\n    });\n  },\n  /**\n   * Query setter\n   * @method\n   * @param {string} newQuery value for the new query\n   * @return {SearchParameters}\n   */\n  setQuery: function setQuery(newQuery) {\n    if (newQuery === this.query) return this;\n\n    return this.setQueryParameters({\n      query: newQuery\n    });\n  },\n  /**\n   * Page setter\n   * @method\n   * @param {number} newPage new page number\n   * @return {SearchParameters}\n   */\n  setPage: function setPage(newPage) {\n    if (newPage === this.page) return this;\n\n    return this.setQueryParameters({\n      page: newPage\n    });\n  },\n  /**\n   * Facets setter\n   * The facets are the simple facets, used for conjunctive (and) faceting.\n   * @method\n   * @param {string[]} facets all the attributes of the algolia records used for conjunctive faceting\n   * @return {SearchParameters}\n   */\n  setFacets: function setFacets(facets) {\n    return this.setQueryParameters({\n      facets: facets\n    });\n  },\n  /**\n   * Disjunctive facets setter\n   * Change the list of disjunctive (or) facets the helper chan handle.\n   * @method\n   * @param {string[]} facets all the attributes of the algolia records used for disjunctive faceting\n   * @return {SearchParameters}\n   */\n  setDisjunctiveFacets: function setDisjunctiveFacets(facets) {\n    return this.setQueryParameters({\n      disjunctiveFacets: facets\n    });\n  },\n  /**\n   * HitsPerPage setter\n   * Hits per page represents the number of hits retrieved for this query\n   * @method\n   * @param {number} n number of hits retrieved per page of results\n   * @return {SearchParameters}\n   */\n  setHitsPerPage: function setHitsPerPage(n) {\n    if (this.hitsPerPage === n) return this;\n\n    return this.setQueryParameters({\n      hitsPerPage: n\n    });\n  },\n  /**\n   * typoTolerance setter\n   * Set the value of typoTolerance\n   * @method\n   * @param {string} typoTolerance new value of typoTolerance (\"true\", \"false\", \"min\" or \"strict\")\n   * @return {SearchParameters}\n   */\n  setTypoTolerance: function setTypoTolerance(typoTolerance) {\n    if (this.typoTolerance === typoTolerance) return this;\n\n    return this.setQueryParameters({\n      typoTolerance: typoTolerance\n    });\n  },\n  /**\n   * Add a numeric filter for a given attribute\n   * When value is an array, they are combined with OR\n   * When value is a single value, it will combined with AND\n   * @method\n   * @param {string} attribute attribute to set the filter on\n   * @param {string} operator operator of the filter (possible values: =, >, >=, <, <=, !=)\n   * @param {number | number[]} value value of the filter\n   * @return {SearchParameters}\n   * @example\n   * // for price = 50 or 40\n   * searchparameter.addNumericRefinement('price', '=', [50, 40]);\n   * @example\n   * // for size = 38 and 40\n   * searchparameter.addNumericRefinement('size', '=', 38);\n   * searchparameter.addNumericRefinement('size', '=', 40);\n   */\n  addNumericRefinement: function(attribute, operator, v) {\n    var value = valToNumber(v);\n\n    if (this.isNumericRefined(attribute, operator, value)) return this;\n\n    var mod = merge({}, this.numericRefinements);\n\n    mod[attribute] = merge({}, mod[attribute]);\n\n    if (mod[attribute][operator]) {\n      // Array copy\n      mod[attribute][operator] = mod[attribute][operator].slice();\n      // Add the element. Concat can't be used here because value can be an array.\n      mod[attribute][operator].push(value);\n    } else {\n      mod[attribute][operator] = [value];\n    }\n\n    return this.setQueryParameters({\n      numericRefinements: mod\n    });\n  },\n  /**\n   * Get the list of conjunctive refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {string[]} list of refinements\n   */\n  getConjunctiveRefinements: function(facetName) {\n    if (!this.isConjunctiveFacet(facetName)) {\n      return [];\n    }\n    return this.facetsRefinements[facetName] || [];\n  },\n  /**\n   * Get the list of disjunctive refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {string[]} list of refinements\n   */\n  getDisjunctiveRefinements: function(facetName) {\n    if (!this.isDisjunctiveFacet(facetName)) {\n      return [];\n    }\n    return this.disjunctiveFacetsRefinements[facetName] || [];\n  },\n  /**\n   * Get the list of hierarchical refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {string[]} list of refinements\n   */\n  getHierarchicalRefinement: function(facetName) {\n    // we send an array but we currently do not support multiple\n    // hierarchicalRefinements for a hierarchicalFacet\n    return this.hierarchicalFacetsRefinements[facetName] || [];\n  },\n  /**\n   * Get the list of exclude refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {string[]} list of refinements\n   */\n  getExcludeRefinements: function(facetName) {\n    if (!this.isConjunctiveFacet(facetName)) {\n      return [];\n    }\n    return this.facetsExcludes[facetName] || [];\n  },\n\n  /**\n   * Remove all the numeric filter for a given (attribute, operator)\n   * @method\n   * @param {string} attribute attribute to set the filter on\n   * @param {string} [operator] operator of the filter (possible values: =, >, >=, <, <=, !=)\n   * @param {number} [number] the value to be removed\n   * @return {SearchParameters}\n   */\n  removeNumericRefinement: function(attribute, operator, paramValue) {\n    if (paramValue !== undefined) {\n      if (!this.isNumericRefined(attribute, operator, paramValue)) {\n        return this;\n      }\n      return this.setQueryParameters({\n        numericRefinements: this._clearNumericRefinements(function(value, key) {\n          return (\n            key === attribute &&\n            value.op === operator &&\n            isEqualNumericRefinement(value.val, valToNumber(paramValue))\n          );\n        })\n      });\n    } else if (operator !== undefined) {\n      if (!this.isNumericRefined(attribute, operator)) return this;\n      return this.setQueryParameters({\n        numericRefinements: this._clearNumericRefinements(function(value, key) {\n          return key === attribute && value.op === operator;\n        })\n      });\n    }\n\n    if (!this.isNumericRefined(attribute)) return this;\n    return this.setQueryParameters({\n      numericRefinements: this._clearNumericRefinements(function(value, key) {\n        return key === attribute;\n      })\n    });\n  },\n  /**\n   * Get the list of numeric refinements for a single facet\n   * @param {string} facetName name of the attribute used for faceting\n   * @return {SearchParameters.OperatorList} list of refinements\n   */\n  getNumericRefinements: function(facetName) {\n    return this.numericRefinements[facetName] || {};\n  },\n  /**\n   * Return the current refinement for the (attribute, operator)\n   * @param {string} attribute attribute in the record\n   * @param {string} operator operator applied on the refined values\n   * @return {Array.<number|number[]>} refined values\n   */\n  getNumericRefinement: function(attribute, operator) {\n    return this.numericRefinements[attribute] && this.numericRefinements[attribute][operator];\n  },\n  /**\n   * Clear numeric filters.\n   * @method\n   * @private\n   * @param {string|SearchParameters.clearCallback} [attribute] optional string or function\n   * - If not given, means to clear all the filters.\n   * - If `string`, means to clear all refinements for the `attribute` named filter.\n   * - If `function`, means to clear all the refinements that return truthy values.\n   * @return {Object.<string, OperatorList>}\n   */\n  _clearNumericRefinements: function _clearNumericRefinements(attribute) {\n    if (attribute === undefined) {\n      if (!objectHasKeys(this.numericRefinements)) {\n        return this.numericRefinements;\n      }\n      return {};\n    } else if (typeof attribute === 'string') {\n      return omit(this.numericRefinements, [attribute]);\n    } else if (typeof attribute === 'function') {\n      var hasChanged = false;\n      var numericRefinements = this.numericRefinements;\n      var newNumericRefinements = Object.keys(numericRefinements).reduce(function(memo, key) {\n        var operators = numericRefinements[key];\n        var operatorList = {};\n\n        operators = operators || {};\n        Object.keys(operators).forEach(function(operator) {\n          var values = operators[operator] || [];\n          var outValues = [];\n          values.forEach(function(value) {\n            var predicateResult = attribute({val: value, op: operator}, key, 'numeric');\n            if (!predicateResult) outValues.push(value);\n          });\n          if (outValues.length !== values.length) {\n            hasChanged = true;\n          }\n          operatorList[operator] = outValues;\n        });\n\n        memo[key] = operatorList;\n\n        return memo;\n      }, {});\n\n      if (hasChanged) return newNumericRefinements;\n      return this.numericRefinements;\n    }\n  },\n  /**\n   * Add a facet to the facets attribute of the helper configuration, if it\n   * isn't already present.\n   * @method\n   * @param {string} facet facet name to add\n   * @return {SearchParameters}\n   */\n  addFacet: function addFacet(facet) {\n    if (this.isConjunctiveFacet(facet)) {\n      return this;\n    }\n\n    return this.setQueryParameters({\n      facets: this.facets.concat([facet])\n    });\n  },\n  /**\n   * Add a disjunctive facet to the disjunctiveFacets attribute of the helper\n   * configuration, if it isn't already present.\n   * @method\n   * @param {string} facet disjunctive facet name to add\n   * @return {SearchParameters}\n   */\n  addDisjunctiveFacet: function addDisjunctiveFacet(facet) {\n    if (this.isDisjunctiveFacet(facet)) {\n      return this;\n    }\n\n    return this.setQueryParameters({\n      disjunctiveFacets: this.disjunctiveFacets.concat([facet])\n    });\n  },\n  /**\n   * Add a hierarchical facet to the hierarchicalFacets attribute of the helper\n   * configuration.\n   * @method\n   * @param {object} hierarchicalFacet hierarchical facet to add\n   * @return {SearchParameters}\n   * @throws will throw an error if a hierarchical facet with the same name was already declared\n   */\n  addHierarchicalFacet: function addHierarchicalFacet(hierarchicalFacet) {\n    if (this.isHierarchicalFacet(hierarchicalFacet.name)) {\n      throw new Error(\n        'Cannot declare two hierarchical facets with the same name: `' + hierarchicalFacet.name + '`');\n    }\n\n    return this.setQueryParameters({\n      hierarchicalFacets: this.hierarchicalFacets.concat([hierarchicalFacet])\n    });\n  },\n  /**\n   * Add a refinement on a \"normal\" facet\n   * @method\n   * @param {string} facet attribute to apply the faceting on\n   * @param {string} value value of the attribute (will be converted to string)\n   * @return {SearchParameters}\n   */\n  addFacetRefinement: function addFacetRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n    if (RefinementList.isRefined(this.facetsRefinements, facet, value)) return this;\n\n    return this.setQueryParameters({\n      facetsRefinements: RefinementList.addRefinement(this.facetsRefinements, facet, value)\n    });\n  },\n  /**\n   * Exclude a value from a \"normal\" facet\n   * @method\n   * @param {string} facet attribute to apply the exclusion on\n   * @param {string} value value of the attribute (will be converted to string)\n   * @return {SearchParameters}\n   */\n  addExcludeRefinement: function addExcludeRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n    if (RefinementList.isRefined(this.facetsExcludes, facet, value)) return this;\n\n    return this.setQueryParameters({\n      facetsExcludes: RefinementList.addRefinement(this.facetsExcludes, facet, value)\n    });\n  },\n  /**\n   * Adds a refinement on a disjunctive facet.\n   * @method\n   * @param {string} facet attribute to apply the faceting on\n   * @param {string} value value of the attribute (will be converted to string)\n   * @return {SearchParameters}\n   */\n  addDisjunctiveFacetRefinement: function addDisjunctiveFacetRefinement(facet, value) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      throw new Error(\n        facet + ' is not defined in the disjunctiveFacets attribute of the helper configuration');\n    }\n\n    if (RefinementList.isRefined(this.disjunctiveFacetsRefinements, facet, value)) return this;\n\n    return this.setQueryParameters({\n      disjunctiveFacetsRefinements: RefinementList.addRefinement(\n        this.disjunctiveFacetsRefinements, facet, value)\n    });\n  },\n  /**\n   * addTagRefinement adds a tag to the list used to filter the results\n   * @param {string} tag tag to be added\n   * @return {SearchParameters}\n   */\n  addTagRefinement: function addTagRefinement(tag) {\n    if (this.isTagRefined(tag)) return this;\n\n    var modification = {\n      tagRefinements: this.tagRefinements.concat(tag)\n    };\n\n    return this.setQueryParameters(modification);\n  },\n  /**\n   * Remove a facet from the facets attribute of the helper configuration, if it\n   * is present.\n   * @method\n   * @param {string} facet facet name to remove\n   * @return {SearchParameters}\n   */\n  removeFacet: function removeFacet(facet) {\n    if (!this.isConjunctiveFacet(facet)) {\n      return this;\n    }\n\n    return this.clearRefinements(facet).setQueryParameters({\n      facets: this.facets.filter(function(f) {\n        return f !== facet;\n      })\n    });\n  },\n  /**\n   * Remove a disjunctive facet from the disjunctiveFacets attribute of the\n   * helper configuration, if it is present.\n   * @method\n   * @param {string} facet disjunctive facet name to remove\n   * @return {SearchParameters}\n   */\n  removeDisjunctiveFacet: function removeDisjunctiveFacet(facet) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      return this;\n    }\n\n    return this.clearRefinements(facet).setQueryParameters({\n      disjunctiveFacets: this.disjunctiveFacets.filter(function(f) {\n        return f !== facet;\n      })\n    });\n  },\n  /**\n   * Remove a hierarchical facet from the hierarchicalFacets attribute of the\n   * helper configuration, if it is present.\n   * @method\n   * @param {string} facet hierarchical facet name to remove\n   * @return {SearchParameters}\n   */\n  removeHierarchicalFacet: function removeHierarchicalFacet(facet) {\n    if (!this.isHierarchicalFacet(facet)) {\n      return this;\n    }\n\n    return this.clearRefinements(facet).setQueryParameters({\n      hierarchicalFacets: this.hierarchicalFacets.filter(function(f) {\n        return f.name !== facet;\n      })\n    });\n  },\n  /**\n   * Remove a refinement set on facet. If a value is provided, it will clear the\n   * refinement for the given value, otherwise it will clear all the refinement\n   * values for the faceted attribute.\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {string} [value] value used to filter\n   * @return {SearchParameters}\n   */\n  removeFacetRefinement: function removeFacetRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n    if (!RefinementList.isRefined(this.facetsRefinements, facet, value)) return this;\n\n    return this.setQueryParameters({\n      facetsRefinements: RefinementList.removeRefinement(this.facetsRefinements, facet, value)\n    });\n  },\n  /**\n   * Remove a negative refinement on a facet\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {string} value value used to filter\n   * @return {SearchParameters}\n   */\n  removeExcludeRefinement: function removeExcludeRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n    if (!RefinementList.isRefined(this.facetsExcludes, facet, value)) return this;\n\n    return this.setQueryParameters({\n      facetsExcludes: RefinementList.removeRefinement(this.facetsExcludes, facet, value)\n    });\n  },\n  /**\n   * Remove a refinement on a disjunctive facet\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {string} value value used to filter\n   * @return {SearchParameters}\n   */\n  removeDisjunctiveFacetRefinement: function removeDisjunctiveFacetRefinement(facet, value) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      throw new Error(\n        facet + ' is not defined in the disjunctiveFacets attribute of the helper configuration');\n    }\n    if (!RefinementList.isRefined(this.disjunctiveFacetsRefinements, facet, value)) return this;\n\n    return this.setQueryParameters({\n      disjunctiveFacetsRefinements: RefinementList.removeRefinement(\n        this.disjunctiveFacetsRefinements, facet, value)\n    });\n  },\n  /**\n   * Remove a tag from the list of tag refinements\n   * @method\n   * @param {string} tag the tag to remove\n   * @return {SearchParameters}\n   */\n  removeTagRefinement: function removeTagRefinement(tag) {\n    if (!this.isTagRefined(tag)) return this;\n\n    var modification = {\n      tagRefinements: this.tagRefinements.filter(function(t) {\n        return t !== tag;\n      })\n    };\n\n    return this.setQueryParameters(modification);\n  },\n  /**\n   * Generic toggle refinement method to use with facet, disjunctive facets\n   * and hierarchical facets\n   * @param  {string} facet the facet to refine\n   * @param  {string} value the associated value\n   * @return {SearchParameters}\n   * @throws will throw an error if the facet is not declared in the settings of the helper\n   * @deprecated since version 2.19.0, see {@link SearchParameters#toggleFacetRefinement}\n   */\n  toggleRefinement: function toggleRefinement(facet, value) {\n    return this.toggleFacetRefinement(facet, value);\n  },\n  /**\n   * Generic toggle refinement method to use with facet, disjunctive facets\n   * and hierarchical facets\n   * @param  {string} facet the facet to refine\n   * @param  {string} value the associated value\n   * @return {SearchParameters}\n   * @throws will throw an error if the facet is not declared in the settings of the helper\n   */\n  toggleFacetRefinement: function toggleFacetRefinement(facet, value) {\n    if (this.isHierarchicalFacet(facet)) {\n      return this.toggleHierarchicalFacetRefinement(facet, value);\n    } else if (this.isConjunctiveFacet(facet)) {\n      return this.toggleConjunctiveFacetRefinement(facet, value);\n    } else if (this.isDisjunctiveFacet(facet)) {\n      return this.toggleDisjunctiveFacetRefinement(facet, value);\n    }\n\n    throw new Error('Cannot refine the undeclared facet ' + facet +\n      '; it should be added to the helper options facets, disjunctiveFacets or hierarchicalFacets');\n  },\n  /**\n   * Switch the refinement applied over a facet/value\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {SearchParameters}\n   */\n  toggleConjunctiveFacetRefinement: function toggleConjunctiveFacetRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n\n    return this.setQueryParameters({\n      facetsRefinements: RefinementList.toggleRefinement(this.facetsRefinements, facet, value)\n    });\n  },\n  /**\n   * Switch the refinement applied over a facet/value\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {SearchParameters}\n   */\n  toggleExcludeFacetRefinement: function toggleExcludeFacetRefinement(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      throw new Error(facet + ' is not defined in the facets attribute of the helper configuration');\n    }\n\n    return this.setQueryParameters({\n      facetsExcludes: RefinementList.toggleRefinement(this.facetsExcludes, facet, value)\n    });\n  },\n  /**\n   * Switch the refinement applied over a facet/value\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {SearchParameters}\n   */\n  toggleDisjunctiveFacetRefinement: function toggleDisjunctiveFacetRefinement(facet, value) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      throw new Error(\n        facet + ' is not defined in the disjunctiveFacets attribute of the helper configuration');\n    }\n\n    return this.setQueryParameters({\n      disjunctiveFacetsRefinements: RefinementList.toggleRefinement(\n        this.disjunctiveFacetsRefinements, facet, value)\n    });\n  },\n  /**\n   * Switch the refinement applied over a facet/value\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {SearchParameters}\n   */\n  toggleHierarchicalFacetRefinement: function toggleHierarchicalFacetRefinement(facet, value) {\n    if (!this.isHierarchicalFacet(facet)) {\n      throw new Error(\n        facet + ' is not defined in the hierarchicalFacets attribute of the helper configuration');\n    }\n\n    var separator = this._getHierarchicalFacetSeparator(this.getHierarchicalFacetByName(facet));\n\n    var mod = {};\n\n    var upOneOrMultipleLevel = this.hierarchicalFacetsRefinements[facet] !== undefined &&\n      this.hierarchicalFacetsRefinements[facet].length > 0 && (\n      // remove current refinement:\n      // refinement was 'beer > IPA', call is toggleRefine('beer > IPA'), refinement should be `beer`\n      this.hierarchicalFacetsRefinements[facet][0] === value ||\n      // remove a parent refinement of the current refinement:\n      //  - refinement was 'beer > IPA > Flying dog'\n      //  - call is toggleRefine('beer > IPA')\n      //  - refinement should be `beer`\n      this.hierarchicalFacetsRefinements[facet][0].indexOf(value + separator) === 0\n    );\n\n    if (upOneOrMultipleLevel) {\n      if (value.indexOf(separator) === -1) {\n        // go back to root level\n        mod[facet] = [];\n      } else {\n        mod[facet] = [value.slice(0, value.lastIndexOf(separator))];\n      }\n    } else {\n      mod[facet] = [value];\n    }\n\n    return this.setQueryParameters({\n      hierarchicalFacetsRefinements: defaultsPure({}, mod, this.hierarchicalFacetsRefinements)\n    });\n  },\n\n  /**\n   * Adds a refinement on a hierarchical facet.\n   * @param {string} facet the facet name\n   * @param {string} path the hierarchical facet path\n   * @return {SearchParameter} the new state\n   * @throws Error if the facet is not defined or if the facet is refined\n   */\n  addHierarchicalFacetRefinement: function(facet, path) {\n    if (this.isHierarchicalFacetRefined(facet)) {\n      throw new Error(facet + ' is already refined.');\n    }\n    if (!this.isHierarchicalFacet(facet)) {\n      throw new Error(facet + ' is not defined in the hierarchicalFacets attribute of the helper configuration.');\n    }\n    var mod = {};\n    mod[facet] = [path];\n    return this.setQueryParameters({\n      hierarchicalFacetsRefinements: defaultsPure({}, mod, this.hierarchicalFacetsRefinements)\n    });\n  },\n\n  /**\n   * Removes the refinement set on a hierarchical facet.\n   * @param {string} facet the facet name\n   * @return {SearchParameter} the new state\n   * @throws Error if the facet is not defined or if the facet is not refined\n   */\n  removeHierarchicalFacetRefinement: function(facet) {\n    if (!this.isHierarchicalFacetRefined(facet)) {\n      return this;\n    }\n    var mod = {};\n    mod[facet] = [];\n    return this.setQueryParameters({\n      hierarchicalFacetsRefinements: defaultsPure({}, mod, this.hierarchicalFacetsRefinements)\n    });\n  },\n  /**\n   * Switch the tag refinement\n   * @method\n   * @param {string} tag the tag to remove or add\n   * @return {SearchParameters}\n   */\n  toggleTagRefinement: function toggleTagRefinement(tag) {\n    if (this.isTagRefined(tag)) {\n      return this.removeTagRefinement(tag);\n    }\n\n    return this.addTagRefinement(tag);\n  },\n  /**\n   * Test if the facet name is from one of the disjunctive facets\n   * @method\n   * @param {string} facet facet name to test\n   * @return {boolean}\n   */\n  isDisjunctiveFacet: function(facet) {\n    return this.disjunctiveFacets.indexOf(facet) > -1;\n  },\n  /**\n   * Test if the facet name is from one of the hierarchical facets\n   * @method\n   * @param {string} facetName facet name to test\n   * @return {boolean}\n   */\n  isHierarchicalFacet: function(facetName) {\n    return this.getHierarchicalFacetByName(facetName) !== undefined;\n  },\n  /**\n   * Test if the facet name is from one of the conjunctive/normal facets\n   * @method\n   * @param {string} facet facet name to test\n   * @return {boolean}\n   */\n  isConjunctiveFacet: function(facet) {\n    return this.facets.indexOf(facet) > -1;\n  },\n  /**\n   * Returns true if the facet is refined, either for a specific value or in\n   * general.\n   * @method\n   * @param {string} facet name of the attribute for used for faceting\n   * @param {string} value, optional value. If passed will test that this value\n   * is filtering the given facet.\n   * @return {boolean} returns true if refined\n   */\n  isFacetRefined: function isFacetRefined(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      return false;\n    }\n    return RefinementList.isRefined(this.facetsRefinements, facet, value);\n  },\n  /**\n   * Returns true if the facet contains exclusions or if a specific value is\n   * excluded.\n   *\n   * @method\n   * @param {string} facet name of the attribute for used for faceting\n   * @param {string} [value] optional value. If passed will test that this value\n   * is filtering the given facet.\n   * @return {boolean} returns true if refined\n   */\n  isExcludeRefined: function isExcludeRefined(facet, value) {\n    if (!this.isConjunctiveFacet(facet)) {\n      return false;\n    }\n    return RefinementList.isRefined(this.facetsExcludes, facet, value);\n  },\n  /**\n   * Returns true if the facet contains a refinement, or if a value passed is a\n   * refinement for the facet.\n   * @method\n   * @param {string} facet name of the attribute for used for faceting\n   * @param {string} value optional, will test if the value is used for refinement\n   * if there is one, otherwise will test if the facet contains any refinement\n   * @return {boolean}\n   */\n  isDisjunctiveFacetRefined: function isDisjunctiveFacetRefined(facet, value) {\n    if (!this.isDisjunctiveFacet(facet)) {\n      return false;\n    }\n    return RefinementList.isRefined(this.disjunctiveFacetsRefinements, facet, value);\n  },\n  /**\n   * Returns true if the facet contains a refinement, or if a value passed is a\n   * refinement for the facet.\n   * @method\n   * @param {string} facet name of the attribute for used for faceting\n   * @param {string} value optional, will test if the value is used for refinement\n   * if there is one, otherwise will test if the facet contains any refinement\n   * @return {boolean}\n   */\n  isHierarchicalFacetRefined: function isHierarchicalFacetRefined(facet, value) {\n    if (!this.isHierarchicalFacet(facet)) {\n      return false;\n    }\n\n    var refinements = this.getHierarchicalRefinement(facet);\n\n    if (!value) {\n      return refinements.length > 0;\n    }\n\n    return refinements.indexOf(value) !== -1;\n  },\n  /**\n   * Test if the triple (attribute, operator, value) is already refined.\n   * If only the attribute and the operator are provided, it tests if the\n   * contains any refinement value.\n   * @method\n   * @param {string} attribute attribute for which the refinement is applied\n   * @param {string} [operator] operator of the refinement\n   * @param {string} [value] value of the refinement\n   * @return {boolean} true if it is refined\n   */\n  isNumericRefined: function isNumericRefined(attribute, operator, value) {\n    if (value === undefined && operator === undefined) {\n      return !!this.numericRefinements[attribute];\n    }\n\n    var isOperatorDefined =\n      this.numericRefinements[attribute] &&\n      this.numericRefinements[attribute][operator] !== undefined;\n\n    if (value === undefined || !isOperatorDefined) {\n      return isOperatorDefined;\n    }\n\n    var parsedValue = valToNumber(value);\n    var isAttributeValueDefined =\n      findArray(this.numericRefinements[attribute][operator], parsedValue) !==\n      undefined;\n\n    return isOperatorDefined && isAttributeValueDefined;\n  },\n  /**\n   * Returns true if the tag refined, false otherwise\n   * @method\n   * @param {string} tag the tag to check\n   * @return {boolean}\n   */\n  isTagRefined: function isTagRefined(tag) {\n    return this.tagRefinements.indexOf(tag) !== -1;\n  },\n  /**\n   * Returns the list of all disjunctive facets refined\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {string[]}\n   */\n  getRefinedDisjunctiveFacets: function getRefinedDisjunctiveFacets() {\n    var self = this;\n\n    // attributes used for numeric filter can also be disjunctive\n    var disjunctiveNumericRefinedFacets = intersection(\n      Object.keys(this.numericRefinements).filter(function(facet) {\n        return Object.keys(self.numericRefinements[facet]).length > 0;\n      }),\n      this.disjunctiveFacets\n    );\n\n    return Object.keys(this.disjunctiveFacetsRefinements).filter(function(facet) {\n      return self.disjunctiveFacetsRefinements[facet].length > 0;\n    })\n      .concat(disjunctiveNumericRefinedFacets)\n      .concat(this.getRefinedHierarchicalFacets());\n  },\n  /**\n   * Returns the list of all disjunctive facets refined\n   * @method\n   * @param {string} facet name of the attribute used for faceting\n   * @param {value} value value used for filtering\n   * @return {string[]}\n   */\n  getRefinedHierarchicalFacets: function getRefinedHierarchicalFacets() {\n    var self = this;\n    return intersection(\n      // enforce the order between the two arrays,\n      // so that refinement name index === hierarchical facet index\n      this.hierarchicalFacets.map(function(facet) { return facet.name; }),\n      Object.keys(this.hierarchicalFacetsRefinements).filter(function(facet) {\n        return self.hierarchicalFacetsRefinements[facet].length > 0;\n      })\n    );\n  },\n  /**\n   * Returned the list of all disjunctive facets not refined\n   * @method\n   * @return {string[]}\n   */\n  getUnrefinedDisjunctiveFacets: function() {\n    var refinedFacets = this.getRefinedDisjunctiveFacets();\n\n    return this.disjunctiveFacets.filter(function(f) {\n      return refinedFacets.indexOf(f) === -1;\n    });\n  },\n\n  managedParameters: [\n    'index',\n\n    'facets',\n    'disjunctiveFacets',\n    'facetsRefinements',\n    'hierarchicalFacets',\n    'facetsExcludes',\n\n    'disjunctiveFacetsRefinements',\n    'numericRefinements',\n    'tagRefinements',\n    'hierarchicalFacetsRefinements'\n  ],\n  getQueryParams: function getQueryParams() {\n    var managedParameters = this.managedParameters;\n\n    var queryParams = {};\n\n    var self = this;\n    Object.keys(this).forEach(function(paramName) {\n      var paramValue = self[paramName];\n      if (managedParameters.indexOf(paramName) === -1 && paramValue !== undefined) {\n        queryParams[paramName] = paramValue;\n      }\n    });\n\n    return queryParams;\n  },\n  /**\n   * Let the user set a specific value for a given parameter. Will return the\n   * same instance if the parameter is invalid or if the value is the same as the\n   * previous one.\n   * @method\n   * @param {string} parameter the parameter name\n   * @param {any} value the value to be set, must be compliant with the definition\n   * of the attribute on the object\n   * @return {SearchParameters} the updated state\n   */\n  setQueryParameter: function setParameter(parameter, value) {\n    if (this[parameter] === value) return this;\n\n    var modification = {};\n\n    modification[parameter] = value;\n\n    return this.setQueryParameters(modification);\n  },\n  /**\n   * Let the user set any of the parameters with a plain object.\n   * @method\n   * @param {object} params all the keys and the values to be updated\n   * @return {SearchParameters} a new updated instance\n   */\n  setQueryParameters: function setQueryParameters(params) {\n    if (!params) return this;\n\n    var error = SearchParameters.validate(this, params);\n\n    if (error) {\n      throw error;\n    }\n\n    var self = this;\n    var nextWithNumbers = SearchParameters._parseNumbers(params);\n    var previousPlainObject = Object.keys(this).reduce(function(acc, key) {\n      acc[key] = self[key];\n      return acc;\n    }, {});\n\n    var nextPlainObject = Object.keys(nextWithNumbers).reduce(\n      function(previous, key) {\n        var isPreviousValueDefined = previous[key] !== undefined;\n        var isNextValueDefined = nextWithNumbers[key] !== undefined;\n\n        if (isPreviousValueDefined && !isNextValueDefined) {\n          return omit(previous, [key]);\n        }\n\n        if (isNextValueDefined) {\n          previous[key] = nextWithNumbers[key];\n        }\n\n        return previous;\n      },\n      previousPlainObject\n    );\n\n    return new this.constructor(nextPlainObject);\n  },\n\n  /**\n   * Returns a new instance with the page reset. Two scenarios possible:\n   * the page is omitted -> return the given instance\n   * the page is set -> return a new instance with a page of 0\n   * @return {SearchParameters} a new updated instance\n   */\n  resetPage: function() {\n    if (this.page === undefined) {\n      return this;\n    }\n\n    return this.setPage(0);\n  },\n\n  /**\n   * Helper function to get the hierarchicalFacet separator or the default one (`>`)\n   * @param  {object} hierarchicalFacet\n   * @return {string} returns the hierarchicalFacet.separator or `>` as default\n   */\n  _getHierarchicalFacetSortBy: function(hierarchicalFacet) {\n    return hierarchicalFacet.sortBy || ['isRefined:desc', 'name:asc'];\n  },\n\n  /**\n   * Helper function to get the hierarchicalFacet separator or the default one (`>`)\n   * @private\n   * @param  {object} hierarchicalFacet\n   * @return {string} returns the hierarchicalFacet.separator or `>` as default\n   */\n  _getHierarchicalFacetSeparator: function(hierarchicalFacet) {\n    return hierarchicalFacet.separator || ' > ';\n  },\n\n  /**\n   * Helper function to get the hierarchicalFacet prefix path or null\n   * @private\n   * @param  {object} hierarchicalFacet\n   * @return {string} returns the hierarchicalFacet.rootPath or null as default\n   */\n  _getHierarchicalRootPath: function(hierarchicalFacet) {\n    return hierarchicalFacet.rootPath || null;\n  },\n\n  /**\n   * Helper function to check if we show the parent level of the hierarchicalFacet\n   * @private\n   * @param  {object} hierarchicalFacet\n   * @return {string} returns the hierarchicalFacet.showParentLevel or true as default\n   */\n  _getHierarchicalShowParentLevel: function(hierarchicalFacet) {\n    if (typeof hierarchicalFacet.showParentLevel === 'boolean') {\n      return hierarchicalFacet.showParentLevel;\n    }\n    return true;\n  },\n\n  /**\n   * Helper function to get the hierarchicalFacet by it's name\n   * @param  {string} hierarchicalFacetName\n   * @return {object} a hierarchicalFacet\n   */\n  getHierarchicalFacetByName: function(hierarchicalFacetName) {\n    return find(\n      this.hierarchicalFacets,\n      function(f) {\n        return f.name === hierarchicalFacetName;\n      }\n    );\n  },\n\n  /**\n   * Get the current breadcrumb for a hierarchical facet, as an array\n   * @param  {string} facetName Hierarchical facet name\n   * @return {array.<string>} the path as an array of string\n   */\n  getHierarchicalFacetBreadcrumb: function(facetName) {\n    if (!this.isHierarchicalFacet(facetName)) {\n      return [];\n    }\n\n    var refinement = this.getHierarchicalRefinement(facetName)[0];\n    if (!refinement) return [];\n\n    var separator = this._getHierarchicalFacetSeparator(\n      this.getHierarchicalFacetByName(facetName)\n    );\n    var path = refinement.split(separator);\n    return path.map(function(part) {\n      return part.trim();\n    });\n  },\n\n  toString: function() {\n    return JSON.stringify(this, null, 2);\n  }\n};\n\n/**\n * Callback used for clearRefinement method\n * @callback SearchParameters.clearCallback\n * @param {OperatorList|FacetList} value the value of the filter\n * @param {string} key the current attribute name\n * @param {string} type `numeric`, `disjunctiveFacet`, `conjunctiveFacet`, `hierarchicalFacet` or `exclude`\n * depending on the type of facet\n * @return {boolean} `true` if the element should be removed. `false` otherwise.\n */\nmodule.exports = SearchParameters;\n","'use strict';\n\nmodule.exports = function isValidUserToken(userToken) {\n  if (userToken === null) {\n    return false;\n  }\n  return /^[a-zA-Z0-9_-]{1,64}$/.test(userToken);\n};\n","'use strict';\n\nfunction compareAscending(value, other) {\n  if (value !== other) {\n    var valIsDefined = value !== undefined;\n    var valIsNull = value === null;\n\n    var othIsDefined = other !== undefined;\n    var othIsNull = other === null;\n\n    if (\n      (!othIsNull && value > other) ||\n      (valIsNull && othIsDefined) ||\n      !valIsDefined\n    ) {\n      return 1;\n    }\n    if (\n      (!valIsNull && value < other) ||\n      (othIsNull && valIsDefined) ||\n      !othIsDefined\n    ) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\n/**\n * @param {Array<object>} collection object with keys in attributes\n * @param {Array<string>} iteratees attributes\n * @param {Array<string>} orders asc | desc\n */\nfunction orderBy(collection, iteratees, orders) {\n  if (!Array.isArray(collection)) {\n    return [];\n  }\n\n  if (!Array.isArray(orders)) {\n    orders = [];\n  }\n\n  var result = collection.map(function(value, index) {\n    return {\n      criteria: iteratees.map(function(iteratee) {\n        return value[iteratee];\n      }),\n      index: index,\n      value: value\n    };\n  });\n\n  result.sort(function comparer(object, other) {\n    var index = -1;\n\n    while (++index < object.criteria.length) {\n      var res = compareAscending(object.criteria[index], other.criteria[index]);\n      if (res) {\n        if (index >= orders.length) {\n          return res;\n        }\n        if (orders[index] === 'desc') {\n          return -res;\n        }\n        return res;\n      }\n    }\n\n    // This ensures a stable sort in V8 and other engines.\n    // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n    return object.index - other.index;\n  });\n\n  return result.map(function(res) {\n    return res.value;\n  });\n}\n\nmodule.exports = orderBy;\n","'use strict';\n\nmodule.exports = function compact(array) {\n  if (!Array.isArray(array)) {\n    return [];\n  }\n\n  return array.filter(Boolean);\n};\n","'use strict';\n\n// @MAJOR can be replaced by native Array#findIndex when we change support\nmodule.exports = function find(array, comparator) {\n  if (!Array.isArray(array)) {\n    return -1;\n  }\n\n  for (var i = 0; i < array.length; i++) {\n    if (comparator(array[i])) {\n      return i;\n    }\n  }\n  return -1;\n};\n","'use strict';\n\nvar find = require('./find');\n\n/**\n * Transform sort format from user friendly notation to lodash format\n * @param {string[]} sortBy array of predicate of the form \"attribute:order\"\n * @param {string[]} [defaults] array of predicate of the form \"attribute:order\"\n * @return {array.<string[]>} array containing 2 elements : attributes, orders\n */\nmodule.exports = function formatSort(sortBy, defaults) {\n  var defaultInstructions = (defaults || []).map(function(sort) {\n    return sort.split(':');\n  });\n\n  return sortBy.reduce(\n    function preparePredicate(out, sort) {\n      var sortInstruction = sort.split(':');\n\n      var matchingDefault = find(defaultInstructions, function(\n        defaultInstruction\n      ) {\n        return defaultInstruction[0] === sortInstruction[0];\n      });\n\n      if (sortInstruction.length > 1 || !matchingDefault) {\n        out[0].push(sortInstruction[0]);\n        out[1].push(sortInstruction[1]);\n        return out;\n      }\n\n      out[0].push(matchingDefault[0]);\n      out[1].push(matchingDefault[1]);\n      return out;\n    },\n    [[], []]\n  );\n};\n","'use strict';\n\n/**\n * Replaces a leading - with \\-\n * @private\n * @param {any} value the facet value to replace\n * @returns any\n */\nfunction escapeFacetValue(value) {\n  if (typeof value !== 'string') return value;\n\n  return String(value).replace(/^-/, '\\\\-');\n}\n\n/**\n * Replaces a leading \\- with -\n * @private\n * @param {any} value the escaped facet value\n * @returns any\n */\nfunction unescapeFacetValue(value) {\n  if (typeof value !== 'string') return value;\n\n  return value.replace(/^\\\\-/, '-');\n}\n\nmodule.exports = {\n  escapeFacetValue: escapeFacetValue,\n  unescapeFacetValue: unescapeFacetValue\n};\n","'use strict';\n\nmodule.exports = generateTrees;\n\nvar orderBy = require('../functions/orderBy');\nvar find = require('../functions/find');\nvar prepareHierarchicalFacetSortBy = require('../functions/formatSort');\nvar fv = require('../functions/escapeFacetValue');\nvar escapeFacetValue = fv.escapeFacetValue;\nvar unescapeFacetValue = fv.unescapeFacetValue;\n\nfunction generateTrees(state) {\n  return function generate(hierarchicalFacetResult, hierarchicalFacetIndex) {\n    var hierarchicalFacet = state.hierarchicalFacets[hierarchicalFacetIndex];\n    var hierarchicalFacetRefinement =\n      (state.hierarchicalFacetsRefinements[hierarchicalFacet.name] &&\n        state.hierarchicalFacetsRefinements[hierarchicalFacet.name][0]) ||\n      '';\n    var hierarchicalSeparator = state._getHierarchicalFacetSeparator(\n      hierarchicalFacet\n    );\n    var hierarchicalRootPath = state._getHierarchicalRootPath(\n      hierarchicalFacet\n    );\n    var hierarchicalShowParentLevel = state._getHierarchicalShowParentLevel(\n      hierarchicalFacet\n    );\n    var sortBy = prepareHierarchicalFacetSortBy(\n      state._getHierarchicalFacetSortBy(hierarchicalFacet)\n    );\n\n    var rootExhaustive = hierarchicalFacetResult.every(function(facetResult) {\n      return facetResult.exhaustive;\n    });\n\n    var generateTreeFn = generateHierarchicalTree(\n      sortBy,\n      hierarchicalSeparator,\n      hierarchicalRootPath,\n      hierarchicalShowParentLevel,\n      hierarchicalFacetRefinement\n    );\n\n    var results = hierarchicalFacetResult;\n\n    if (hierarchicalRootPath) {\n      results = hierarchicalFacetResult.slice(\n        hierarchicalRootPath.split(hierarchicalSeparator).length\n      );\n    }\n\n    return results.reduce(generateTreeFn, {\n      name: state.hierarchicalFacets[hierarchicalFacetIndex].name,\n      count: null, // root level, no count\n      isRefined: true, // root level, always refined\n      path: null, // root level, no path\n      escapedValue: null,\n      exhaustive: rootExhaustive,\n      data: null\n    });\n  };\n}\n\nfunction generateHierarchicalTree(\n  sortBy,\n  hierarchicalSeparator,\n  hierarchicalRootPath,\n  hierarchicalShowParentLevel,\n  currentRefinement\n) {\n  return function generateTree(\n    hierarchicalTree,\n    hierarchicalFacetResult,\n    currentHierarchicalLevel\n  ) {\n    var parent = hierarchicalTree;\n\n    if (currentHierarchicalLevel > 0) {\n      var level = 0;\n\n      parent = hierarchicalTree;\n\n      while (level < currentHierarchicalLevel) {\n        /**\n         * @type {object[]]} hierarchical data\n         */\n        var data = parent && Array.isArray(parent.data) ? parent.data : [];\n        parent = find(data, function(subtree) {\n          return subtree.isRefined;\n        });\n        level++;\n      }\n    }\n\n    // we found a refined parent, let's add current level data under it\n    if (parent) {\n      // filter values in case an object has multiple categories:\n      //   {\n      //     categories: {\n      //       level0: ['beers', 'bières'],\n      //       level1: ['beers > IPA', 'bières > Belges']\n      //     }\n      //   }\n      //\n      // If parent refinement is `beers`, then we do not want to have `bières > Belges`\n      // showing up\n\n      var picked = Object.keys(hierarchicalFacetResult.data)\n        .map(function(facetValue) {\n          return [facetValue, hierarchicalFacetResult.data[facetValue]];\n        })\n        .filter(function(tuple) {\n          var facetValue = tuple[0];\n          return onlyMatchingTree(\n            facetValue,\n            parent.path || hierarchicalRootPath,\n            currentRefinement,\n            hierarchicalSeparator,\n            hierarchicalRootPath,\n            hierarchicalShowParentLevel\n          );\n        });\n\n      parent.data = orderBy(\n        picked.map(function(tuple) {\n          var facetValue = tuple[0];\n          var facetCount = tuple[1];\n\n          return format(\n            facetCount,\n            facetValue,\n            hierarchicalSeparator,\n            unescapeFacetValue(currentRefinement),\n            hierarchicalFacetResult.exhaustive\n          );\n        }),\n        sortBy[0],\n        sortBy[1]\n      );\n    }\n\n    return hierarchicalTree;\n  };\n}\n\nfunction onlyMatchingTree(\n  facetValue,\n  parentPath,\n  currentRefinement,\n  hierarchicalSeparator,\n  hierarchicalRootPath,\n  hierarchicalShowParentLevel\n) {\n  // we want the facetValue is a child of hierarchicalRootPath\n  if (\n    hierarchicalRootPath &&\n    (facetValue.indexOf(hierarchicalRootPath) !== 0 ||\n      hierarchicalRootPath === facetValue)\n  ) {\n    return false;\n  }\n\n  // we always want root levels (only when there is no prefix path)\n  return (\n    (!hierarchicalRootPath &&\n      facetValue.indexOf(hierarchicalSeparator) === -1) ||\n    // if there is a rootPath, being root level mean 1 level under rootPath\n    (hierarchicalRootPath &&\n      facetValue.split(hierarchicalSeparator).length -\n        hierarchicalRootPath.split(hierarchicalSeparator).length ===\n        1) ||\n    // if current refinement is a root level and current facetValue is a root level,\n    // keep the facetValue\n    (facetValue.indexOf(hierarchicalSeparator) === -1 &&\n      currentRefinement.indexOf(hierarchicalSeparator) === -1) ||\n    // currentRefinement is a child of the facet value\n    currentRefinement.indexOf(facetValue) === 0 ||\n    // facetValue is a child of the current parent, add it\n    (facetValue.indexOf(parentPath + hierarchicalSeparator) === 0 &&\n      (hierarchicalShowParentLevel ||\n        facetValue.indexOf(currentRefinement) === 0))\n  );\n}\n\nfunction format(\n  facetCount,\n  facetValue,\n  hierarchicalSeparator,\n  currentRefinement,\n  exhaustive\n) {\n  var parts = facetValue.split(hierarchicalSeparator);\n  return {\n    name: parts[parts.length - 1].trim(),\n    path: facetValue,\n    escapedValue: escapeFacetValue(facetValue),\n    count: facetCount,\n    isRefined:\n      currentRefinement === facetValue ||\n      currentRefinement.indexOf(facetValue + hierarchicalSeparator) === 0,\n    exhaustive: exhaustive,\n    data: null\n  };\n}\n","'use strict';\n\nvar merge = require('../functions/merge');\nvar defaultsPure = require('../functions/defaultsPure');\nvar orderBy = require('../functions/orderBy');\nvar compact = require('../functions/compact');\nvar find = require('../functions/find');\nvar findIndex = require('../functions/findIndex');\nvar formatSort = require('../functions/formatSort');\nvar fv = require('../functions/escapeFacetValue');\nvar escapeFacetValue = fv.escapeFacetValue;\nvar unescapeFacetValue = fv.unescapeFacetValue;\n\nvar generateHierarchicalTree = require('./generate-hierarchical-tree');\n\n/**\n * @typedef SearchResults.Facet\n * @type {object}\n * @property {string} name name of the attribute in the record\n * @property {object} data the faceting data: value, number of entries\n * @property {object} stats undefined unless facet_stats is retrieved from algolia\n */\n\n/**\n * @typedef SearchResults.HierarchicalFacet\n * @type {object}\n * @property {string} name name of the current value given the hierarchical level, trimmed.\n * If root node, you get the facet name\n * @property {number} count number of objects matching this hierarchical value\n * @property {string} path the current hierarchical value full path\n * @property {boolean} isRefined `true` if the current value was refined, `false` otherwise\n * @property {HierarchicalFacet[]} data sub values for the current level\n */\n\n/**\n * @typedef SearchResults.FacetValue\n * @type {object}\n * @property {string} name the facet value itself\n * @property {number} count times this facet appears in the results\n * @property {boolean} isRefined is the facet currently selected\n * @property {boolean} isExcluded is the facet currently excluded (only for conjunctive facets)\n */\n\n/**\n * @typedef Refinement\n * @type {object}\n * @property {string} type the type of filter used:\n * `numeric`, `facet`, `exclude`, `disjunctive`, `hierarchical`\n * @property {string} attributeName name of the attribute used for filtering\n * @property {string} name the value of the filter\n * @property {number} numericValue the value as a number. Only for numeric filters.\n * @property {string} operator the operator used. Only for numeric filters.\n * @property {number} count the number of computed hits for this filter. Only on facets.\n * @property {boolean} exhaustive if the count is exhaustive\n */\n\n/**\n * @param {string[]} attributes\n */\nfunction getIndices(attributes) {\n  var indices = {};\n\n  attributes.forEach(function(val, idx) {\n    indices[val] = idx;\n  });\n\n  return indices;\n}\n\nfunction assignFacetStats(dest, facetStats, key) {\n  if (facetStats && facetStats[key]) {\n    dest.stats = facetStats[key];\n  }\n}\n\n/**\n * @typedef {Object} HierarchicalFacet\n * @property {string} name\n * @property {string[]} attributes\n */\n\n/**\n * @param {HierarchicalFacet[]} hierarchicalFacets\n * @param {string} hierarchicalAttributeName\n */\nfunction findMatchingHierarchicalFacetFromAttributeName(\n  hierarchicalFacets,\n  hierarchicalAttributeName\n) {\n  return find(hierarchicalFacets, function facetKeyMatchesAttribute(\n    hierarchicalFacet\n  ) {\n    var facetNames = hierarchicalFacet.attributes || [];\n    return facetNames.indexOf(hierarchicalAttributeName) > -1;\n  });\n}\n\n/*eslint-disable */\n/**\n * Constructor for SearchResults\n * @class\n * @classdesc SearchResults contains the results of a query to Algolia using the\n * {@link AlgoliaSearchHelper}.\n * @param {SearchParameters} state state that led to the response\n * @param {array.<object>} results the results from algolia client\n * @example <caption>SearchResults of the first query in\n * <a href=\"http://demos.algolia.com/instant-search-demo\">the instant search demo</a></caption>\n{\n   \"hitsPerPage\": 10,\n   \"processingTimeMS\": 2,\n   \"facets\": [\n      {\n         \"name\": \"type\",\n         \"data\": {\n            \"HardGood\": 6627,\n            \"BlackTie\": 550,\n            \"Music\": 665,\n            \"Software\": 131,\n            \"Game\": 456,\n            \"Movie\": 1571\n         },\n         \"exhaustive\": false\n      },\n      {\n         \"exhaustive\": false,\n         \"data\": {\n            \"Free shipping\": 5507\n         },\n         \"name\": \"shipping\"\n      }\n  ],\n   \"hits\": [\n      {\n         \"thumbnailImage\": \"http://img.bbystatic.com/BestBuy_US/images/products/1688/1688832_54x108_s.gif\",\n         \"_highlightResult\": {\n            \"shortDescription\": {\n               \"matchLevel\": \"none\",\n               \"value\": \"Safeguard your PC, Mac, Android and iOS devices with comprehensive Internet protection\",\n               \"matchedWords\": []\n            },\n            \"category\": {\n               \"matchLevel\": \"none\",\n               \"value\": \"Computer Security Software\",\n               \"matchedWords\": []\n            },\n            \"manufacturer\": {\n               \"matchedWords\": [],\n               \"value\": \"Webroot\",\n               \"matchLevel\": \"none\"\n            },\n            \"name\": {\n               \"value\": \"Webroot SecureAnywhere Internet Security (3-Device) (1-Year Subscription) - Mac/Windows\",\n               \"matchedWords\": [],\n               \"matchLevel\": \"none\"\n            }\n         },\n         \"image\": \"http://img.bbystatic.com/BestBuy_US/images/products/1688/1688832_105x210_sc.jpg\",\n         \"shipping\": \"Free shipping\",\n         \"bestSellingRank\": 4,\n         \"shortDescription\": \"Safeguard your PC, Mac, Android and iOS devices with comprehensive Internet protection\",\n         \"url\": \"http://www.bestbuy.com/site/webroot-secureanywhere-internet-security-3-devi…d=1219060687969&skuId=1688832&cmp=RMX&ky=2d3GfEmNIzjA0vkzveHdZEBgpPCyMnLTJ\",\n         \"name\": \"Webroot SecureAnywhere Internet Security (3-Device) (1-Year Subscription) - Mac/Windows\",\n         \"category\": \"Computer Security Software\",\n         \"salePrice_range\": \"1 - 50\",\n         \"objectID\": \"1688832\",\n         \"type\": \"Software\",\n         \"customerReviewCount\": 5980,\n         \"salePrice\": 49.99,\n         \"manufacturer\": \"Webroot\"\n      },\n      ....\n  ],\n   \"nbHits\": 10000,\n   \"disjunctiveFacets\": [\n      {\n         \"exhaustive\": false,\n         \"data\": {\n            \"5\": 183,\n            \"12\": 112,\n            \"7\": 149,\n            ...\n         },\n         \"name\": \"customerReviewCount\",\n         \"stats\": {\n            \"max\": 7461,\n            \"avg\": 157.939,\n            \"min\": 1\n         }\n      },\n      {\n         \"data\": {\n            \"Printer Ink\": 142,\n            \"Wireless Speakers\": 60,\n            \"Point & Shoot Cameras\": 48,\n            ...\n         },\n         \"name\": \"category\",\n         \"exhaustive\": false\n      },\n      {\n         \"exhaustive\": false,\n         \"data\": {\n            \"> 5000\": 2,\n            \"1 - 50\": 6524,\n            \"501 - 2000\": 566,\n            \"201 - 500\": 1501,\n            \"101 - 200\": 1360,\n            \"2001 - 5000\": 47\n         },\n         \"name\": \"salePrice_range\"\n      },\n      {\n         \"data\": {\n            \"Dynex™\": 202,\n            \"Insignia™\": 230,\n            \"PNY\": 72,\n            ...\n         },\n         \"name\": \"manufacturer\",\n         \"exhaustive\": false\n      }\n  ],\n   \"query\": \"\",\n   \"nbPages\": 100,\n   \"page\": 0,\n   \"index\": \"bestbuy\"\n}\n **/\n/*eslint-enable */\nfunction SearchResults(state, results, options) {\n  var mainSubResponse = results[0];\n\n  this._rawResults = results;\n\n  var self = this;\n\n  // https://www.algolia.com/doc/api-reference/api-methods/search/#response\n  Object.keys(mainSubResponse).forEach(function(key) {\n    self[key] = mainSubResponse[key];\n  });\n\n  // Make every key of the result options reachable from the instance\n  Object.keys(options || {}).forEach(function(key) {\n    self[key] = options[key];\n  });\n\n  /**\n   * query used to generate the results\n   * @name query\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * The query as parsed by the engine given all the rules.\n   * @name parsedQuery\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * all the records that match the search parameters. Each record is\n   * augmented with a new attribute `_highlightResult`\n   * which is an object keyed by attribute and with the following properties:\n   *  - `value` : the value of the facet highlighted (html)\n   *  - `matchLevel`: full, partial or none depending on how the query terms match\n   * @name hits\n   * @member {object[]}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * index where the results come from\n   * @name index\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * number of hits per page requested\n   * @name hitsPerPage\n   * @member {number}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * total number of hits of this query on the index\n   * @name nbHits\n   * @member {number}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * total number of pages with respect to the number of hits per page and the total number of hits\n   * @name nbPages\n   * @member {number}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * current page\n   * @name page\n   * @member {number}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * The position if the position was guessed by IP.\n   * @name aroundLatLng\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   * @example \"48.8637,2.3615\",\n   */\n  /**\n   * The radius computed by Algolia.\n   * @name automaticRadius\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   * @example \"126792922\",\n   */\n  /**\n   * String identifying the server used to serve this request.\n   *\n   * getRankingInfo needs to be set to `true` for this to be returned\n   *\n   * @name serverUsed\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   * @example \"c7-use-2.algolia.net\",\n   */\n  /**\n   * Boolean that indicates if the computation of the counts did time out.\n   * @deprecated\n   * @name timeoutCounts\n   * @member {boolean}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * Boolean that indicates if the computation of the hits did time out.\n   * @deprecated\n   * @name timeoutHits\n   * @member {boolean}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * True if the counts of the facets is exhaustive\n   * @name exhaustiveFacetsCount\n   * @member {boolean}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * True if the number of hits is exhaustive\n   * @name exhaustiveNbHits\n   * @member {boolean}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * Contains the userData if they are set by a [query rule](https://www.algolia.com/doc/guides/query-rules/query-rules-overview/).\n   * @name userData\n   * @member {object[]}\n   * @memberof SearchResults\n   * @instance\n   */\n  /**\n   * queryID is the unique identifier of the query used to generate the current search results.\n   * This value is only available if the `clickAnalytics` search parameter is set to `true`.\n   * @name queryID\n   * @member {string}\n   * @memberof SearchResults\n   * @instance\n   */\n\n  /**\n   * sum of the processing time of all the queries\n   * @member {number}\n   */\n  this.processingTimeMS = results.reduce(function(sum, result) {\n    return result.processingTimeMS === undefined\n      ? sum\n      : sum + result.processingTimeMS;\n  }, 0);\n\n  /**\n   * disjunctive facets results\n   * @member {SearchResults.Facet[]}\n   */\n  this.disjunctiveFacets = [];\n  /**\n   * disjunctive facets results\n   * @member {SearchResults.HierarchicalFacet[]}\n   */\n  this.hierarchicalFacets = state.hierarchicalFacets.map(function initFutureTree() {\n    return [];\n  });\n  /**\n   * other facets results\n   * @member {SearchResults.Facet[]}\n   */\n  this.facets = [];\n\n  var disjunctiveFacets = state.getRefinedDisjunctiveFacets();\n\n  var facetsIndices = getIndices(state.facets);\n  var disjunctiveFacetsIndices = getIndices(state.disjunctiveFacets);\n  var nextDisjunctiveResult = 1;\n\n  // Since we send request only for disjunctive facets that have been refined,\n  // we get the facets information from the first, general, response.\n\n  var mainFacets = mainSubResponse.facets || {};\n\n  Object.keys(mainFacets).forEach(function(facetKey) {\n    var facetValueObject = mainFacets[facetKey];\n\n    var hierarchicalFacet = findMatchingHierarchicalFacetFromAttributeName(\n      state.hierarchicalFacets,\n      facetKey\n    );\n\n    if (hierarchicalFacet) {\n      // Place the hierarchicalFacet data at the correct index depending on\n      // the attributes order that was defined at the helper initialization\n      var facetIndex = hierarchicalFacet.attributes.indexOf(facetKey);\n      var idxAttributeName = findIndex(state.hierarchicalFacets, function(f) {\n        return f.name === hierarchicalFacet.name;\n      });\n      self.hierarchicalFacets[idxAttributeName][facetIndex] = {\n        attribute: facetKey,\n        data: facetValueObject,\n        exhaustive: mainSubResponse.exhaustiveFacetsCount\n      };\n    } else {\n      var isFacetDisjunctive = state.disjunctiveFacets.indexOf(facetKey) !== -1;\n      var isFacetConjunctive = state.facets.indexOf(facetKey) !== -1;\n      var position;\n\n      if (isFacetDisjunctive) {\n        position = disjunctiveFacetsIndices[facetKey];\n        self.disjunctiveFacets[position] = {\n          name: facetKey,\n          data: facetValueObject,\n          exhaustive: mainSubResponse.exhaustiveFacetsCount\n        };\n        assignFacetStats(self.disjunctiveFacets[position], mainSubResponse.facets_stats, facetKey);\n      }\n      if (isFacetConjunctive) {\n        position = facetsIndices[facetKey];\n        self.facets[position] = {\n          name: facetKey,\n          data: facetValueObject,\n          exhaustive: mainSubResponse.exhaustiveFacetsCount\n        };\n        assignFacetStats(self.facets[position], mainSubResponse.facets_stats, facetKey);\n      }\n    }\n  });\n\n  // Make sure we do not keep holes within the hierarchical facets\n  this.hierarchicalFacets = compact(this.hierarchicalFacets);\n\n  // aggregate the refined disjunctive facets\n  disjunctiveFacets.forEach(function(disjunctiveFacet) {\n    var result = results[nextDisjunctiveResult];\n    var facets = result && result.facets ? result.facets : {};\n    var hierarchicalFacet = state.getHierarchicalFacetByName(disjunctiveFacet);\n\n    // There should be only item in facets.\n    Object.keys(facets).forEach(function(dfacet) {\n      var facetResults = facets[dfacet];\n\n      var position;\n\n      if (hierarchicalFacet) {\n        position = findIndex(state.hierarchicalFacets, function(f) {\n          return f.name === hierarchicalFacet.name;\n        });\n        var attributeIndex = findIndex(self.hierarchicalFacets[position], function(f) {\n          return f.attribute === dfacet;\n        });\n\n        // previous refinements and no results so not able to find it\n        if (attributeIndex === -1) {\n          return;\n        }\n\n        self.hierarchicalFacets[position][attributeIndex].data = merge(\n          {},\n          self.hierarchicalFacets[position][attributeIndex].data,\n          facetResults\n        );\n      } else {\n        position = disjunctiveFacetsIndices[dfacet];\n\n        var dataFromMainRequest = mainSubResponse.facets && mainSubResponse.facets[dfacet] || {};\n\n        self.disjunctiveFacets[position] = {\n          name: dfacet,\n          data: defaultsPure({}, facetResults, dataFromMainRequest),\n          exhaustive: result.exhaustiveFacetsCount\n        };\n        assignFacetStats(self.disjunctiveFacets[position], result.facets_stats, dfacet);\n\n        if (state.disjunctiveFacetsRefinements[dfacet]) {\n          state.disjunctiveFacetsRefinements[dfacet].forEach(function(refinementValue) {\n            // add the disjunctive refinements if it is no more retrieved\n            if (!self.disjunctiveFacets[position].data[refinementValue] &&\n              state.disjunctiveFacetsRefinements[dfacet].indexOf(unescapeFacetValue(refinementValue)) > -1) {\n              self.disjunctiveFacets[position].data[refinementValue] = 0;\n            }\n          });\n        }\n      }\n    });\n    nextDisjunctiveResult++;\n  });\n\n  // if we have some root level values for hierarchical facets, merge them\n  state.getRefinedHierarchicalFacets().forEach(function(refinedFacet) {\n    var hierarchicalFacet = state.getHierarchicalFacetByName(refinedFacet);\n    var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n\n    var currentRefinement = state.getHierarchicalRefinement(refinedFacet);\n    // if we are already at a root refinement (or no refinement at all), there is no\n    // root level values request\n    if (currentRefinement.length === 0 || currentRefinement[0].split(separator).length < 2) {\n      return;\n    }\n\n    var result = results[nextDisjunctiveResult];\n    var facets = result && result.facets\n      ? result.facets\n      : {};\n    Object.keys(facets).forEach(function(dfacet) {\n      var facetResults = facets[dfacet];\n      var position = findIndex(state.hierarchicalFacets, function(f) {\n        return f.name === hierarchicalFacet.name;\n      });\n      var attributeIndex = findIndex(self.hierarchicalFacets[position], function(f) {\n        return f.attribute === dfacet;\n      });\n\n      // previous refinements and no results so not able to find it\n      if (attributeIndex === -1) {\n        return;\n      }\n\n      // when we always get root levels, if the hits refinement is `beers > IPA` (count: 5),\n      // then the disjunctive values will be `beers` (count: 100),\n      // but we do not want to display\n      //   | beers (100)\n      //     > IPA (5)\n      // We want\n      //   | beers (5)\n      //     > IPA (5)\n      var defaultData = {};\n\n      if (currentRefinement.length > 0) {\n        var root = currentRefinement[0].split(separator)[0];\n        defaultData[root] = self.hierarchicalFacets[position][attributeIndex].data[root];\n      }\n\n      self.hierarchicalFacets[position][attributeIndex].data = defaultsPure(\n        defaultData,\n        facetResults,\n        self.hierarchicalFacets[position][attributeIndex].data\n      );\n    });\n\n    nextDisjunctiveResult++;\n  });\n\n  // add the excludes\n  Object.keys(state.facetsExcludes).forEach(function(facetName) {\n    var excludes = state.facetsExcludes[facetName];\n    var position = facetsIndices[facetName];\n\n    self.facets[position] = {\n      name: facetName,\n      data: mainSubResponse.facets[facetName],\n      exhaustive: mainSubResponse.exhaustiveFacetsCount\n    };\n    excludes.forEach(function(facetValue) {\n      self.facets[position] = self.facets[position] || {name: facetName};\n      self.facets[position].data = self.facets[position].data || {};\n      self.facets[position].data[facetValue] = 0;\n    });\n  });\n\n  /**\n   * @type {Array}\n   */\n  this.hierarchicalFacets = this.hierarchicalFacets.map(generateHierarchicalTree(state));\n\n  /**\n   * @type {Array}\n   */\n  this.facets = compact(this.facets);\n  /**\n   * @type {Array}\n   */\n  this.disjunctiveFacets = compact(this.disjunctiveFacets);\n\n  this._state = state;\n}\n\n/**\n * Get a facet object with its name\n * @deprecated\n * @param {string} name name of the faceted attribute\n * @return {SearchResults.Facet} the facet object\n */\nSearchResults.prototype.getFacetByName = function(name) {\n  function predicate(facet) {\n    return facet.name === name;\n  }\n\n  return find(this.facets, predicate) ||\n    find(this.disjunctiveFacets, predicate) ||\n    find(this.hierarchicalFacets, predicate);\n};\n\n/**\n * Get the facet values of a specified attribute from a SearchResults object.\n * @private\n * @param {SearchResults} results the search results to search in\n * @param {string} attribute name of the faceted attribute to search for\n * @return {array|object} facet values. For the hierarchical facets it is an object.\n */\nfunction extractNormalizedFacetValues(results, attribute) {\n  function predicate(facet) {\n    return facet.name === attribute;\n  }\n\n  if (results._state.isConjunctiveFacet(attribute)) {\n    var facet = find(results.facets, predicate);\n    if (!facet) return [];\n\n    return Object.keys(facet.data).map(function(name) {\n      var value = escapeFacetValue(name);\n      return {\n        name: name,\n        escapedValue: value,\n        count: facet.data[name],\n        isRefined: results._state.isFacetRefined(attribute, value),\n        isExcluded: results._state.isExcludeRefined(attribute, name)\n      };\n    });\n  } else if (results._state.isDisjunctiveFacet(attribute)) {\n    var disjunctiveFacet = find(results.disjunctiveFacets, predicate);\n    if (!disjunctiveFacet) return [];\n\n    return Object.keys(disjunctiveFacet.data).map(function(name) {\n      var value = escapeFacetValue(name);\n      return {\n        name: name,\n        escapedValue: value,\n        count: disjunctiveFacet.data[name],\n        isRefined: results._state.isDisjunctiveFacetRefined(attribute, value)\n      };\n    });\n  } else if (results._state.isHierarchicalFacet(attribute)) {\n    return find(results.hierarchicalFacets, predicate);\n  }\n}\n\n/**\n * Sort nodes of a hierarchical or disjunctive facet results\n * @private\n * @param {function} sortFn\n * @param {HierarchicalFacet|Array} node node upon which we want to apply the sort\n * @param {string[]} names attribute names\n * @param {number} [level=0] current index in the names array\n */\nfunction recSort(sortFn, node, names, level) {\n  level = level || 0;\n\n  if (Array.isArray(node)) {\n    return sortFn(node, names[level]);\n  }\n\n  if (!node.data || node.data.length === 0) {\n    return node;\n  }\n\n  var children = node.data.map(function(childNode) {\n    return recSort(sortFn, childNode, names, level + 1);\n  });\n  var sortedChildren = sortFn(children, names[level]);\n  var newNode = defaultsPure({data: sortedChildren}, node);\n  return newNode;\n}\n\nSearchResults.DEFAULT_SORT = ['isRefined:desc', 'count:desc', 'name:asc'];\n\nfunction vanillaSortFn(order, data) {\n  return data.sort(order);\n}\n\n/**\n * @typedef FacetOrdering\n * @type {Object}\n * @property {string[]} [order]\n * @property {'count' | 'alpha' | 'hidden'} [sortRemainingBy]\n */\n\n/**\n * Sorts facet arrays via their facet ordering\n * @param {Array} facetValues the values\n * @param {FacetOrdering} facetOrdering the ordering\n * @returns {Array}\n */\nfunction sortViaFacetOrdering(facetValues, facetOrdering) {\n  var orderedFacets = [];\n  var remainingFacets = [];\n\n  var order = facetOrdering.order || [];\n  /**\n   * an object with the keys being the values in order, the values their index:\n   * ['one', 'two'] -> { one: 0, two: 1 }\n   */\n  var reverseOrder = order.reduce(function(acc, name, i) {\n    acc[name] = i;\n    return acc;\n  }, {});\n\n  facetValues.forEach(function(item) {\n    // hierarchical facets get sorted using their raw name\n    var name = item.path || item.name;\n    if (reverseOrder[name] !== undefined) {\n      orderedFacets[reverseOrder[name]] = item;\n    } else {\n      remainingFacets.push(item);\n    }\n  });\n\n  orderedFacets = orderedFacets.filter(function(facet) {\n    return facet;\n  });\n\n  var sortRemainingBy = facetOrdering.sortRemainingBy;\n  var ordering;\n  if (sortRemainingBy === 'hidden') {\n    return orderedFacets;\n  } else if (sortRemainingBy === 'alpha') {\n    ordering = [['path', 'name'], ['asc', 'asc']];\n  } else {\n    ordering = [['count'], ['desc']];\n  }\n\n  return orderedFacets.concat(\n    orderBy(remainingFacets, ordering[0], ordering[1])\n  );\n}\n\n/**\n * @param {SearchResults} results the search results class\n * @param {string} attribute the attribute to retrieve ordering of\n * @returns {FacetOrdering=}\n */\nfunction getFacetOrdering(results, attribute) {\n  return (\n    results.renderingContent &&\n    results.renderingContent.facetOrdering &&\n    results.renderingContent.facetOrdering.values &&\n    results.renderingContent.facetOrdering.values[attribute]\n  );\n}\n\n/**\n * Get a the list of values for a given facet attribute. Those values are sorted\n * refinement first, descending count (bigger value on top), and name ascending\n * (alphabetical order). The sort formula can overridden using either string based\n * predicates or a function.\n *\n * This method will return all the values returned by the Algolia engine plus all\n * the values already refined. This means that it can happen that the\n * `maxValuesPerFacet` [configuration](https://www.algolia.com/doc/rest-api/search#param-maxValuesPerFacet)\n * might not be respected if you have facet values that are already refined.\n * @param {string} attribute attribute name\n * @param {object} opts configuration options.\n * @param {boolean} [opts.facetOrdering]\n * Force the use of facetOrdering from the result if a sortBy is present. If\n * sortBy isn't present, facetOrdering will be used automatically.\n * @param {Array.<string> | function} opts.sortBy\n * When using strings, it consists of\n * the name of the [FacetValue](#SearchResults.FacetValue) or the\n * [HierarchicalFacet](#SearchResults.HierarchicalFacet) attributes with the\n * order (`asc` or `desc`). For example to order the value by count, the\n * argument would be `['count:asc']`.\n *\n * If only the attribute name is specified, the ordering defaults to the one\n * specified in the default value for this attribute.\n *\n * When not specified, the order is\n * ascending.  This parameter can also be a function which takes two facet\n * values and should return a number, 0 if equal, 1 if the first argument is\n * bigger or -1 otherwise.\n *\n * The default value for this attribute `['isRefined:desc', 'count:desc', 'name:asc']`\n * @return {FacetValue[]|HierarchicalFacet|undefined} depending on the type of facet of\n * the attribute requested (hierarchical, disjunctive or conjunctive)\n * @example\n * helper.on('result', function(event){\n *   //get values ordered only by name ascending using the string predicate\n *   event.results.getFacetValues('city', {sortBy: ['name:asc']});\n *   //get values  ordered only by count ascending using a function\n *   event.results.getFacetValues('city', {\n *     // this is equivalent to ['count:asc']\n *     sortBy: function(a, b) {\n *       if (a.count === b.count) return 0;\n *       if (a.count > b.count)   return 1;\n *       if (b.count > a.count)   return -1;\n *     }\n *   });\n * });\n */\nSearchResults.prototype.getFacetValues = function(attribute, opts) {\n  var facetValues = extractNormalizedFacetValues(this, attribute);\n  if (!facetValues) {\n    return undefined;\n  }\n\n  var options = defaultsPure({}, opts, {\n    sortBy: SearchResults.DEFAULT_SORT,\n    // if no sortBy is given, attempt to sort based on facetOrdering\n    // if it is given, we still allow to sort via facet ordering first\n    facetOrdering: !(opts && opts.sortBy)\n  });\n\n  var results = this;\n  var attributes;\n  if (Array.isArray(facetValues)) {\n    attributes = [attribute];\n  } else {\n    var config = results._state.getHierarchicalFacetByName(facetValues.name);\n    attributes = config.attributes;\n  }\n\n  return recSort(function(data, facetName) {\n    if (options.facetOrdering) {\n      var facetOrdering = getFacetOrdering(results, facetName);\n      if (Boolean(facetOrdering)) {\n        return sortViaFacetOrdering(data, facetOrdering);\n      }\n    }\n\n    if (Array.isArray(options.sortBy)) {\n      var order = formatSort(options.sortBy, SearchResults.DEFAULT_SORT);\n      return orderBy(data, order[0], order[1]);\n    } else if (typeof options.sortBy === 'function') {\n      return vanillaSortFn(options.sortBy, data);\n    }\n    throw new Error(\n      'options.sortBy is optional but if defined it must be ' +\n        'either an array of string (predicates) or a sorting function'\n    );\n  }, facetValues, attributes);\n};\n\n/**\n * Returns the facet stats if attribute is defined and the facet contains some.\n * Otherwise returns undefined.\n * @param {string} attribute name of the faceted attribute\n * @return {object} The stats of the facet\n */\nSearchResults.prototype.getFacetStats = function(attribute) {\n  if (this._state.isConjunctiveFacet(attribute)) {\n    return getFacetStatsIfAvailable(this.facets, attribute);\n  } else if (this._state.isDisjunctiveFacet(attribute)) {\n    return getFacetStatsIfAvailable(this.disjunctiveFacets, attribute);\n  }\n\n  return undefined;\n};\n\n/**\n * @typedef {Object} FacetListItem\n * @property {string} name\n */\n\n/**\n * @param {FacetListItem[]} facetList (has more items, but enough for here)\n * @param {string} facetName\n */\nfunction getFacetStatsIfAvailable(facetList, facetName) {\n  var data = find(facetList, function(facet) {\n    return facet.name === facetName;\n  });\n  return data && data.stats;\n}\n\n/**\n * Returns all refinements for all filters + tags. It also provides\n * additional information: count and exhaustiveness for each filter.\n *\n * See the [refinement type](#Refinement) for an exhaustive view of the available\n * data.\n *\n * Note that for a numeric refinement, results are grouped per operator, this\n * means that it will return responses for operators which are empty.\n *\n * @return {Array.<Refinement>} all the refinements\n */\nSearchResults.prototype.getRefinements = function() {\n  var state = this._state;\n  var results = this;\n  var res = [];\n\n  Object.keys(state.facetsRefinements).forEach(function(attributeName) {\n    state.facetsRefinements[attributeName].forEach(function(name) {\n      res.push(getRefinement(state, 'facet', attributeName, name, results.facets));\n    });\n  });\n\n  Object.keys(state.facetsExcludes).forEach(function(attributeName) {\n    state.facetsExcludes[attributeName].forEach(function(name) {\n      res.push(getRefinement(state, 'exclude', attributeName, name, results.facets));\n    });\n  });\n\n  Object.keys(state.disjunctiveFacetsRefinements).forEach(function(attributeName) {\n    state.disjunctiveFacetsRefinements[attributeName].forEach(function(name) {\n      res.push(getRefinement(state, 'disjunctive', attributeName, name, results.disjunctiveFacets));\n    });\n  });\n\n  Object.keys(state.hierarchicalFacetsRefinements).forEach(function(attributeName) {\n    state.hierarchicalFacetsRefinements[attributeName].forEach(function(name) {\n      res.push(getHierarchicalRefinement(state, attributeName, name, results.hierarchicalFacets));\n    });\n  });\n\n\n  Object.keys(state.numericRefinements).forEach(function(attributeName) {\n    var operators = state.numericRefinements[attributeName];\n    Object.keys(operators).forEach(function(operator) {\n      operators[operator].forEach(function(value) {\n        res.push({\n          type: 'numeric',\n          attributeName: attributeName,\n          name: value,\n          numericValue: value,\n          operator: operator\n        });\n      });\n    });\n  });\n\n  state.tagRefinements.forEach(function(name) {\n    res.push({type: 'tag', attributeName: '_tags', name: name});\n  });\n\n  return res;\n};\n\n/**\n * @typedef {Object} Facet\n * @property {string} name\n * @property {Object} data\n * @property {boolean} exhaustive\n */\n\n/**\n * @param {*} state\n * @param {*} type\n * @param {string} attributeName\n * @param {*} name\n * @param {Facet[]} resultsFacets\n */\nfunction getRefinement(state, type, attributeName, name, resultsFacets) {\n  var facet = find(resultsFacets, function(f) {\n    return f.name === attributeName;\n  });\n  var count = facet && facet.data && facet.data[name] ? facet.data[name] : 0;\n  var exhaustive = (facet && facet.exhaustive) || false;\n\n  return {\n    type: type,\n    attributeName: attributeName,\n    name: name,\n    count: count,\n    exhaustive: exhaustive\n  };\n}\n\n/**\n * @param {*} state\n * @param {string} attributeName\n * @param {*} name\n * @param {Facet[]} resultsFacets\n */\nfunction getHierarchicalRefinement(state, attributeName, name, resultsFacets) {\n  var facetDeclaration = state.getHierarchicalFacetByName(attributeName);\n  var separator = state._getHierarchicalFacetSeparator(facetDeclaration);\n  var split = name.split(separator);\n  var rootFacet = find(resultsFacets, function(facet) {\n    return facet.name === attributeName;\n  });\n\n  var facet = split.reduce(function(intermediateFacet, part) {\n    var newFacet =\n      intermediateFacet && find(intermediateFacet.data, function(f) {\n        return f.name === part;\n      });\n    return newFacet !== undefined ? newFacet : intermediateFacet;\n  }, rootFacet);\n\n  var count = (facet && facet.count) || 0;\n  var exhaustive = (facet && facet.exhaustive) || false;\n  var path = (facet && facet.path) || '';\n\n  return {\n    type: 'hierarchical',\n    attributeName: attributeName,\n    name: path,\n    count: count,\n    exhaustive: exhaustive\n  };\n}\n\nmodule.exports = SearchResults;\n","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\n// EventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n","'use strict';\n\nfunction inherits(ctor, superCtor) {\n  ctor.prototype = Object.create(superCtor.prototype, {\n    constructor: {\n      value: ctor,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n}\n\nmodule.exports = inherits;\n","'use strict';\n\nvar EventEmitter = require('@algolia/events');\nvar inherits = require('../functions/inherits');\n\n/**\n * A DerivedHelper is a way to create sub requests to\n * Algolia from a main helper.\n * @class\n * @classdesc The DerivedHelper provides an event based interface for search callbacks:\n *  - search: when a search is triggered using the `search()` method.\n *  - result: when the response is retrieved from Algolia and is processed.\n *    This event contains a {@link SearchResults} object and the\n *    {@link SearchParameters} corresponding to this answer.\n */\nfunction DerivedHelper(mainHelper, fn) {\n  this.main = mainHelper;\n  this.fn = fn;\n  this.lastResults = null;\n}\n\ninherits(DerivedHelper, EventEmitter);\n\n/**\n * Detach this helper from the main helper\n * @return {undefined}\n * @throws Error if the derived helper is already detached\n */\nDerivedHelper.prototype.detach = function() {\n  this.removeAllListeners();\n  this.main.detachDerivedHelper(this);\n};\n\nDerivedHelper.prototype.getModifiedState = function(parameters) {\n  return this.fn(parameters);\n};\n\nmodule.exports = DerivedHelper;\n","'use strict';\n\nvar merge = require('./functions/merge');\n\nvar requestBuilder = {\n  /**\n   * Get all the queries to send to the client, those queries can used directly\n   * with the Algolia client.\n   * @private\n   * @return {object[]} The queries\n   */\n  _getQueries: function getQueries(index, state) {\n    var queries = [];\n\n    // One query for the hits\n    queries.push({\n      indexName: index,\n      params: requestBuilder._getHitsSearchParams(state)\n    });\n\n    // One for each disjunctive facets\n    state.getRefinedDisjunctiveFacets().forEach(function(refinedFacet) {\n      queries.push({\n        indexName: index,\n        params: requestBuilder._getDisjunctiveFacetSearchParams(state, refinedFacet)\n      });\n    });\n\n    // maybe more to get the root level of hierarchical facets when activated\n    state.getRefinedHierarchicalFacets().forEach(function(refinedFacet) {\n      var hierarchicalFacet = state.getHierarchicalFacetByName(refinedFacet);\n\n      var currentRefinement = state.getHierarchicalRefinement(refinedFacet);\n      // if we are deeper than level 0 (starting from `beer > IPA`)\n      // we want to get the root values\n      var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n      if (currentRefinement.length > 0 && currentRefinement[0].split(separator).length > 1) {\n        queries.push({\n          indexName: index,\n          params: requestBuilder._getDisjunctiveFacetSearchParams(state, refinedFacet, true)\n        });\n      }\n    });\n\n    return queries;\n  },\n\n  /**\n   * Build search parameters used to fetch hits\n   * @private\n   * @return {object.<string, any>}\n   */\n  _getHitsSearchParams: function(state) {\n    var facets = state.facets\n      .concat(state.disjunctiveFacets)\n      .concat(requestBuilder._getHitsHierarchicalFacetsAttributes(state));\n\n\n    var facetFilters = requestBuilder._getFacetFilters(state);\n    var numericFilters = requestBuilder._getNumericFilters(state);\n    var tagFilters = requestBuilder._getTagFilters(state);\n    var additionalParams = {\n      facets: facets.indexOf('*') > -1 ? ['*'] : facets,\n      tagFilters: tagFilters\n    };\n\n    if (facetFilters.length > 0) {\n      additionalParams.facetFilters = facetFilters;\n    }\n\n    if (numericFilters.length > 0) {\n      additionalParams.numericFilters = numericFilters;\n    }\n\n    return merge({}, state.getQueryParams(), additionalParams);\n  },\n\n  /**\n   * Build search parameters used to fetch a disjunctive facet\n   * @private\n   * @param  {string} facet the associated facet name\n   * @param  {boolean} hierarchicalRootLevel ?? FIXME\n   * @return {object}\n   */\n  _getDisjunctiveFacetSearchParams: function(state, facet, hierarchicalRootLevel) {\n    var facetFilters = requestBuilder._getFacetFilters(state, facet, hierarchicalRootLevel);\n    var numericFilters = requestBuilder._getNumericFilters(state, facet);\n    var tagFilters = requestBuilder._getTagFilters(state);\n    var additionalParams = {\n      hitsPerPage: 1,\n      page: 0,\n      attributesToRetrieve: [],\n      attributesToHighlight: [],\n      attributesToSnippet: [],\n      tagFilters: tagFilters,\n      analytics: false,\n      clickAnalytics: false\n    };\n\n    var hierarchicalFacet = state.getHierarchicalFacetByName(facet);\n\n    if (hierarchicalFacet) {\n      additionalParams.facets = requestBuilder._getDisjunctiveHierarchicalFacetAttribute(\n        state,\n        hierarchicalFacet,\n        hierarchicalRootLevel\n      );\n    } else {\n      additionalParams.facets = facet;\n    }\n\n    if (numericFilters.length > 0) {\n      additionalParams.numericFilters = numericFilters;\n    }\n\n    if (facetFilters.length > 0) {\n      additionalParams.facetFilters = facetFilters;\n    }\n\n    return merge({}, state.getQueryParams(), additionalParams);\n  },\n\n  /**\n   * Return the numeric filters in an algolia request fashion\n   * @private\n   * @param {string} [facetName] the name of the attribute for which the filters should be excluded\n   * @return {string[]} the numeric filters in the algolia format\n   */\n  _getNumericFilters: function(state, facetName) {\n    if (state.numericFilters) {\n      return state.numericFilters;\n    }\n\n    var numericFilters = [];\n\n    Object.keys(state.numericRefinements).forEach(function(attribute) {\n      var operators = state.numericRefinements[attribute] || {};\n      Object.keys(operators).forEach(function(operator) {\n        var values = operators[operator] || [];\n        if (facetName !== attribute) {\n          values.forEach(function(value) {\n            if (Array.isArray(value)) {\n              var vs = value.map(function(v) {\n                return attribute + operator + v;\n              });\n              numericFilters.push(vs);\n            } else {\n              numericFilters.push(attribute + operator + value);\n            }\n          });\n        }\n      });\n    });\n\n    return numericFilters;\n  },\n\n  /**\n   * Return the tags filters depending\n   * @private\n   * @return {string}\n   */\n  _getTagFilters: function(state) {\n    if (state.tagFilters) {\n      return state.tagFilters;\n    }\n\n    return state.tagRefinements.join(',');\n  },\n\n\n  /**\n   * Build facetFilters parameter based on current refinements. The array returned\n   * contains strings representing the facet filters in the algolia format.\n   * @private\n   * @param  {string} [facet] if set, the current disjunctive facet\n   * @return {array.<string>}\n   */\n  _getFacetFilters: function(state, facet, hierarchicalRootLevel) {\n    var facetFilters = [];\n\n    var facetsRefinements = state.facetsRefinements || {};\n    Object.keys(facetsRefinements).forEach(function(facetName) {\n      var facetValues = facetsRefinements[facetName] || [];\n      facetValues.forEach(function(facetValue) {\n        facetFilters.push(facetName + ':' + facetValue);\n      });\n    });\n\n    var facetsExcludes = state.facetsExcludes || {};\n    Object.keys(facetsExcludes).forEach(function(facetName) {\n      var facetValues = facetsExcludes[facetName] || [];\n      facetValues.forEach(function(facetValue) {\n        facetFilters.push(facetName + ':-' + facetValue);\n      });\n    });\n\n    var disjunctiveFacetsRefinements = state.disjunctiveFacetsRefinements || {};\n    Object.keys(disjunctiveFacetsRefinements).forEach(function(facetName) {\n      var facetValues = disjunctiveFacetsRefinements[facetName] || [];\n      if (facetName === facet || !facetValues || facetValues.length === 0) {\n        return;\n      }\n      var orFilters = [];\n\n      facetValues.forEach(function(facetValue) {\n        orFilters.push(facetName + ':' + facetValue);\n      });\n\n      facetFilters.push(orFilters);\n    });\n\n    var hierarchicalFacetsRefinements = state.hierarchicalFacetsRefinements || {};\n    Object.keys(hierarchicalFacetsRefinements).forEach(function(facetName) {\n      var facetValues = hierarchicalFacetsRefinements[facetName] || [];\n      var facetValue = facetValues[0];\n\n      if (facetValue === undefined) {\n        return;\n      }\n\n      var hierarchicalFacet = state.getHierarchicalFacetByName(facetName);\n      var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n      var rootPath = state._getHierarchicalRootPath(hierarchicalFacet);\n      var attributeToRefine;\n      var attributesIndex;\n\n      // we ask for parent facet values only when the `facet` is the current hierarchical facet\n      if (facet === facetName) {\n        // if we are at the root level already, no need to ask for facet values, we get them from\n        // the hits query\n        if (facetValue.indexOf(separator) === -1 || (!rootPath && hierarchicalRootLevel === true) ||\n          (rootPath && rootPath.split(separator).length === facetValue.split(separator).length)) {\n          return;\n        }\n\n        if (!rootPath) {\n          attributesIndex = facetValue.split(separator).length - 2;\n          facetValue = facetValue.slice(0, facetValue.lastIndexOf(separator));\n        } else {\n          attributesIndex = rootPath.split(separator).length - 1;\n          facetValue = rootPath;\n        }\n\n        attributeToRefine = hierarchicalFacet.attributes[attributesIndex];\n      } else {\n        attributesIndex = facetValue.split(separator).length - 1;\n\n        attributeToRefine = hierarchicalFacet.attributes[attributesIndex];\n      }\n\n      if (attributeToRefine) {\n        facetFilters.push([attributeToRefine + ':' + facetValue]);\n      }\n    });\n\n    return facetFilters;\n  },\n\n  _getHitsHierarchicalFacetsAttributes: function(state) {\n    var out = [];\n\n    return state.hierarchicalFacets.reduce(\n      // ask for as much levels as there's hierarchical refinements\n      function getHitsAttributesForHierarchicalFacet(allAttributes, hierarchicalFacet) {\n        var hierarchicalRefinement = state.getHierarchicalRefinement(hierarchicalFacet.name)[0];\n\n        // if no refinement, ask for root level\n        if (!hierarchicalRefinement) {\n          allAttributes.push(hierarchicalFacet.attributes[0]);\n          return allAttributes;\n        }\n\n        var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n        var level = hierarchicalRefinement.split(separator).length;\n        var newAttributes = hierarchicalFacet.attributes.slice(0, level + 1);\n\n        return allAttributes.concat(newAttributes);\n      }, out);\n  },\n\n  _getDisjunctiveHierarchicalFacetAttribute: function(state, hierarchicalFacet, rootLevel) {\n    var separator = state._getHierarchicalFacetSeparator(hierarchicalFacet);\n    if (rootLevel === true) {\n      var rootPath = state._getHierarchicalRootPath(hierarchicalFacet);\n      var attributeIndex = 0;\n\n      if (rootPath) {\n        attributeIndex = rootPath.split(separator).length;\n      }\n      return [hierarchicalFacet.attributes[attributeIndex]];\n    }\n\n    var hierarchicalRefinement = state.getHierarchicalRefinement(hierarchicalFacet.name)[0] || '';\n    // if refinement is 'beers > IPA > Flying dog',\n    // then we want `facets: ['beers > IPA']` as disjunctive facet (parent level values)\n\n    var parentLevel = hierarchicalRefinement.split(separator).length - 1;\n    return hierarchicalFacet.attributes.slice(0, parentLevel + 1);\n  },\n\n  getSearchForFacetQuery: function(facetName, query, maxFacetHits, state) {\n    var stateForSearchForFacetValues = state.isDisjunctiveFacet(facetName) ?\n      state.clearRefinements(facetName) :\n      state;\n    var searchForFacetSearchParameters = {\n      facetQuery: query,\n      facetName: facetName\n    };\n    if (typeof maxFacetHits === 'number') {\n      searchForFacetSearchParameters.maxFacetHits = maxFacetHits;\n    }\n    return merge(\n      {},\n      requestBuilder._getHitsSearchParams(stateForSearchForFacetValues),\n      searchForFacetSearchParameters\n    );\n  }\n};\n\nmodule.exports = requestBuilder;\n","'use strict';\n\nmodule.exports = '3.8.2';\n","'use strict';\n\nvar SearchParameters = require('./SearchParameters');\nvar SearchResults = require('./SearchResults');\nvar DerivedHelper = require('./DerivedHelper');\nvar requestBuilder = require('./requestBuilder');\n\nvar EventEmitter = require('@algolia/events');\nvar inherits = require('./functions/inherits');\nvar objectHasKeys = require('./functions/objectHasKeys');\nvar omit = require('./functions/omit');\nvar merge = require('./functions/merge');\n\nvar version = require('./version');\nvar escapeFacetValue = require('./functions/escapeFacetValue').escapeFacetValue;\n\n/**\n * Event triggered when a parameter is set or updated\n * @event AlgoliaSearchHelper#event:change\n * @property {object} event\n * @property {SearchParameters} event.state the current parameters with the latest changes applied\n * @property {SearchResults} event.results the previous results received from Algolia. `null` before the first request\n * @example\n * helper.on('change', function(event) {\n *   console.log('The parameters have changed');\n * });\n */\n\n/**\n * Event triggered when a main search is sent to Algolia\n * @event AlgoliaSearchHelper#event:search\n * @property {object} event\n * @property {SearchParameters} event.state the parameters used for this search\n * @property {SearchResults} event.results the results from the previous search. `null` if it is the first search.\n * @example\n * helper.on('search', function(event) {\n *   console.log('Search sent');\n * });\n */\n\n/**\n * Event triggered when a search using `searchForFacetValues` is sent to Algolia\n * @event AlgoliaSearchHelper#event:searchForFacetValues\n * @property {object} event\n * @property {SearchParameters} event.state the parameters used for this search it is the first search.\n * @property {string} event.facet the facet searched into\n * @property {string} event.query the query used to search in the facets\n * @example\n * helper.on('searchForFacetValues', function(event) {\n *   console.log('searchForFacetValues sent');\n * });\n */\n\n/**\n * Event triggered when a search using `searchOnce` is sent to Algolia\n * @event AlgoliaSearchHelper#event:searchOnce\n * @property {object} event\n * @property {SearchParameters} event.state the parameters used for this search it is the first search.\n * @example\n * helper.on('searchOnce', function(event) {\n *   console.log('searchOnce sent');\n * });\n */\n\n/**\n * Event triggered when the results are retrieved from Algolia\n * @event AlgoliaSearchHelper#event:result\n * @property {object} event\n * @property {SearchResults} event.results the results received from Algolia\n * @property {SearchParameters} event.state the parameters used to query Algolia. Those might be different from the one in the helper instance (for example if the network is unreliable).\n * @example\n * helper.on('result', function(event) {\n *   console.log('Search results received');\n * });\n */\n\n/**\n * Event triggered when Algolia sends back an error. For example, if an unknown parameter is\n * used, the error can be caught using this event.\n * @event AlgoliaSearchHelper#event:error\n * @property {object} event\n * @property {Error} event.error the error returned by the Algolia.\n * @example\n * helper.on('error', function(event) {\n *   console.log('Houston we got a problem.');\n * });\n */\n\n/**\n * Event triggered when the queue of queries have been depleted (with any result or outdated queries)\n * @event AlgoliaSearchHelper#event:searchQueueEmpty\n * @example\n * helper.on('searchQueueEmpty', function() {\n *   console.log('No more search pending');\n *   // This is received before the result event if we're not expecting new results\n * });\n *\n * helper.search();\n */\n\n/**\n * Initialize a new AlgoliaSearchHelper\n * @class\n * @classdesc The AlgoliaSearchHelper is a class that ease the management of the\n * search. It provides an event based interface for search callbacks:\n *  - change: when the internal search state is changed.\n *    This event contains a {@link SearchParameters} object and the\n *    {@link SearchResults} of the last result if any.\n *  - search: when a search is triggered using the `search()` method.\n *  - result: when the response is retrieved from Algolia and is processed.\n *    This event contains a {@link SearchResults} object and the\n *    {@link SearchParameters} corresponding to this answer.\n *  - error: when the response is an error. This event contains the error returned by the server.\n * @param  {AlgoliaSearch} client an AlgoliaSearch client\n * @param  {string} index the index name to query\n * @param  {SearchParameters | object} options an object defining the initial\n * config of the search. It doesn't have to be a {SearchParameters},\n * just an object containing the properties you need from it.\n */\nfunction AlgoliaSearchHelper(client, index, options) {\n  if (typeof client.addAlgoliaAgent === 'function') {\n    client.addAlgoliaAgent('JS Helper (' + version + ')');\n  }\n\n  this.setClient(client);\n  var opts = options || {};\n  opts.index = index;\n  this.state = SearchParameters.make(opts);\n  this.lastResults = null;\n  this._queryId = 0;\n  this._lastQueryIdReceived = -1;\n  this.derivedHelpers = [];\n  this._currentNbQueries = 0;\n}\n\ninherits(AlgoliaSearchHelper, EventEmitter);\n\n/**\n * Start the search with the parameters set in the state. When the\n * method is called, it triggers a `search` event. The results will\n * be available through the `result` event. If an error occurs, an\n * `error` will be fired instead.\n * @return {AlgoliaSearchHelper}\n * @fires search\n * @fires result\n * @fires error\n * @chainable\n */\nAlgoliaSearchHelper.prototype.search = function() {\n  this._search({onlyWithDerivedHelpers: false});\n  return this;\n};\n\nAlgoliaSearchHelper.prototype.searchOnlyWithDerivedHelpers = function() {\n  this._search({onlyWithDerivedHelpers: true});\n  return this;\n};\n\n/**\n * Gets the search query parameters that would be sent to the Algolia Client\n * for the hits\n * @return {object} Query Parameters\n */\nAlgoliaSearchHelper.prototype.getQuery = function() {\n  var state = this.state;\n  return requestBuilder._getHitsSearchParams(state);\n};\n\n/**\n * Start a search using a modified version of the current state. This method does\n * not trigger the helper lifecycle and does not modify the state kept internally\n * by the helper. This second aspect means that the next search call will be the\n * same as a search call before calling searchOnce.\n * @param {object} options can contain all the parameters that can be set to SearchParameters\n * plus the index\n * @param {function} [callback] optional callback executed when the response from the\n * server is back.\n * @return {promise|undefined} if a callback is passed the method returns undefined\n * otherwise it returns a promise containing an object with two keys :\n *  - content with a SearchResults\n *  - state with the state used for the query as a SearchParameters\n * @example\n * // Changing the number of records returned per page to 1\n * // This example uses the callback API\n * var state = helper.searchOnce({hitsPerPage: 1},\n *   function(error, content, state) {\n *     // if an error occurred it will be passed in error, otherwise its value is null\n *     // content contains the results formatted as a SearchResults\n *     // state is the instance of SearchParameters used for this search\n *   });\n * @example\n * // Changing the number of records returned per page to 1\n * // This example uses the promise API\n * var state1 = helper.searchOnce({hitsPerPage: 1})\n *                 .then(promiseHandler);\n *\n * function promiseHandler(res) {\n *   // res contains\n *   // {\n *   //   content : SearchResults\n *   //   state   : SearchParameters (the one used for this specific search)\n *   // }\n * }\n */\nAlgoliaSearchHelper.prototype.searchOnce = function(options, cb) {\n  var tempState = !options ? this.state : this.state.setQueryParameters(options);\n  var queries = requestBuilder._getQueries(tempState.index, tempState);\n  var self = this;\n\n  this._currentNbQueries++;\n\n  this.emit('searchOnce', {\n    state: tempState\n  });\n\n  if (cb) {\n    this.client\n      .search(queries)\n      .then(function(content) {\n        self._currentNbQueries--;\n        if (self._currentNbQueries === 0) {\n          self.emit('searchQueueEmpty');\n        }\n\n        cb(null, new SearchResults(tempState, content.results), tempState);\n      })\n      .catch(function(err) {\n        self._currentNbQueries--;\n        if (self._currentNbQueries === 0) {\n          self.emit('searchQueueEmpty');\n        }\n\n        cb(err, null, tempState);\n      });\n\n    return undefined;\n  }\n\n  return this.client.search(queries).then(function(content) {\n    self._currentNbQueries--;\n    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');\n    return {\n      content: new SearchResults(tempState, content.results),\n      state: tempState,\n      _originalResponse: content\n    };\n  }, function(e) {\n    self._currentNbQueries--;\n    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');\n    throw e;\n  });\n};\n\n /**\n * Start the search for answers with the parameters set in the state.\n * This method returns a promise.\n * @param {Object} options - the options for answers API call\n * @param {string[]} options.attributesForPrediction - Attributes to use for predictions. If empty, `searchableAttributes` is used instead.\n * @param {string[]} options.queryLanguages - The languages in the query. Currently only supports ['en'].\n * @param {number} options.nbHits - Maximum number of answers to retrieve from the Answers Engine. Cannot be greater than 1000.\n *\n * @return {promise} the answer results\n */\nAlgoliaSearchHelper.prototype.findAnswers = function(options) {\n  var state = this.state;\n  var derivedHelper = this.derivedHelpers[0];\n  if (!derivedHelper) {\n    return Promise.resolve([]);\n  }\n  var derivedState = derivedHelper.getModifiedState(state);\n  var data = merge(\n    {\n      attributesForPrediction: options.attributesForPrediction,\n      nbHits: options.nbHits\n    },\n    {\n      params: omit(requestBuilder._getHitsSearchParams(derivedState), [\n        'attributesToSnippet',\n        'hitsPerPage',\n        'restrictSearchableAttributes',\n        'snippetEllipsisText' // FIXME remove this line once the engine is fixed.\n      ])\n    }\n  );\n\n  var errorMessage = 'search for answers was called, but this client does not have a function client.initIndex(index).findAnswers';\n  if (typeof this.client.initIndex !== 'function') {\n    throw new Error(errorMessage);\n  }\n  var index = this.client.initIndex(derivedState.index);\n  if (typeof index.findAnswers !== 'function') {\n    throw new Error(errorMessage);\n  }\n  return index.findAnswers(derivedState.query, options.queryLanguages, data);\n};\n\n/**\n * Structure of each result when using\n * [`searchForFacetValues()`](reference.html#AlgoliaSearchHelper#searchForFacetValues)\n * @typedef FacetSearchHit\n * @type {object}\n * @property {string} value the facet value\n * @property {string} highlighted the facet value highlighted with the query string\n * @property {number} count number of occurrence of this facet value\n * @property {boolean} isRefined true if the value is already refined\n */\n\n/**\n * Structure of the data resolved by the\n * [`searchForFacetValues()`](reference.html#AlgoliaSearchHelper#searchForFacetValues)\n * promise.\n * @typedef FacetSearchResult\n * @type {object}\n * @property {FacetSearchHit} facetHits the results for this search for facet values\n * @property {number} processingTimeMS time taken by the query inside the engine\n */\n\n/**\n * Search for facet values based on an query and the name of a faceted attribute. This\n * triggers a search and will return a promise. On top of using the query, it also sends\n * the parameters from the state so that the search is narrowed down to only the possible values.\n *\n * See the description of [FacetSearchResult](reference.html#FacetSearchResult)\n * @param {string} facet the name of the faceted attribute\n * @param {string} query the string query for the search\n * @param {number} [maxFacetHits] the maximum number values returned. Should be > 0 and <= 100\n * @param {object} [userState] the set of custom parameters to use on top of the current state. Setting a property to `undefined` removes\n * it in the generated query.\n * @return {promise.<FacetSearchResult>} the results of the search\n */\nAlgoliaSearchHelper.prototype.searchForFacetValues = function(facet, query, maxFacetHits, userState) {\n  var clientHasSFFV = typeof this.client.searchForFacetValues === 'function';\n  if (\n    !clientHasSFFV &&\n    typeof this.client.initIndex !== 'function'\n  ) {\n    throw new Error(\n      'search for facet values (searchable) was called, but this client does not have a function client.searchForFacetValues or client.initIndex(index).searchForFacetValues'\n    );\n  }\n  var state = this.state.setQueryParameters(userState || {});\n  var isDisjunctive = state.isDisjunctiveFacet(facet);\n  var algoliaQuery = requestBuilder.getSearchForFacetQuery(facet, query, maxFacetHits, state);\n\n  this._currentNbQueries++;\n  var self = this;\n\n  this.emit('searchForFacetValues', {\n    state: state,\n    facet: facet,\n    query: query\n  });\n\n  var searchForFacetValuesPromise = clientHasSFFV\n    ? this.client.searchForFacetValues([{indexName: state.index, params: algoliaQuery}])\n    : this.client.initIndex(state.index).searchForFacetValues(algoliaQuery);\n\n  return searchForFacetValuesPromise.then(function addIsRefined(content) {\n    self._currentNbQueries--;\n    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');\n\n    content = Array.isArray(content) ? content[0] : content;\n\n    content.facetHits.forEach(function(f) {\n      f.escapedValue = escapeFacetValue(f.value);\n      f.isRefined = isDisjunctive\n        ? state.isDisjunctiveFacetRefined(facet, f.escapedValue)\n        : state.isFacetRefined(facet, f.escapedValue);\n    });\n\n    return content;\n  }, function(e) {\n    self._currentNbQueries--;\n    if (self._currentNbQueries === 0) self.emit('searchQueueEmpty');\n    throw e;\n  });\n};\n\n/**\n * Sets the text query used for the search.\n *\n * This method resets the current page to 0.\n * @param  {string} q the user query\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.setQuery = function(q) {\n  this._change({\n    state: this.state.resetPage().setQuery(q),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Remove all the types of refinements except tags. A string can be provided to remove\n * only the refinements of a specific attribute. For more advanced use case, you can\n * provide a function instead. This function should follow the\n * [clearCallback definition](#SearchParameters.clearCallback).\n *\n * This method resets the current page to 0.\n * @param {string} [name] optional name of the facet / attribute on which we want to remove all refinements\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n * @example\n * // Removing all the refinements\n * helper.clearRefinements().search();\n * @example\n * // Removing all the filters on a the category attribute.\n * helper.clearRefinements('category').search();\n * @example\n * // Removing only the exclude filters on the category facet.\n * helper.clearRefinements(function(value, attribute, type) {\n *   return type === 'exclude' && attribute === 'category';\n * }).search();\n */\nAlgoliaSearchHelper.prototype.clearRefinements = function(name) {\n  this._change({\n    state: this.state.resetPage().clearRefinements(name),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Remove all the tag filters.\n *\n * This method resets the current page to 0.\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.clearTags = function() {\n  this._change({\n    state: this.state.resetPage().clearTags(),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Adds a disjunctive filter to a faceted attribute with the `value` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value (will be converted to string)\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.addDisjunctiveFacetRefinement = function(facet, value) {\n  this._change({\n    state: this.state.resetPage().addDisjunctiveFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#addDisjunctiveFacetRefinement}\n */\nAlgoliaSearchHelper.prototype.addDisjunctiveRefine = function() {\n  return this.addDisjunctiveFacetRefinement.apply(this, arguments);\n};\n\n/**\n * Adds a refinement on a hierarchical facet. It will throw\n * an exception if the facet is not defined or if the facet\n * is already refined.\n *\n * This method resets the current page to 0.\n * @param {string} facet the facet name\n * @param {string} path the hierarchical facet path\n * @return {AlgoliaSearchHelper}\n * @throws Error if the facet is not defined or if the facet is refined\n * @chainable\n * @fires change\n */\nAlgoliaSearchHelper.prototype.addHierarchicalFacetRefinement = function(facet, value) {\n  this._change({\n    state: this.state.resetPage().addHierarchicalFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Adds a an numeric filter to an attribute with the `operator` and `value` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param  {string} attribute the attribute on which the numeric filter applies\n * @param  {string} operator the operator of the filter\n * @param  {number} value the value of the filter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.addNumericRefinement = function(attribute, operator, value) {\n  this._change({\n    state: this.state.resetPage().addNumericRefinement(attribute, operator, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Adds a filter to a faceted attribute with the `value` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value (will be converted to string)\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.addFacetRefinement = function(facet, value) {\n  this._change({\n    state: this.state.resetPage().addFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#addFacetRefinement}\n */\nAlgoliaSearchHelper.prototype.addRefine = function() {\n  return this.addFacetRefinement.apply(this, arguments);\n};\n\n\n/**\n * Adds a an exclusion filter to a faceted attribute with the `value` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value (will be converted to string)\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.addFacetExclusion = function(facet, value) {\n  this._change({\n    state: this.state.resetPage().addExcludeRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#addFacetExclusion}\n */\nAlgoliaSearchHelper.prototype.addExclude = function() {\n  return this.addFacetExclusion.apply(this, arguments);\n};\n\n/**\n * Adds a tag filter with the `tag` provided. If the\n * filter is already set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param {string} tag the tag to add to the filter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.addTag = function(tag) {\n  this._change({\n    state: this.state.resetPage().addTagRefinement(tag),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Removes an numeric filter to an attribute with the `operator` and `value` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * Some parameters are optional, triggering different behavior:\n *  - if the value is not provided, then all the numeric value will be removed for the\n *  specified attribute/operator couple.\n *  - if the operator is not provided either, then all the numeric filter on this attribute\n *  will be removed.\n *\n * This method resets the current page to 0.\n * @param  {string} attribute the attribute on which the numeric filter applies\n * @param  {string} [operator] the operator of the filter\n * @param  {number} [value] the value of the filter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeNumericRefinement = function(attribute, operator, value) {\n  this._change({\n    state: this.state.resetPage().removeNumericRefinement(attribute, operator, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Removes a disjunctive filter to a faceted attribute with the `value` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * If the value is omitted, then this method will remove all the filters for the\n * attribute.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} [value] the associated value\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeDisjunctiveFacetRefinement = function(facet, value) {\n  this._change({\n    state: this.state.resetPage().removeDisjunctiveFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#removeDisjunctiveFacetRefinement}\n */\nAlgoliaSearchHelper.prototype.removeDisjunctiveRefine = function() {\n  return this.removeDisjunctiveFacetRefinement.apply(this, arguments);\n};\n\n/**\n * Removes the refinement set on a hierarchical facet.\n * @param {string} facet the facet name\n * @return {AlgoliaSearchHelper}\n * @throws Error if the facet is not defined or if the facet is not refined\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeHierarchicalFacetRefinement = function(facet) {\n  this._change({\n    state: this.state.resetPage().removeHierarchicalFacetRefinement(facet),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Removes a filter to a faceted attribute with the `value` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * If the value is omitted, then this method will remove all the filters for the\n * attribute.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} [value] the associated value\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeFacetRefinement = function(facet, value) {\n  this._change({\n    state: this.state.resetPage().removeFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#removeFacetRefinement}\n */\nAlgoliaSearchHelper.prototype.removeRefine = function() {\n  return this.removeFacetRefinement.apply(this, arguments);\n};\n\n/**\n * Removes an exclusion filter to a faceted attribute with the `value` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * If the value is omitted, then this method will remove all the filters for the\n * attribute.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} [value] the associated value\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeFacetExclusion = function(facet, value) {\n  this._change({\n    state: this.state.resetPage().removeExcludeRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#removeFacetExclusion}\n */\nAlgoliaSearchHelper.prototype.removeExclude = function() {\n  return this.removeFacetExclusion.apply(this, arguments);\n};\n\n/**\n * Removes a tag filter with the `tag` provided. If the\n * filter is not set, it doesn't change the filters.\n *\n * This method resets the current page to 0.\n * @param {string} tag tag to remove from the filter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.removeTag = function(tag) {\n  this._change({\n    state: this.state.resetPage().removeTagRefinement(tag),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Adds or removes an exclusion filter to a faceted attribute with the `value` provided. If\n * the value is set then it removes it, otherwise it adds the filter.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.toggleFacetExclusion = function(facet, value) {\n  this._change({\n    state: this.state.resetPage().toggleExcludeFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#toggleFacetExclusion}\n */\nAlgoliaSearchHelper.prototype.toggleExclude = function() {\n  return this.toggleFacetExclusion.apply(this, arguments);\n};\n\n/**\n * Adds or removes a filter to a faceted attribute with the `value` provided. If\n * the value is set then it removes it, otherwise it adds the filter.\n *\n * This method can be used for conjunctive, disjunctive and hierarchical filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value\n * @return {AlgoliaSearchHelper}\n * @throws Error will throw an error if the facet is not declared in the settings of the helper\n * @fires change\n * @chainable\n * @deprecated since version 2.19.0, see {@link AlgoliaSearchHelper#toggleFacetRefinement}\n */\nAlgoliaSearchHelper.prototype.toggleRefinement = function(facet, value) {\n  return this.toggleFacetRefinement(facet, value);\n};\n\n/**\n * Adds or removes a filter to a faceted attribute with the `value` provided. If\n * the value is set then it removes it, otherwise it adds the filter.\n *\n * This method can be used for conjunctive, disjunctive and hierarchical filters.\n *\n * This method resets the current page to 0.\n * @param  {string} facet the facet to refine\n * @param  {string} value the associated value\n * @return {AlgoliaSearchHelper}\n * @throws Error will throw an error if the facet is not declared in the settings of the helper\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.toggleFacetRefinement = function(facet, value) {\n  this._change({\n    state: this.state.resetPage().toggleFacetRefinement(facet, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * @deprecated since version 2.4.0, see {@link AlgoliaSearchHelper#toggleFacetRefinement}\n */\nAlgoliaSearchHelper.prototype.toggleRefine = function() {\n  return this.toggleFacetRefinement.apply(this, arguments);\n};\n\n/**\n * Adds or removes a tag filter with the `value` provided. If\n * the value is set then it removes it, otherwise it adds the filter.\n *\n * This method resets the current page to 0.\n * @param {string} tag tag to remove or add\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.toggleTag = function(tag) {\n  this._change({\n    state: this.state.resetPage().toggleTagRefinement(tag),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Increments the page number by one.\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n * @example\n * helper.setPage(0).nextPage().getPage();\n * // returns 1\n */\nAlgoliaSearchHelper.prototype.nextPage = function() {\n  var page = this.state.page || 0;\n  return this.setPage(page + 1);\n};\n\n/**\n * Decrements the page number by one.\n * @fires change\n * @return {AlgoliaSearchHelper}\n * @chainable\n * @example\n * helper.setPage(1).previousPage().getPage();\n * // returns 0\n */\nAlgoliaSearchHelper.prototype.previousPage = function() {\n  var page = this.state.page || 0;\n  return this.setPage(page - 1);\n};\n\n/**\n * @private\n */\nfunction setCurrentPage(page) {\n  if (page < 0) throw new Error('Page requested below 0.');\n\n  this._change({\n    state: this.state.setPage(page),\n    isPageReset: false\n  });\n\n  return this;\n}\n\n/**\n * Change the current page\n * @deprecated\n * @param  {number} page The page number\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.setCurrentPage = setCurrentPage;\n\n/**\n * Updates the current page.\n * @function\n * @param  {number} page The page number\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.setPage = setCurrentPage;\n\n/**\n * Updates the name of the index that will be targeted by the query.\n *\n * This method resets the current page to 0.\n * @param {string} name the index name\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.setIndex = function(name) {\n  this._change({\n    state: this.state.resetPage().setIndex(name),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Update a parameter of the search. This method reset the page\n *\n * The complete list of parameters is available on the\n * [Algolia website](https://www.algolia.com/doc/rest#query-an-index).\n * The most commonly used parameters have their own [shortcuts](#query-parameters-shortcuts)\n * or benefit from higher-level APIs (all the kind of filters and facets have their own API)\n *\n * This method resets the current page to 0.\n * @param {string} parameter name of the parameter to update\n * @param {any} value new value of the parameter\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n * @example\n * helper.setQueryParameter('hitsPerPage', 20).search();\n */\nAlgoliaSearchHelper.prototype.setQueryParameter = function(parameter, value) {\n  this._change({\n    state: this.state.resetPage().setQueryParameter(parameter, value),\n    isPageReset: true\n  });\n\n  return this;\n};\n\n/**\n * Set the whole state (warning: will erase previous state)\n * @param {SearchParameters} newState the whole new state\n * @return {AlgoliaSearchHelper}\n * @fires change\n * @chainable\n */\nAlgoliaSearchHelper.prototype.setState = function(newState) {\n  this._change({\n    state: SearchParameters.make(newState),\n    isPageReset: false\n  });\n\n  return this;\n};\n\n/**\n * Override the current state without triggering a change event.\n * Do not use this method unless you know what you are doing. (see the example\n * for a legit use case)\n * @param {SearchParameters} newState the whole new state\n * @return {AlgoliaSearchHelper}\n * @example\n *  helper.on('change', function(state){\n *    // In this function you might want to find a way to store the state in the url/history\n *    updateYourURL(state)\n *  })\n *  window.onpopstate = function(event){\n *    // This is naive though as you should check if the state is really defined etc.\n *    helper.overrideStateWithoutTriggeringChangeEvent(event.state).search()\n *  }\n * @chainable\n */\nAlgoliaSearchHelper.prototype.overrideStateWithoutTriggeringChangeEvent = function(newState) {\n  this.state = new SearchParameters(newState);\n  return this;\n};\n\n/**\n * Check if an attribute has any numeric, conjunctive, disjunctive or hierarchical filters.\n * @param {string} attribute the name of the attribute\n * @return {boolean} true if the attribute is filtered by at least one value\n * @example\n * // hasRefinements works with numeric, conjunctive, disjunctive and hierarchical filters\n * helper.hasRefinements('price'); // false\n * helper.addNumericRefinement('price', '>', 100);\n * helper.hasRefinements('price'); // true\n *\n * helper.hasRefinements('color'); // false\n * helper.addFacetRefinement('color', 'blue');\n * helper.hasRefinements('color'); // true\n *\n * helper.hasRefinements('material'); // false\n * helper.addDisjunctiveFacetRefinement('material', 'plastic');\n * helper.hasRefinements('material'); // true\n *\n * helper.hasRefinements('categories'); // false\n * helper.toggleFacetRefinement('categories', 'kitchen > knife');\n * helper.hasRefinements('categories'); // true\n *\n */\nAlgoliaSearchHelper.prototype.hasRefinements = function(attribute) {\n  if (objectHasKeys(this.state.getNumericRefinements(attribute))) {\n    return true;\n  } else if (this.state.isConjunctiveFacet(attribute)) {\n    return this.state.isFacetRefined(attribute);\n  } else if (this.state.isDisjunctiveFacet(attribute)) {\n    return this.state.isDisjunctiveFacetRefined(attribute);\n  } else if (this.state.isHierarchicalFacet(attribute)) {\n    return this.state.isHierarchicalFacetRefined(attribute);\n  }\n\n  // there's currently no way to know that the user did call `addNumericRefinement` at some point\n  // thus we cannot distinguish if there once was a numeric refinement that was cleared\n  // so we will return false in every other situations to be consistent\n  // while what we should do here is throw because we did not find the attribute in any type\n  // of refinement\n  return false;\n};\n\n/**\n * Check if a value is excluded for a specific faceted attribute. If the value\n * is omitted then the function checks if there is any excluding refinements.\n *\n * @param  {string}  facet name of the attribute for used for faceting\n * @param  {string}  [value] optional value. If passed will test that this value\n   * is filtering the given facet.\n * @return {boolean} true if refined\n * @example\n * helper.isExcludeRefined('color'); // false\n * helper.isExcludeRefined('color', 'blue') // false\n * helper.isExcludeRefined('color', 'red') // false\n *\n * helper.addFacetExclusion('color', 'red');\n *\n * helper.isExcludeRefined('color'); // true\n * helper.isExcludeRefined('color', 'blue') // false\n * helper.isExcludeRefined('color', 'red') // true\n */\nAlgoliaSearchHelper.prototype.isExcluded = function(facet, value) {\n  return this.state.isExcludeRefined(facet, value);\n};\n\n/**\n * @deprecated since 2.4.0, see {@link AlgoliaSearchHelper#hasRefinements}\n */\nAlgoliaSearchHelper.prototype.isDisjunctiveRefined = function(facet, value) {\n  return this.state.isDisjunctiveFacetRefined(facet, value);\n};\n\n/**\n * Check if the string is a currently filtering tag.\n * @param {string} tag tag to check\n * @return {boolean}\n */\nAlgoliaSearchHelper.prototype.hasTag = function(tag) {\n  return this.state.isTagRefined(tag);\n};\n\n/**\n * @deprecated since 2.4.0, see {@link AlgoliaSearchHelper#hasTag}\n */\nAlgoliaSearchHelper.prototype.isTagRefined = function() {\n  return this.hasTagRefinements.apply(this, arguments);\n};\n\n\n/**\n * Get the name of the currently used index.\n * @return {string}\n * @example\n * helper.setIndex('highestPrice_products').getIndex();\n * // returns 'highestPrice_products'\n */\nAlgoliaSearchHelper.prototype.getIndex = function() {\n  return this.state.index;\n};\n\nfunction getCurrentPage() {\n  return this.state.page;\n}\n\n/**\n * Get the currently selected page\n * @deprecated\n * @return {number} the current page\n */\nAlgoliaSearchHelper.prototype.getCurrentPage = getCurrentPage;\n/**\n * Get the currently selected page\n * @function\n * @return {number} the current page\n */\nAlgoliaSearchHelper.prototype.getPage = getCurrentPage;\n\n/**\n * Get all the tags currently set to filters the results.\n *\n * @return {string[]} The list of tags currently set.\n */\nAlgoliaSearchHelper.prototype.getTags = function() {\n  return this.state.tagRefinements;\n};\n\n/**\n * Get the list of refinements for a given attribute. This method works with\n * conjunctive, disjunctive, excluding and numerical filters.\n *\n * See also SearchResults#getRefinements\n *\n * @param {string} facetName attribute name used for faceting\n * @return {Array.<FacetRefinement|NumericRefinement>} All Refinement are objects that contain a value, and\n * a type. Numeric also contains an operator.\n * @example\n * helper.addNumericRefinement('price', '>', 100);\n * helper.getRefinements('price');\n * // [\n * //   {\n * //     \"value\": [\n * //       100\n * //     ],\n * //     \"operator\": \">\",\n * //     \"type\": \"numeric\"\n * //   }\n * // ]\n * @example\n * helper.addFacetRefinement('color', 'blue');\n * helper.addFacetExclusion('color', 'red');\n * helper.getRefinements('color');\n * // [\n * //   {\n * //     \"value\": \"blue\",\n * //     \"type\": \"conjunctive\"\n * //   },\n * //   {\n * //     \"value\": \"red\",\n * //     \"type\": \"exclude\"\n * //   }\n * // ]\n * @example\n * helper.addDisjunctiveFacetRefinement('material', 'plastic');\n * // [\n * //   {\n * //     \"value\": \"plastic\",\n * //     \"type\": \"disjunctive\"\n * //   }\n * // ]\n */\nAlgoliaSearchHelper.prototype.getRefinements = function(facetName) {\n  var refinements = [];\n\n  if (this.state.isConjunctiveFacet(facetName)) {\n    var conjRefinements = this.state.getConjunctiveRefinements(facetName);\n\n    conjRefinements.forEach(function(r) {\n      refinements.push({\n        value: r,\n        type: 'conjunctive'\n      });\n    });\n\n    var excludeRefinements = this.state.getExcludeRefinements(facetName);\n\n    excludeRefinements.forEach(function(r) {\n      refinements.push({\n        value: r,\n        type: 'exclude'\n      });\n    });\n  } else if (this.state.isDisjunctiveFacet(facetName)) {\n    var disjRefinements = this.state.getDisjunctiveRefinements(facetName);\n\n    disjRefinements.forEach(function(r) {\n      refinements.push({\n        value: r,\n        type: 'disjunctive'\n      });\n    });\n  }\n\n  var numericRefinements = this.state.getNumericRefinements(facetName);\n\n  Object.keys(numericRefinements).forEach(function(operator) {\n    var value = numericRefinements[operator];\n\n    refinements.push({\n      value: value,\n      operator: operator,\n      type: 'numeric'\n    });\n  });\n\n  return refinements;\n};\n\n/**\n * Return the current refinement for the (attribute, operator)\n * @param {string} attribute attribute in the record\n * @param {string} operator operator applied on the refined values\n * @return {Array.<number|number[]>} refined values\n */\nAlgoliaSearchHelper.prototype.getNumericRefinement = function(attribute, operator) {\n  return this.state.getNumericRefinement(attribute, operator);\n};\n\n/**\n * Get the current breadcrumb for a hierarchical facet, as an array\n * @param  {string} facetName Hierarchical facet name\n * @return {array.<string>} the path as an array of string\n */\nAlgoliaSearchHelper.prototype.getHierarchicalFacetBreadcrumb = function(facetName) {\n  return this.state.getHierarchicalFacetBreadcrumb(facetName);\n};\n\n// /////////// PRIVATE\n\n/**\n * Perform the underlying queries\n * @private\n * @return {undefined}\n * @fires search\n * @fires result\n * @fires error\n */\nAlgoliaSearchHelper.prototype._search = function(options) {\n  var state = this.state;\n  var states = [];\n  var mainQueries = [];\n\n  if (!options.onlyWithDerivedHelpers) {\n    mainQueries = requestBuilder._getQueries(state.index, state);\n\n    states.push({\n      state: state,\n      queriesCount: mainQueries.length,\n      helper: this\n    });\n\n    this.emit('search', {\n      state: state,\n      results: this.lastResults\n    });\n  }\n\n  var derivedQueries = this.derivedHelpers.map(function(derivedHelper) {\n    var derivedState = derivedHelper.getModifiedState(state);\n    var derivedStateQueries = requestBuilder._getQueries(derivedState.index, derivedState);\n\n    states.push({\n      state: derivedState,\n      queriesCount: derivedStateQueries.length,\n      helper: derivedHelper\n    });\n\n    derivedHelper.emit('search', {\n      state: derivedState,\n      results: derivedHelper.lastResults\n    });\n\n    return derivedStateQueries;\n  });\n\n  var queries = Array.prototype.concat.apply(mainQueries, derivedQueries);\n  var queryId = this._queryId++;\n\n  this._currentNbQueries++;\n\n  try {\n    this.client.search(queries)\n      .then(this._dispatchAlgoliaResponse.bind(this, states, queryId))\n      .catch(this._dispatchAlgoliaError.bind(this, queryId));\n  } catch (error) {\n    // If we reach this part, we're in an internal error state\n    this.emit('error', {\n      error: error\n    });\n  }\n};\n\n/**\n * Transform the responses as sent by the server and transform them into a user\n * usable object that merge the results of all the batch requests. It will dispatch\n * over the different helper + derived helpers (when there are some).\n * @private\n * @param {array.<{SearchParameters, AlgoliaQueries, AlgoliaSearchHelper}>}\n *  state state used for to generate the request\n * @param {number} queryId id of the current request\n * @param {object} content content of the response\n * @return {undefined}\n */\nAlgoliaSearchHelper.prototype._dispatchAlgoliaResponse = function(states, queryId, content) {\n  // FIXME remove the number of outdated queries discarded instead of just one\n\n  if (queryId < this._lastQueryIdReceived) {\n    // Outdated answer\n    return;\n  }\n\n  this._currentNbQueries -= (queryId - this._lastQueryIdReceived);\n  this._lastQueryIdReceived = queryId;\n\n  if (this._currentNbQueries === 0) this.emit('searchQueueEmpty');\n\n  var results = content.results.slice();\n\n  states.forEach(function(s) {\n    var state = s.state;\n    var queriesCount = s.queriesCount;\n    var helper = s.helper;\n    var specificResults = results.splice(0, queriesCount);\n\n    var formattedResponse = helper.lastResults = new SearchResults(state, specificResults);\n\n    helper.emit('result', {\n      results: formattedResponse,\n      state: state\n    });\n  });\n};\n\nAlgoliaSearchHelper.prototype._dispatchAlgoliaError = function(queryId, error) {\n  if (queryId < this._lastQueryIdReceived) {\n    // Outdated answer\n    return;\n  }\n\n  this._currentNbQueries -= queryId - this._lastQueryIdReceived;\n  this._lastQueryIdReceived = queryId;\n\n  this.emit('error', {\n    error: error\n  });\n\n  if (this._currentNbQueries === 0) this.emit('searchQueueEmpty');\n};\n\nAlgoliaSearchHelper.prototype.containsRefinement = function(query, facetFilters, numericFilters, tagFilters) {\n  return query ||\n    facetFilters.length !== 0 ||\n    numericFilters.length !== 0 ||\n    tagFilters.length !== 0;\n};\n\n/**\n * Test if there are some disjunctive refinements on the facet\n * @private\n * @param {string} facet the attribute to test\n * @return {boolean}\n */\nAlgoliaSearchHelper.prototype._hasDisjunctiveRefinements = function(facet) {\n  return this.state.disjunctiveRefinements[facet] &&\n    this.state.disjunctiveRefinements[facet].length > 0;\n};\n\nAlgoliaSearchHelper.prototype._change = function(event) {\n  var state = event.state;\n  var isPageReset = event.isPageReset;\n\n  if (state !== this.state) {\n    this.state = state;\n\n    this.emit('change', {\n      state: this.state,\n      results: this.lastResults,\n      isPageReset: isPageReset\n    });\n  }\n};\n\n/**\n * Clears the cache of the underlying Algolia client.\n * @return {AlgoliaSearchHelper}\n */\nAlgoliaSearchHelper.prototype.clearCache = function() {\n  this.client.clearCache && this.client.clearCache();\n  return this;\n};\n\n/**\n * Updates the internal client instance. If the reference of the clients\n * are equal then no update is actually done.\n * @param  {AlgoliaSearch} newClient an AlgoliaSearch client\n * @return {AlgoliaSearchHelper}\n */\nAlgoliaSearchHelper.prototype.setClient = function(newClient) {\n  if (this.client === newClient) return this;\n\n  if (typeof newClient.addAlgoliaAgent === 'function') {\n    newClient.addAlgoliaAgent('JS Helper (' + version + ')');\n  }\n  this.client = newClient;\n\n  return this;\n};\n\n/**\n * Gets the instance of the currently used client.\n * @return {AlgoliaSearch}\n */\nAlgoliaSearchHelper.prototype.getClient = function() {\n  return this.client;\n};\n\n/**\n * Creates an derived instance of the Helper. A derived helper\n * is a way to request other indices synchronised with the lifecycle\n * of the main Helper. This mechanism uses the multiqueries feature\n * of Algolia to aggregate all the requests in a single network call.\n *\n * This method takes a function that is used to create a new SearchParameter\n * that will be used to create requests to Algolia. Those new requests\n * are created just before the `search` event. The signature of the function\n * is `SearchParameters -> SearchParameters`.\n *\n * This method returns a new DerivedHelper which is an EventEmitter\n * that fires the same `search`, `result` and `error` events. Those\n * events, however, will receive data specific to this DerivedHelper\n * and the SearchParameters that is returned by the call of the\n * parameter function.\n * @param {function} fn SearchParameters -> SearchParameters\n * @return {DerivedHelper}\n */\nAlgoliaSearchHelper.prototype.derive = function(fn) {\n  var derivedHelper = new DerivedHelper(this, fn);\n  this.derivedHelpers.push(derivedHelper);\n  return derivedHelper;\n};\n\n/**\n * This method detaches a derived Helper from the main one. Prefer using the one from the\n * derived helper itself, to remove the event listeners too.\n * @private\n * @return {undefined}\n * @throws Error\n */\nAlgoliaSearchHelper.prototype.detachDerivedHelper = function(derivedHelper) {\n  var pos = this.derivedHelpers.indexOf(derivedHelper);\n  if (pos === -1) throw new Error('Derived helper already detached');\n  this.derivedHelpers.splice(pos, 1);\n};\n\n/**\n * This method returns true if there is currently at least one on-going search.\n * @return {boolean} true if there is a search pending\n */\nAlgoliaSearchHelper.prototype.hasPendingRequests = function() {\n  return this._currentNbQueries > 0;\n};\n\n/**\n * @typedef AlgoliaSearchHelper.NumericRefinement\n * @type {object}\n * @property {number[]} value the numbers that are used for filtering this attribute with\n * the operator specified.\n * @property {string} operator the faceting data: value, number of entries\n * @property {string} type will be 'numeric'\n */\n\n/**\n * @typedef AlgoliaSearchHelper.FacetRefinement\n * @type {object}\n * @property {string} value the string use to filter the attribute\n * @property {string} type the type of filter: 'conjunctive', 'disjunctive', 'exclude'\n */\n\nmodule.exports = AlgoliaSearchHelper;\n","'use strict';\n\nvar AlgoliaSearchHelper = require('./src/algoliasearch.helper');\n\nvar SearchParameters = require('./src/SearchParameters');\nvar SearchResults = require('./src/SearchResults');\n\n/**\n * The algoliasearchHelper module is the function that will let its\n * contains everything needed to use the Algoliasearch\n * Helper. It is a also a function that instanciate the helper.\n * To use the helper, you also need the Algolia JS client v3.\n * @example\n * //using the UMD build\n * var client = algoliasearch('latency', '6be0576ff61c053d5f9a3225e2a90f76');\n * var helper = algoliasearchHelper(client, 'bestbuy', {\n *   facets: ['shipping'],\n *   disjunctiveFacets: ['category']\n * });\n * helper.on('result', function(event) {\n *   console.log(event.results);\n * });\n * helper\n *   .toggleFacetRefinement('category', 'Movies & TV Shows')\n *   .toggleFacetRefinement('shipping', 'Free shipping')\n *   .search();\n * @example\n * // The helper is an event emitter using the node API\n * helper.on('result', updateTheResults);\n * helper.once('result', updateTheResults);\n * helper.removeListener('result', updateTheResults);\n * helper.removeAllListeners('result');\n * @module algoliasearchHelper\n * @param  {AlgoliaSearch} client an AlgoliaSearch client\n * @param  {string} index the name of the index to query\n * @param  {SearchParameters|object} opts an object defining the initial config of the search. It doesn't have to be a {SearchParameters}, just an object containing the properties you need from it.\n * @return {AlgoliaSearchHelper}\n */\nfunction algoliasearchHelper(client, index, opts) {\n  return new AlgoliaSearchHelper(client, index, opts);\n}\n\n/**\n * The version currently used\n * @member module:algoliasearchHelper.version\n * @type {number}\n */\nalgoliasearchHelper.version = require('./src/version.js');\n\n/**\n * Constructor for the Helper.\n * @member module:algoliasearchHelper.AlgoliaSearchHelper\n * @type {AlgoliaSearchHelper}\n */\nalgoliasearchHelper.AlgoliaSearchHelper = AlgoliaSearchHelper;\n\n/**\n * Constructor for the object containing all the parameters of the search.\n * @member module:algoliasearchHelper.SearchParameters\n * @type {SearchParameters}\n */\nalgoliasearchHelper.SearchParameters = SearchParameters;\n\n/**\n * Constructor for the object containing the results of the search.\n * @member module:algoliasearchHelper.SearchResults\n * @type {SearchResults}\n */\nalgoliasearchHelper.SearchResults = SearchResults;\n\nmodule.exports = algoliasearchHelper;\n","<script>\n\timport FacetList from './FacetList.svelte'\n\timport Hits from './Hits.svelte'\n\timport algoliasearch from 'algoliasearch'\n\timport algoliasearchHelper from 'algoliasearch-helper'\n\n\tconst applicationID = '1865UEERBB'\n\tconst apiKey = '13ca6cfc9771cbec1d5bdb4aec7d570b'\n\tconst indexName = 'Test'\n\n\tconst facetDictionary = [\n\t\t{ name: 'food_type', label: 'Cuisine/Food Type' },\n\t\t{ name: 'dining_style', label: 'Dining Style' },\n\t\t{ name: 'stars_count', label: 'Rating' },\n\t\t{ name: 'price_range', label: 'Price Range' },\n\t\t{ name: 'payment_options', label: 'Payment Options' }\n\t]\n\n\tconst disjunctiveFacets = facetDictionary.map(item => item.name)\n\tconst client = algoliasearch(applicationID, apiKey)\n\tconst helper = algoliasearchHelper(client, indexName, { disjunctiveFacets })\n\n\thelper.search()\n\n\tfetch('http://myexternalip.com/raw')\n\t\t\t.then(res => res.text())\n\t\t\t.then(ip => fetch(`http://ip-api.com/json/${ip}`))\n\t\t\t.then(res => res.json())\n\t\t\t.then(({ lat, lon }) => {\n\t\t\t\thelper.setQueryParameter('aroundLatLng', `${lat},${lon}`)\n\t\t\t\thelper.search()\n\t\t\t})\n\n\tnavigator.geolocation.watchPosition(({ coords: { latitude, longitude }}) => {\n\t\thelper.setQueryParameter('aroundLatLng', `${latitude},${longitude}`)\n\t\thelper.search()\n\t})\n\n\tlet searchRes\n\n\thelper.on('result', ({ results }) => {\n\t\tsearchRes = results\n\t})\n\n\tlet searchInput = ''\n\tconst updateSearch = () => {\n\t\thelper.setQuery(searchInput)\n\t\thelper.search()\n\t}\n</script>\n\n<div class=\"input-wrapper\">\n  <input type=\"text\" bind:value={searchInput} on:keyup=\"{updateSearch}\" autocomplete=\"off\" id=\"search-box\" placeholder=\"Search for restaurants by name, cuisine, location...\"/>\n</div>\n<div id=\"wrapper\">\n\t<div id=\"facet-container\">\n\t\t{#each facetDictionary as facets}\n\t\t\t<FacetList facets={facets} results={searchRes} helper={helper}/>\n\t\t{/each}\n\t</div>\n\t<div id=\"results-wrapper\">\n\t\t<div id=\"results-title\">\n\t\t\t{#if searchRes}\n\t\t\t\t<span>{searchRes.nbHits} results found</span> in {searchRes.processingTimeMS / 1000} seconds\n\t\t\t{/if}\n\t\t</div>\n\t  <ul id=\"container\">\n\t\t\t{#if searchRes}\n\t\t\t\t{#each searchRes.hits as hit}\n\t\t\t\t\t<Hits hit={hit._highlightResult} />\n\t\t\t\t{/each}\n\t\t\t{/if}\n\t\t</ul>\n\t</div>\n</div>\n\n<style>\n\tbody {\n\t\tfont-family: system-ui;\n\t\tfont-weight: 300;\n\t\tmargin: 0 !important;\n\t}\n\n\t#wrapper {\n\t\tdisplay: grid;\n\t\tgrid-template-columns: 1fr 2fr;\n\t\twidth: 90%;\n\t\tmargin: auto;\n\t\tmax-width: 1000px;\n\t\tmargin-top: 40px;\n\t\tcolumn-gap: 5em;\n\t\tfont-family: system-ui;\n\t}\n\n\t#search-box {\n\t\tpadding: 1em;\n\t\tborder: none;\n\t\tborder-radius: 5px;\n\t\tbox-sizing: border-box;\n\t\twidth: 90%;\n\t\tmax-width: 1000px;\n\t\tfont-size: 16px;\n\t\tfont-family: system-ui;\n\t}\n\n\t#container {\n\t\tpadding: 0;\n\t\tmargin: 0;\n\t\tlist-style: none;\n\t}\n\n\t#container li {\n\t  padding: 8px 0;\n\t}\n\n\t#container em {\n\t  font-weight: 800;\n\t  font-style: normal;\n\t}\n\n\t.input-wrapper {\n\t    text-align: center;\n\t    padding: 2rem;\n\t    background: #2b61c4;\n\t}\n\n\t#results-title {\n\t  font-size: 18px;\n\t  margin-bottom: 1em;\n\t}\n\n\t#results-title span {\n\t  font-size: 22px;\n\t  margin-right: 5px;\n\t  font-weight: 500;\n\t}\n</style>\n","import App from './App.svelte'\n\nconst app = new App({\n\ttarget: document.body,\n\tprops: {\n\t\tname: 'fizz buzz'\n\t}\n})\n\nexport default app\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","src_url_equal_anchor","current_component","src_url_equal","element_src","url","document","createElement","href","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","i","length","d","element","name","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_input_value","input","set_current_component","component","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","push","seen_callbacks","Set","flushidx","flush","saved_component","update","$$","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","outros","group_outros","r","c","check_outros","transition_in","block","local","delete","transition_out","o","create_component","mount_component","customElement","on_mount","on_destroy","m","new_on_destroy","map","filter","destroy_component","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","append_styles","parent_component","bound","on_disconnect","context","Map","callbacks","skip_bound","root","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","$destroy","this","$on","type","index","indexOf","splice","$set","$$props","obj","$$set","keys","each_value","t0_value","t2_value","count","span","t0","t2","t1_value","each_value_1","div1","div0","t1","getStarClasses","div","create_if_block_1","li","li_class_value","isRefined","li_id_value","label","create_if_block","ul","ul_id_value","div2","starIndex","score","Math","floor","ceil","facets","results","helper","rawList","activateFacet","facetsName","selectedFacet","item","toggleRefinement","search","rawFacetValues","getFacetValues","values","re","RegExp","matching","entry","test","reduced","reduce","div_class_value","stars_count","reviews_count","food_type","neighborhood","price_range","dining_style","reserve_url","replace","img","img_src_value","a1","div5","span0","div3","span1","span2","span3","div4","a0","innerHTML","raw0_value","t5","t5_value","raw1_value","raw2_value","raw3_value","raw4_value","hit","module","exports","t","e","defineProperty","enumerable","configurable","writable","getOwnPropertySymbols","n","getOwnPropertyDescriptor","apply","arguments","getOwnPropertyDescriptors","defineProperties","prototype","propertyIsEnumerable","call","isArray","Symbol","iterator","toString","u","next","done","return","TypeError","concat","key","localStorage","window","JSON","parse","getItem","get","miss","stringify","all","set","setItem","removeItem","caches","shift","catch","s","serializable","headers","WithinHeaders","queryParameters","WithinQueryParameters","f","setTimeout","min","assign","wait","random","h","encodeURIComponent","y","entries","timeout","cacheable","g","Read","Write","Any","v","P","w","status","lastUpdate","Date","now","O","protocol","accept","I","x","j","D","q","getTimeout","statelessHosts","S","method","toLowerCase","userAgent","message","transporterStackTrace","R","N","path","connectTimeout","timeouts","connect","responseTimeout","request","response","host","triesLeft","onSuccess","content","onRetry","isTimedOut","logger","info","A","hostsCache","onFail","requester","send","reverse","k","requestsCache","responsesCache","hosts","read","mappedRequestOptions","transporter","reject","write","T","segment","version","E","charAt","substr","join","C","U","z","J","F","H","M","K","batch","hits","shouldStop","cursor","page","W","acl","tt","B","cluster","Q","users","G","clearExistingDictionaryEntries","requests","action","body","jt","taskID","L","operation","destination","ut","methods","waitTask","de","V","scope","pe","Rules","_","Settings","X","Synonyms","Y","Z","$","objectID","et","rt","nt","at","ot","it","retrieveMappings","getClusters","appId","indexName","st","ct","ft","dt","lt","pt","ht","mt","params","yt","facetName","facetQuery","searchForFacetValues","ue","gt","vt","bt","Pt","wt","query","Ot","It","xt","every","Dt","qt","St","hitsPerPage","se","_highlightResult","kt","ce","Tt","batchSize","taskIDs","objectIDs","Nt","Et","forwardToReplicas","Rt","At","Ct","Ut","zt","le","DeleteObject","Jt","Ft","Ht","Lt","Mt","queryLanguages","Kt","paginate","ie","object","position","parseInt","nbPages","Wt","Bt","Qt","attributesToRetrieve","Gt","getVersion","Vt","_t","Xt","createIfNotExists","PartialUpdateObject","PartialUpdateObjectNoCreate","Yt","safe","autoGenerateObjectIDIfNotExist","substring","ee","Zt","ne","clearExistingRules","$t","oe","clearExistingSynonyms","te","AddObject","UpdateObject","ae","replaceExistingSynonyms","fe","DeleteIndex","ClearIndex","he","me","ye","ge","apiKey","XMLHttpRequest","open","setRequestHeader","abort","onreadystatechange","readyState","OPENED","clearTimeout","onerror","responseText","onload","debug","console","error","region","getPersonalizationStrategy","setPersonalizationStrategy","authMode","addAlgoliaAgent","clearCache","multipleBatch","multipleGetObjects","multipleQueries","copyIndex","copySettings","copySynonyms","copyRules","moveIndex","listIndices","getLogs","listClusters","multipleSearchForFacetValues","getApiKey","addApiKey","listApiKeys","updateApiKey","deleteApiKey","restoreApiKey","assignUserID","assignUserIDs","getUserID","searchUserIDs","listUserIDs","getTopUserIDs","removeUserID","hasPendingMappings","clearDictionaryEntries","deleteDictionaryEntries","getDictionarySettings","getAppTask","replaceDictionaryEntries","saveDictionaryEntries","searchDictionaryEntries","setDictionarySettings","waitAppTask","customRequest","initIndex","findAnswers","getObject","getObjects","saveObject","saveObjects","setSettings","getSettings","partialUpdateObject","partialUpdateObjects","deleteObject","deleteObjects","deleteBy","clearObjects","browseObjects","getObjectPosition","findObject","exists","saveSynonym","saveSynonyms","getSynonym","searchSynonyms","browseSynonyms","deleteSynonym","clearSynonyms","replaceAllObjects","replaceAllSynonyms","searchRules","getRule","deleteRule","saveRule","saveRules","replaceAllRules","browseRules","clearRules","initAnalytics","addABTest","getABTest","getABTests","stopABTest","deleteABTest","initPersonalization","initRecommendation","isObjectOrArrayOrFunction","_merge","source","hasOwnProperty","sourceVal","targetVal","merge_1","defaultsPure","sources","slice","reduceRight","acc","undefined","intersection_1","arr1","arr2","find","array","comparator","valToNumber_1","valToNumber","parseFloat","Error","omit","excluded","sourceKeys","objectHasKeys_1","lib","addRefinement","refinementList","valueAsString","facetRefinement","mod","removeRefinement","clearRefinement","refinementType","objectHasKeys","hasChanged","newRefinementList","memo","facetList","refinementValue","containsRefinements","refinementValueAsString","RefinementList","isEqualNumericRefinement","el","SearchParameters","newParameters","userToken","_parseNumbers","warn","disjunctiveFacets","hierarchicalFacets","facetsRefinements","facetsExcludes","disjunctiveFacetsRefinements","numericRefinements","tagRefinements","hierarchicalFacetsRefinements","self","paramName","isKeyKnown","PARAMETERS","isValueDefined","partialState","numbers","parsedValue","isNaN","insideBoundingBox","geoRect","operators","operator","parsedValues","vPrime","merge","make","facet","rootPath","currentRefinement","getHierarchicalRefinement","clearRefinements","toggleHierarchicalFacetRefinement","validate","currentState","parameters","tagFilters","numericFilters","constructor","patch","_clearNumericRefinements","setQueryParameters","clearTags","setIndex","setQuery","newQuery","setPage","newPage","setFacets","setDisjunctiveFacets","setHitsPerPage","setTypoTolerance","typoTolerance","addNumericRefinement","isNumericRefined","getConjunctiveRefinements","isConjunctiveFacet","getDisjunctiveRefinements","isDisjunctiveFacet","getExcludeRefinements","removeNumericRefinement","paramValue","op","val","getNumericRefinements","getNumericRefinement","newNumericRefinements","operatorList","outValues","addFacet","addDisjunctiveFacet","addHierarchicalFacet","hierarchicalFacet","isHierarchicalFacet","addFacetRefinement","addExcludeRefinement","addDisjunctiveFacetRefinement","addTagRefinement","tag","isTagRefined","modification","removeFacet","removeDisjunctiveFacet","removeHierarchicalFacet","removeFacetRefinement","removeExcludeRefinement","removeDisjunctiveFacetRefinement","removeTagRefinement","toggleFacetRefinement","toggleConjunctiveFacetRefinement","toggleDisjunctiveFacetRefinement","toggleExcludeFacetRefinement","separator","_getHierarchicalFacetSeparator","getHierarchicalFacetByName","lastIndexOf","addHierarchicalFacetRefinement","isHierarchicalFacetRefined","removeHierarchicalFacetRefinement","toggleTagRefinement","isFacetRefined","isExcludeRefined","isDisjunctiveFacetRefined","refinements","isOperatorDefined","searchedValue","isAttributeValueDefined","currentValue","getRefinedDisjunctiveFacets","disjunctiveNumericRefinedFacets","intersection","getRefinedHierarchicalFacets","getUnrefinedDisjunctiveFacets","refinedFacets","managedParameters","getQueryParams","queryParams","setQueryParameter","parameter","nextWithNumbers","previousPlainObject","nextPlainObject","previous","isPreviousValueDefined","isNextValueDefined","resetPage","_getHierarchicalFacetSortBy","sortBy","_getHierarchicalRootPath","_getHierarchicalShowParentLevel","showParentLevel","hierarchicalFacetName","getHierarchicalFacetBreadcrumb","refinement","split","part","trim","SearchParameters_1","compareAscending","other","valIsDefined","valIsNull","othIsDefined","othIsNull","orderBy_1","collection","iteratees","orders","result","criteria","iteratee","sort","res","compact","Boolean","findIndex","formatSort","defaults","defaultInstructions","out","sortInstruction","matchingDefault","defaultInstruction","escapeFacetValue_1","String","generateHierarchicalTree_1","state","hierarchicalFacetResult","hierarchicalFacetIndex","hierarchicalFacetRefinement","hierarchicalSeparator","hierarchicalRootPath","hierarchicalShowParentLevel","prepareHierarchicalFacetSortBy","rootExhaustive","facetResult","exhaustive","generateTreeFn","hierarchicalTree","currentHierarchicalLevel","parent","level","subtree","picked","facetValue","tuple","parentPath","onlyMatchingTree","orderBy","facetCount","parts","escapedValue","escapeFacetValue","format","unescapeFacetValue","generateHierarchicalTree","fv","getIndices","attributes","indices","idx","assignFacetStats","dest","facetStats","stats","SearchResults","mainSubResponse","_rawResults","processingTimeMS","sum","facetsIndices","disjunctiveFacetsIndices","nextDisjunctiveResult","mainFacets","facetKey","hierarchicalAttributeName","facetValueObject","facetIndex","idxAttributeName","exhaustiveFacetsCount","isFacetDisjunctive","isFacetConjunctive","facets_stats","disjunctiveFacet","dfacet","facetResults","attributeIndex","dataFromMainRequest","refinedFacet","defaultData","excludes","_state","recSort","sortFn","names","childNode","sortedChildren","getFacetStatsIfAvailable","getRefinement","attributeName","resultsFacets","getFacetByName","predicate","DEFAULT_SORT","opts","facetValues","isExcluded","extractNormalizedFacetValues","facetOrdering","renderingContent","getFacetOrdering","orderedFacets","remainingFacets","reverseOrder","order","ordering","sortRemainingBy","sortViaFacetOrdering","vanillaSortFn","getFacetStats","getRefinements","facetDeclaration","rootFacet","intermediateFacet","newFacet","numericValue","SearchResults_1","EventEmitter","_events","_maxListeners","events","isFunction","arg","isObject","isUndefined","defaultMaxListeners","setMaxListeners","emit","er","len","args","listeners","err","addListener","listener","newListener","warned","trace","on","once","fired","removeListener","list","removeAllListeners","listenerCount","evlistener","emitter","inherits_1","ctor","superCtor","DerivedHelper","mainHelper","main","lastResults","inherits","detachDerivedHelper","getModifiedState","DerivedHelper_1","requestBuilder","_getQueries","queries","_getHitsSearchParams","_getDisjunctiveFacetSearchParams","_getHitsHierarchicalFacetsAttributes","facetFilters","_getFacetFilters","_getNumericFilters","_getTagFilters","additionalParams","hierarchicalRootLevel","attributesToHighlight","attributesToSnippet","analytics","clickAnalytics","_getDisjunctiveHierarchicalFacetAttribute","vs","orFilters","attributeToRefine","attributesIndex","allAttributes","hierarchicalRefinement","newAttributes","rootLevel","parentLevel","getSearchForFacetQuery","maxFacetHits","stateForSearchForFacetValues","searchForFacetSearchParameters","requestBuilder_1","require$$0","AlgoliaSearchHelper","client","setClient","_queryId","_lastQueryIdReceived","derivedHelpers","_currentNbQueries","setCurrentPage","_change","isPageReset","getCurrentPage","_search","onlyWithDerivedHelpers","searchOnlyWithDerivedHelpers","getQuery","searchOnce","cb","tempState","_originalResponse","derivedHelper","derivedState","attributesForPrediction","nbHits","errorMessage","userState","clientHasSFFV","isDisjunctive","algoliaQuery","facetHits","addDisjunctiveRefine","addRefine","addFacetExclusion","addExclude","addTag","removeDisjunctiveRefine","removeRefine","removeFacetExclusion","removeExclude","removeTag","toggleFacetExclusion","toggleExclude","toggleRefine","toggleTag","nextPage","previousPage","setState","newState","overrideStateWithoutTriggeringChangeEvent","hasRefinements","isDisjunctiveRefined","hasTag","hasTagRefinements","getIndex","getPage","getTags","states","mainQueries","queriesCount","derivedQueries","derivedStateQueries","queryId","_dispatchAlgoliaResponse","bind","_dispatchAlgoliaError","specificResults","formattedResponse","containsRefinement","_hasDisjunctiveRefinements","disjunctiveRefinements","newClient","getClient","derive","pos","hasPendingRequests","algoliasearch_helper","algoliasearchHelper","algoliasearchHelper_1","t3","t3_value","each_blocks","hits_changes","facetDictionary","algoliasearch","searchRes","fetch","ip","json","lat","lon","navigator","geolocation","watchPosition","coords","latitude","longitude","$$invalidate","searchInput"],"mappings":"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"}